{"version":3,"sources":["registerServiceWorker.js","components/TeacherHeader.js","components/CourseRow.js","components/CourseList.js","screens/Loading.js","ApolloQueries.js","screens/Error.js","screens/TeacherDashboard.js","components/InvitationRow.js","components/InvitationList.js","components/StudentCourseRow.js","components/StudentCourseList.js","screens/StudentDashboard.js","components/Error.js","components/InstitutionHeader.js","components/InstitutionAdmins.js","components/InstitutionTeachers.js","components/InstitutionCourses.js","screens/AdminDashboard.js","components/InstitutionRow.js","components/InstitutionList.js","screens/QuandrioDashboard.js","screens/SignIn.js","screens/SignOut.js","screens/SignUp.js","screens/SignedUp.js","screens/SignUpConfirmation.js","components/CourseHeader.js","components/PanelCountRow.js","components/QuestionCountRow.js","components/AnswerCountRow.js","components/ChallengeCountRow.js","components/TestRow.js","components/TestList.js","screens/CourseDashboard.js","components/StudentCourseHeader.js","components/StudentTestRow.js","components/StudentTestList.js","screens/StudentCourseDashboard.js","screens/CourseInvitation.js","screens/AddCourse.js","components/EditCourseInput.js","components/EditCourseHeader.js","screens/EditCourse.js","components/AddPanelButton.js","components/PanelCountButton.js","components/TestHeader.js","components/ChallengeRow.js","components/ChallengeList.js","components/TestChallenges.js","components/TestPerformance.js","screens/TestDashboard.js","components/TestHeaderStudent.js","components/TestStats.js","components/TestQuestionPerformance.js","components/TestQuestionStats.js","screens/StudentTestDashboard.js","components/PanelRow.js","components/PanelSubList.js","components/PanelList2.js","screens/TestPanels.js","screens/StudentTestPanels.js","screens/AddTest.js","components/EditTestInput.js","screens/EditTest.js","screens/PublishTest1.js","components/EditPublishTestInput.js","screens/EditPublishTest.js","components/DropZoneUpload2.js","components/UploadPanel.js","components/AddPanelSubList.js","components/AddPanelList.js","screens/AddPanels.js","screens/Main.js","components/TestPerformanceAll.js","components/UserTestStats.js","screens/StudentPerformance.js","screens/StudentTestPerformance.js","components/ChallengeMessageRow.js","components/ChallengeMessageList.js","components/ChallengeSection3.js","components/ChallengeNavRow.js","components/ChallengeDList.js","screens/ChallengeDashboard3.js","components/CourseStudentList.js","screens/CourseStudents.js","screens/AddInstitution.js","screens/InstitutionDashboard.js","screens/AddAdministrator.js","screens/AddTeacherQuandrio.js","components/EditInstitutionInput.js","screens/EditInstitution.js","components/EditAdministratorInput.js","screens/EditAdministrator.js","components/InstitutionCoursesPersonnel.js","screens/PersonnelDashboard.js","components/CoursePeople.js","components/InstitutionCoursesTable.js","screens/InstitutionCourse.js","components/CoursePeopleStudent.js","screens/InstitutionStudents.js","screens/ChallengeDashboardStudent.js","components/SignInButton.js","components/DashboardButton.js","components/Nav.js","components/Footer.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","TeacherHeader","props","react_default","a","createElement","firstName","lastName","style","padding","Link","to","Button","color","CourseRow","Segment","className","pathname","course_id","id","name","time","tests","length","students","institution","CourseList","map","course","components_CourseRow","Object","assign","key","Loading","Loader","active","Component","ADD_COURSE_MUTATION","gql","_templateObject","TEST_CHALLENGE_QUERY","_templateObject2","CHALLENGE_DASHBOARD_QUERY","_templateObject3","CHALLENGE_DASHBOARD_STUDENT_QUERY","_templateObject4","CHALLENGE_DASHBOARD2_QUERY","_templateObject5","NEW_PANEL_SUBSCRIPTION","_templateObject6","CHALLENGE_MESSAGE_SUBSCRIPTION","_templateObject7","ADD_TEST_MUTATION","_templateObject8","_templateObject9","_templateObject10","TEST_COURSE_QUERY","_templateObject11","COURSE_QUERY","_templateObject12","EDIT_COURSE_MUTATION","_templateObject13","TEST_COURSE_MUTATION","_templateObject14","SEND_INVITES_MUTATION","_templateObject15","COURSE_DASHBOARD_QUERY","_templateObject16","TEACHER_DASHBOARD_QUERY","_templateObject17","STUDENT_COURSE_QUERY","_templateObject18","DELETE_COURSE_MUTATION","_templateObject19","TEST_QUERY","_templateObject20","_templateObject21","LOGIN_MUTATION","_templateObject22","CONFIRMATION_MUTATION","_templateObject23","PANEL_QUERY","_templateObject24","TEST_STATS_QUERY","_templateObject25","DELETE_TEST_MUTATION","_templateObject26","CHALLENGE_TEST_QUERY","_templateObject27","LOGOUT_MUTATION","_templateObject28","ADD_PANEL_MUTATION","_templateObject29","TEST_QUESTION_STATS_QUERY","_templateObject30","_templateObject31","_templateObject32","USER_TEST_STATS_QUERY","_templateObject33","TEST_STATS_PERFORMANCE_QUERY","_templateObject34","TEST_PANEL_STATS_QUERY","_templateObject35","DELETE_PANEL","_templateObject36","CHALLENGE_MESSAGE_QUERY","_templateObject37","ADD_CHALLENGE_MESSAGE_MUTATION","_templateObject38","RELEASE_QUESTIONS_MUTATION","_templateObject39","_templateObject40","PANEL_COUNT_QUERY","_templateObject41","_templateObject42","CHALLENGE_STUDENT_COUNT_QUERY","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject48","NEW_CHALLENGE_SUBSCRIPTION","_templateObject49","_templateObject50","COURSE_STUDENT_QUERY","_templateObject51","NEW_COURSE_DASHBOARD_QUERY","_templateObject52","CHALLENGE_SECTION_QUERY","_templateObject53","_templateObject54","_templateObject55","NEW_PUBLISH_TEST_MUTATION","_templateObject56","_templateObject57","PUBLISH_TEST_REFETCH_QUERY","_templateObject58","EDIT_PUBLISH_TEST_MUTATION","_templateObject59","INSTITUTIONS_QUERY","_templateObject60","ADD_INSTITUTION_MUTATION","_templateObject61","INSTITUTION_QUERY","_templateObject62","EDIT_INSTITUTION_MUTATION","_templateObject63","DELETE_INSTITUTION_MUTATION","_templateObject64","SIGNUP_MUTATION","_templateObject65","SIGNUP_ADMIN_MUTATION","_templateObject66","SIGNUP_TEACHER_MUTATION","_templateObject67","PERSONNEL_QUERY","_templateObject68","EDIT_PERSONNEL_MUTATION","_templateObject69","Error","Message","negative","Icon","TeacherDashboard","userid","Cookies","react_apollo_browser_umd","query","variables","_ref","loading","data","screens_Loading","screens_Error","userToRender","user","teacherCourses","Array","filter","deleted","components_TeacherHeader","components_CourseList","JOIN_MUTATION","InvitationRow_templateObject","InvitationRow","_confirm","_callee","regenerator_default","wrap","_context","prev","next","_this","history","push","stop","this","_this2","invite","courseNumber","teachers","teacher","join","mutation","courseId","inviteId","onCompleted","refetchQueries","InvitationRow_templateObject2","size","onClick","withRouter","InvitationList","invites","components_InvitationRow","StudentCourseRow","StudentCourseList","components_StudentCourseRow","StudentDashboard","sessionStorage","getItem","studentCourses","invitesSentTo","components_InvitationList","components_StudentCourseList","message","graphQLErrors","networkError","InstitutionHeader","institutionId","fetchPolicy","components_Error","_data$institution","display","InstitutionAdmins","column","admins","direction","handleSort","clickedColumn","_this$state","setState","reverse","_","sortBy","_this$state2","minHeight","overflow","attached","Table","sortable","celled","fixed","Header","Row","HeaderCell","sorted","Body","Cell","userId","InstitutionTeachers","InstitutionCourses","courses","height","AdminDashboard","graphQLError","isVisibleGraph","isVisibleNet","JSON","parse","adminInstitutions","InstitutionHeader_InstitutionHeader","address1","address2","city","zip","phone","email","coursesActive","Fragment","margin","Grid","columns","stackable","stretched","Column","fluid","secondary","components_InstitutionAdmins","components_InstitutionTeachers","components_InstitutionCourses","href","onError","_error","InstitutionRow","InstitutionList","components_InstitutionRow","QuandrioDashboard","_JSON$parse","_data$institutions","institutions","count","institutionsActive","components_InstitutionList","SignIn","password","pushToken","isVisible","gerrorMessage","err","i","_callee2","token","_context2","login","_saveUserData","role","setItem","stringify","online","Form","Field","control","Input","label","value","onChange","e","target","placeholder","type","divStyle","SignOut","authMsg","SignUp","signup","SignedUp","confirmEmail","that","assertThisInitialized","axios","url","process","method","confirmationToken","result","grapqhql_resp","request","response","_this$props$match$par","params","CourseHeader","studentsCount","PanelCountRow","test_id","testId","QuestionCountRow","_this$props","AnswerCountRow","answersCount","accuracy","Math","round","ChallengeCountRow","dateFormat","require","TestRow","_this$props$test","test","testNumber","subject","testType","testDate","published","release","questionsCount","panelsCount","challengeCount","Card","Content","basic","disabled","QuestionCountRow_QuestionCountRow","AnswerCountRow_AnswerCountRow","ChallengeCountRow_ChallengeCountRow","PanelCountRow_PanelCountRow","TestList","TestRow_TestRow","CourseDashboard","_ref3","courseToRender","courseDashboard","tests1","courseTestList","components_CourseHeader","components_TestList","StudentCourseHeader","StudentTestRow","padded","textAlign","width","questions","panels","StudentTestList","components_StudentTestRow","StudentCourseDashboard","courseid","_ref2","components_StudentCourseHeader","components_StudentTestList","CourseInvitation","emails","TextArea","AddCourse","department1","schoolId","course_message","addCourse","teacherInstitutions","text","Select","options","event","selection","EditCourseInput","optimisticResponse","__typename","updateCourse","EditCourseHeader","EditCourse","components_EditCourseHeader","components_EditCourseInput","AddPanelButton","PanelCountButton","TestHeader","updateTest","now","Date","testToRender","moment","format","components_AddPanelButton","PanelCountButton_PanelCountButton","releaseDate","ChallengeRow","challenge","fontSize","addedBy","answer","question","addedDate","ChallengeList","values","components_ChallengeRow","TestChallenges","components_ChallengeList","challenges","TestPerformance_templateObject","TestPerformance","stats","testStats","totalCorrect","total","striped","percentCorrect","uuidv4","TestDashboard","components_TestHeader","publishDate","endDate","startTime","endTime","_ref4","subscribeToMore","components_TestChallenges","subscribeToNewChallenges","document","updateQuery","_ref5","subscriptionData","newChallenge","toConsumableArray","concat","_ref6","userTestStats","forEach","element","item","components_TestPerformance","TestHeaderStudent","TestStats","TestQuestionPerformance","TestQuestionStats","testQuestionStats","components_TestQuestionPerformance","StudentTestDashboard","components_TestHeaderStudent","components_TestStats","components_TestQuestionStats","PanelRow","Image","src","panelLink","Description","PanelSubList","subscribeToNewPanels","Group","centered","panelStats","panel","components_PanelRow","PanelList","testPanelStats","PanelSubList_PanelSubList","newPanel","TestPanels","PanelList2","StudentTestPanels","AddTest","handleChange","hasOwnProperty","defineProperty","addTest","testDate1","marginLeft","marginRight","widths","dist","autoComplete","timeFormat","iconPosition","EditTestInput","EditTest","paddingRight","paddingLeft","components_EditTestInput","PublishTest","choice1","choiceCorrect1","choice2","choiceCorrect2","choice3","choiceCorrect3","choice4","choiceCorrect4","graphQLErrorL","publishTest","statStopNumbers","firstPanel","link","Checkbox","fitted","checked","panelId","EditPublishTestInput","editPublishTest","EditPublishTest","components_EditPublishTestInput","DropZoneUpload","progress","loaded","percent","fileUrls","uploadError","deleteError","deletePanel","headers","authorization","config","onDrop","acceptedFiles","rejectedFiles","file_total","uploadFiles","file","formData","FormData","append","post","X-Requested-With","fileURL","secure_url","paddingBottom","es","getRootProps","getInputProps","isDragActive","classNames","dropzone--isActive","Progress","UploadPanel","handleShow","handleHide","content","as","inverted","Dimmer","Dimmable","dimmed","dimmer","onMouseEnter","onMouseLeave","AddPanelSubList","components_UploadPanel","AddPanelList","AddPanelSubList_AddPanelSubList","AddPanels","auth_token","DropZoneUpload2","components_AddPanelList","Main","reactstrap_es","body","TestPerformanceAll","UserTestStats","components_TestPerformanceAll","StudentPerformance","_this$props$location$","components_UserTestStats","StudentTestPerformance","ChallengeMessageRow","Comment","Author","Metadata","calendar","Text","challengeMessage","ChallengeMessageList","messagesEnd","React","createRef","scrollToBottom","current","scrollIntoView","behavior","subscribeToNewChallengeMessage","challengeMessages","components_ChallengeMessageRow","ChallengeSection","changeChallenge","initialChallengeId","challengeId","challengeToRender","choice","choices","correct","components_ChallengeMessageList","newChallengeMsg","challengeMsg","node","onSubmit","marginTop","action","ChallengeNavRow","ChallengeDList","maxHeight","selectable","components_ChallengeNavRow","ChallengeDashboard","ChallengeDList_ChallengeDList","ChallengeSection3","CourseStudents","answers","answerCorrect","CourseStudentList","AddInstitution","addInstitution","required","InstitutionDashboard","AddAdministrator","title","department","AddTeacherQuandrio","EditInstitutionInput","EditInstitution","components_EditInstitutionInput","EditAdministratorInput","EditAdministrator","personnelType","components_EditAdministratorInput","InstitutionCoursesPersonnel","PersonnelDashboard","activeCouresSwitch","teacherCoursesActive","studentCoursesActive","_data$user","Meta","components_InstitutionCoursesPersonnel","CoursePeople","people","InstitutionCoursesTable","InstitutionCourse","_data$course","testActive","questionNum","reduce","b","flat","q","questionAnswers","answersNum","components_CoursePeople","components_InstitutionCoursesTable","CoursePeopleStudent","InstitutionStudents","components_CoursePeopleStudent","ChallengeDashboardStudent","SignInButton","logout","removeItem","DashboardButton","navSwitch","Nav","components_DashboardButton","components_SignInButton","Footer","App","components_Nav","Switch","Route","exact","path","component","SignUpConfirmation","ChallengeDashboard2","components_Footer","token1","httpLink","createHttpLink","uri","wsLink","WebSocketLink","reconnect","connectionParams","fullHttpLink","setContext","asyncToGenerator","mark","abrupt","objectSpread","_x","_x2","apply","arguments","split","_getMainDefinition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","BrowserRouter","getElementById","URL","origin","addEventListener","fetch","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ee2dcfa1.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport '../css/App.css';\nimport { Link } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\n\nconst TeacherHeader = (props) =>\n  <div>\n  <h3>{props.firstName} {props.lastName}'s Courses</h3>\n  <div style={{padding:\"15px\"}}>\n  <Link  to=\"/add_course\"><Button color='blue'>Add Course</Button></Link>\n  </div>\n  </div>\n\nexport default TeacherHeader\n","import React from 'react';\nimport '../css/App.css';\nimport { Segment } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\n\n\nconst CourseRow = (props) =>\n\n<Segment >\n  <div className=\"course_row\">\n\n  <div className=\"course_cell\">\n  <h5>\n  <Link  to={{\n    pathname: \"/course_dashboard\",\n    state:\n      { course_id: props.id }\n    }} >\n\n  {props.name}</Link>\n  </h5>\n  </div>\n\n\n\n\n\n  <div className=\"course_cell\">\n\n  {props.time}\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  Tests: {props.tests.length}\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  Students: {props.students.length}\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  {props.institution.name}\n\n  </div>\n\n  </div>\n\n  </Segment >\n\n//  </CardText>\n\n//</Card>\n\n\nexport default CourseRow\n","import React from 'react';\nimport '../css/App.css';\n\nimport CourseRow from './CourseRow'\n\nconst CourseList = (props) =>\n<div>\n\n  <h5>Total Courses: {props[0].length}</h5>\n\n  <div className=\"coursecontainer\">\n    {props[0].map(course =>\n      <CourseRow key={course.id} {...course} />\n    )}\n  </div>\n    </div>\n\nexport default CourseList\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Loader } from 'semantic-ui-react'\n\n\nclass Loading extends Component {\n\n    render() {\n\n      return (\n        <div className=\"main\">\n        <div className=\"dashboard\">\n          <div className=\"signin\">\n          <Loader  active/>\n      <div>\n      </div>\n      </div>\n      </div>\n      </div>\n\n  )\n}\n}\n\n\nexport default Loading;\n","import gql from \"graphql-tag\";\n\n\nexport const ADD_COURSE_MUTATION = gql`\n  mutation AddCourse(\n    $name: String!,\n    $time:String,\n    $schoolId: String,\n    $institutionId: ID!,\n    $department1: String\n  ){\n    addCourse(\n      name: $name,\n      time: $time,\n      deleted: false,\n      courseNumber: $schoolId,\n      institutionId: $institutionId,\n      department1: $department1\n    ){\n    id\n    name\n    time\n    deleted\n    institution{\n      id\n      name\n    }\n    students{\n      id\n    }\n    tests{\n      id\n      panels{\n        id\n      }\n    }\n  }\n}\n`\n\nexport const TEST_CHALLENGE_QUERY = gql`\nquery TestChallenges($testId:ID!){\n  test(id:$testId){\n      id\n      subject\n      testNumber\n      testDate\n      course{\n        id\n        name\n        courseNumber\n      }\n    }\n  }\n`\n\nexport const CHALLENGE_DASHBOARD_QUERY = gql`\nquery TestChallenges($test_id:ID!){\n  test(id:$test_id){\n      id\n      subject\n      testNumber\n      testDate\n      course{\n        id\n        name\n        courseNumber\n      }\n      questions{\n        id\n        challenges{\n          id\n          challenge\n          addedBy{\n            id\n            firstName\n            lastName\n          }\n          challengeMessages{\n            id\n            challengeMessage\n            addedDate\n            addedBy{\n              id\n              firstName\n              lastName\n            }\n          }\n          question{\n            id\n            question\n            choices{\n              id\n              correct\n              choice\n            }\n\t\t\t\t\t\tquestionAnswers{\n              id\n              addedBy{\n                id\n                firstName\n              }\n              answer{\n                id\n                choice\n              }\n            }\n            panel{\n              id\n              link\n            }\n            addedBy{\n              id\n              firstName\n              lastName\n            }\n          }\n\n        }\n      }\n\n    }\n}\n`\n\nexport const CHALLENGE_DASHBOARD_STUDENT_QUERY = gql`\nquery ChallengeTestQuery($testId:ID!, $userId:ID!){\nchallenges(where:{AND:[{answer:{question:{test:{id:$testId}}}},{addedBy:{id:$userId}}]},orderBy:addedDate_DESC){\n  challenges{\n    id\n    challenge\n    addedDate\n    addedBy{\n      id\n      firstName\n      lastName\n    }\n    answer{\n      id\n      answer{\n        id\n        choice\n      }\n      question{\n        id\n        question\n        addedDate\n        addedBy{\n          id\n          firstName\n          lastName\n        }\n        test{\n          subject\n        }\n      }\n    }\n    answer{\n      id\n      question{\n        id\n        panel{\n          id\n          link\n        }\n        question\n        addedDate\n        addedBy{\n          id\n          firstName\n          lastName\n        }\n      }\n    }\n  }\n}\n}\n`\n\nexport const CHALLENGE_DASHBOARD2_QUERY = gql`\nquery ChallengeTestQuery($testId:ID!){\n  challenges(where:{answer:{question:{test:{id:$testId}}}},orderBy:addedDate_DESC){\n    challenges{\n      id\n      challenge\n      addedDate\n      addedBy{\n        id\n        firstName\n        lastName\n      }\n      answer{\n        id\n        answer{\n          id\n          choice\n        }\n        question{\n          id\n          question\n          addedDate\n          addedBy{\n            id\n            firstName\n            lastName\n          }\n          choices{\n            id\n            choice\n          }\n        }\n      }\n      answer{\n        id\n        question{\n          id\n          panel{\n            id\n            link\n          }\n          question\n          addedDate\n          addedBy{\n            id\n            firstName\n            lastName\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport const NEW_PANEL_SUBSCRIPTION = gql`\nsubscription NewPanelSubscription($testId:ID!){\n  newPanel(testId:$testId){\n    id\n    panelLink\n    total\n    totalCorrect\n    percentCorrect\n    question\n  }\n}\n`\n\nexport const CHALLENGE_MESSAGE_SUBSCRIPTION = gql`\n  subscription ChallengeMsgSub($challengeId:ID!){\n    challengeMsg(challengeId:$challengeId){\n      node{\n        id\n        challengeMessage\n        addedDate\n        addedBy{\n          id\n          firstName\n          lastName\n        }\n      }\n    }\n  }\n  `\n\nexport const PERFORMANCE_CHALLENGE_QUERY = gql`\nquery TestChallenges($test_id:ID!){\n  tests(where:{id:$test_id}){\n    tests{\n      id\n      subject\n      testNumber\n      testDate\n      course{\n        id\n        name\n        courseNumber\n      }\n      questions{\n        id\n        question\n        addedBy{\n          firstName\n          lastName\n        }\n        challenges{\n          id\n          challenge\n          addedBy{\n            firstName\n            lastName\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport const CHALLENGE_QUERY = gql`\nquery TestChallenges($test_id:ID!){\n  test(id:$test_id){\n      id\n      subject\n      testNumber\n      testDate\n      course{\n        id\n        name\n        courseNumber\n      }\n      panels{\n        link\n        id\n      }\n      }\n    }\n`\nexport const ADD_TEST_MUTATION = gql`\nmutation AddTest(\n  $subject:String!\n  $testDate: DateTime,\n  $testNumber: String,\n  $testType: String!,\n  $courseId:ID!){\n    addTest(subject:$subject,\n      testDate:$testDate,\n      testNumber:$testNumber,\n      testType: $testType,\n      courseId:$courseId){\n        id\n      }\n    }\n    `\n\nexport const TEST_COURSE_QUERY = gql`\n  query COURSE($course_id:ID!){\n    course(id:$course_id){\n      name\n      courseNumber\n      time\n      department1\n      id\n    }\n  }\n  `\nexport const COURSE_QUERY = gql`\nquery CourseQuery($courseid:ID!){\n  course(id:$courseid){\n    id\n    name\n    courseNumber\n    time\n    institution{\n      id\n      name\n    }\n    tests{\n      id\n      subject\n    }\n    students{\n      id\n      firstName\n      lastName\n      email\n    }\n    teachers{\n      id\n      firstName\n      lastName\n      email\n    }\n    tests{\n      id\n      subject\n      deleted\n      testNumber\n      release\n      published\n      testDate\n      questions{\n        id\n        questionAnswers{\n          id\n          answerCorrect\n        }\n      }\n      panels{\n        id\n      }\n    }\n  }\n}\n`\n\nexport const EDIT_COURSE_MUTATION = gql`\n  mutation UpdateCourse(\n    $name: String!,\n    $time:String,\n    $courseNumber: String,\n    $department1: String\n    $id:ID!\n  ){\n    updateCourse(\n      name: $name,\n      time: $time,\n      courseNumber: $courseNumber,\n      department1: $department1\n      id:$id\n    ){\n    name\n    time\n    courseNumber\n    department1\n    id\n  }\n}\n`\n\nexport const TEST_COURSE_MUTATION = gql`\n  mutation UpdateTest(\n    $subject: String!,\n    $testDate:DateTime,\n    $testNumber: String,\n    $id:ID!\n  ){\n    updateTest(\n      subject: $subject,\n      testDate: $testDate,\n      testNumber: $testNumber\n      id:$id\n    ){\n    id\n    subject\n    testNumber\n    testDate\n  }\n}\n`\n\nexport const SEND_INVITES_MUTATION = gql`\nmutation SendInvites($emails:String,$course_id:ID!){\n  sendInvite(emails:$emails,\n    courseId:$course_id){\n      authMsg\n    }\n}\n`\n\nexport const COURSE_DASHBOARD_QUERY = gql`\nquery CourseQuery($courseid:ID!){\n  course(id:$courseid){\n    id\n    name\n    courseNumber\n    time\n    institution{\n      id\n      name\n    }\n    students{\n      id\n    }\n    tests{\n      id\n      subject\n      deleted\n      testNumber\n      release\n      testDate\n      course{\n        id\n        name\n        courseNumber\n      }\n      questions{\n        id\n        questionAnswers{\n          id\n          challenge{\n            id\n            challenge\n          }\n        answer{\n          id\n          choice\n          correct\n        }\n      }\n      }\n      panels{\n        id\n      }\n    }\n  }\n}\n`\n\nexport const TEACHER_DASHBOARD_QUERY = gql`\nquery UserQuery($userid: ID!) {\n  user(id: $userid){\n    id\n    firstName\n    lastName\n    teacherCourses{\n      id\n      name\n      time\n      deleted\n      institution{\n        id\n        name\n      }\n      students{\n        id\n      }\n      tests{\n        id\n        testType\n        panels{\n          id\n        }\n      }\n    }\n  }\n}\n`\n\n\nexport const STUDENT_COURSE_QUERY = gql`\nquery UserQuery($userid: ID!) {\n  user(id: $userid){\n    id\n    firstName\n    lastName\n    invitesSentTo{\n      id\n      course{\n        id\n        courseNumber\n        name\n        time\n        teachers{\n          id\n          firstName\n          lastName\n        }\n        institution{\n          id\n          name\n        }\n      }\n    }\n    studentCourses{\n      id\n      name\n      time\n      deleted\n      institution{\n        id\n        name\n      }\n      teachers{\n        id\n        firstName\n        lastName\n      }\n      tests{\n        id\n      }\n    }\n  }\n}\n`\n\nexport const DELETE_COURSE_MUTATION = gql`\n  mutation DeleteCourse(\n    $course_id: ID!,\n  ){\n    updateCourse(\n      id: $course_id,\n      deleted: true,\n    ){\n    name\n    id\n  }\n}\n`\n\nexport const TEST_EDIT_QUERY = gql`\n  query TestQuery($test_id: ID!){\n    test(id:$test_id){\n      subject\n      testDate\n      testNumber\n      id\n      course {\n        id\n        name\n        courseNumber\n      }\n  }\n}\n`\n\nexport const TEST_QUERY = gql`\nquery TestQuery($test_id:ID!){\n  test(id:$test_id){\n      id\n      subject\n      testNumber\n      testDate\n      release\n      releaseDate\n      published\n      publishDate\n      startTime\n      endTime\n      endDate\n      testType\n      questions{\n        id\n      }\n    \tcourse{\n        id\n        name\n        courseNumber\n      }\n      panels{\n        link\n        id\n    }\n    }\n  }\n`\n\nexport const LOGIN_MUTATION = gql`\nmutation LoginMutation($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    token\n    user{\n      id\n      firstName\n      lastName\n      online\n      role\n      teacherInstitutions {\n        id\n        name\n      }\n      studentInstitutions {\n        id\n        name\n      }\n      adminInstitutions{\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const CONFIRMATION_MUTATION = gql`\n  mutation ConfirmEmail($email:String!, $confirmationToken:String!){\n    confirmEmail(email:$email,confirmationToken:$confirmationToken){\n      authMsg\n    }\n  }\n  `\n\n\nexport const PANEL_QUERY = gql`\nquery TestChallenges($test_id:ID!){\n  test(id:$test_id){\n    id\n      subject\n      testNumber\n      testDate\n      course{\n        id\n        name\n        courseNumber\n      }\n      panels{\n        id\n        link\n        questions{\n         question\n         questionAnswers{\n           answerCorrect\n         }\n        }\n      }\n   }\n}\n`\nexport const TEST_STATS_QUERY = gql`\nquery TestStats($testId:ID!,$courseId:ID!){\n  userTestStats(testId:$testId,\n  courseId:$courseId){\n    name\n    totalCorrect\n    percentCorrect\n    total\n  }\n}\n`\n\nexport const DELETE_TEST_MUTATION = gql`\n  mutation DeleteTest(\n    $test_id: ID!,\n  ){\n    updateTest(\n      id: $test_id,\n      deleted: true,\n    ){\n    id\n    course{\n      id\n    }\n  }\n}\n`\n\nexport const CHALLENGE_TEST_QUERY = gql`\nquery ChallengeTestQuery($testId:ID!){\n  challenges(where:{answer:{question:{test:{id:$testId}}}},orderBy:addedDate_DESC){\n    challenges{\n      id\n      challenge\n      addedDate\n      addedBy{\n        firstName\n        lastName\n      }\n      answer{\n        question{\n          question\n          addedDate\n          addedBy{\n            firstName\n            lastName\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport const LOGOUT_MUTATION = gql`\n  mutation {\n    logout{\n      authMsg\n      user{\n        online\n        firstName\n        lastName\n      }\n    }\n  }\n`\n\nexport const ADD_PANEL_MUTATION = gql`\nmutation AddPanel($testId:ID!, $link:String!){\n  addPanel(link:$link, testId:$testId){\n    link\n    label\n    id\n  }\n}\n  `\n\nexport const ADD_PANELS_MUTATION = gql`\n  mutation AddPanels( $testId: ID!, $uploadsList: String! ){\n    addPanels( uploadsList: $uploadsList, testId: $testId ){\n        link\n        id\n        test{\n          panels{\n            id\n            link\n            }\n          }\n        }\n      }\n    `\n\nexport const PHOTO_LABEL_MUTATION = gql`\n  mutation SendLink($testId:ID!, $link:String!, $label: String){\n    addLabeledPhoto(link:$link, testId:$testId, label: $label){\n      link\n      id\n      test{\n        id\n      }\n    }\n  }\n  `\n\n  export const TEST_QUESTION_STATS_QUERY = gql`\n  query TestQuestionStats($testId:ID!){\n    testQuestionStats(testId: $testId){\n      question\n      total\n      totalCorrect\n      percentCorrect\n  }\n  }\n  `\n\nexport const USER_TEST_STATS_QUERY = gql`\nquery TestStats($testId:ID!, $courseId:ID!){\n  userTestStats(testId: $testId,\n  courseId: $courseId){\n    name\n    totalCorrect\n    percentCorrect\n    total\n  }\n}\n`\n\nexport const TEST_STATS_PERFORMANCE_QUERY = gql`\nquery TestStats($testId:ID!){\n  testStats(testId:$testId){\n    total\n    totalCorrect\n    percentCorrect\n  }\n}\n`\n\nexport const TEST_PANEL_STATS_QUERY = gql`\nquery PanelQuery($testId:ID!){\n  testPanelStats(testId:$testId){\n      id\n      panelLink\n      total\n      totalCorrect\n    \tpercentCorrect\n      question\n    }\n  }\n`\n\nexport const DELETE_PANEL = gql`\nmutation DeletePanel($panelId:ID!){\n  deletePanel(id:$panelId){\n    id\n  }\n}\n`\n\nexport const CHALLENGE_MESSAGE_QUERY = gql`\nquery ChallengeMessages($challengeId:ID!){\n   challengeMessages(where:{challenge:{id:$challengeId}}){\n    challengeMessages{\n      id\n      challengeMessage\n      addedDate\n      addedBy{\n        id\n        firstName\n        lastName\n      }\n    }\n  }\n}\n`\n\nexport const ADD_CHALLENGE_MESSAGE_MUTATION = gql`\nmutation AddChallengeMessage($challengeId: ID!, $challengeMessage: String!) {\n  addChallengeMessage(challengeMessage: $challengeMessage,\n  challengeId: $challengeId){\n    addedBy{\n      firstName\n    }\n    challengeMessage\n    challenge{\n      answer{\n        answer{\n          choice\n        }\n      }\n    }\n  }\n}\n`\n\nexport const USER_INSTITUTION_QUERY = gql`\nquery UserInstition($userid:ID!){\nuser(id:$userid){\n  teacherInstitution{\n    id\n    name\n  }\n}\n}\n`\n\nexport const RELEASE_QUESTIONS_MUTATION = gql`\n  mutation ReleaseQuestions(\n    $test_id: ID!\n    $releaseDate: DateTime\n  ){\n    updateTest(\n      id: $test_id,\n      release:true,\n      releaseDate: $releaseDate\n    ){\n    id\n    course {\n      id\n    }\n  }\n}\n`\n\nexport const PANEL_COUNT_SUBSCRIPTION = gql`\nsubscription PanelCountSubscription($testId:ID!){\n\tpanelCount(testId:$testId){\n    count\n  }\n}\n`\n\nexport const PANEL_COUNT_QUERY = gql`\nquery PanelCountQuery($testId:ID!){\n  panels(where:{test:{id:$testId}}){\n    count\n  }\n}\n`\n\nexport const QUESTION_COUNT_SUBSCRIPTION = gql`\nsubscription QuestionCountSubscription($testId:ID!){\n\tquestionCount(testId:$testId){\n    count\n  }\n}\n`\n\nexport const QUESTION_COUNT_QUERY = gql`\nquery QuestionCountQuery($testId:ID!){\n  questions(where:{test:{id:$testId}}){\n    count\n  }\n}\n`\n\nexport const ANSWER_COUNT_QUERY = gql`\nquery AnswerCountQuery($testId:ID!){\n  answers(where:{question:{test:{id:$testId}}}){\n    count\n    answers{\n      answer{\n        correct\n      }\n    }\n  }\n}\n`\n\nexport const CHALLENGE_COUNT_SUBSCRIPTION = gql`\nsubscription ChallengeCountSubscription($testId:ID!){\n\tchallengeCount(testId:$testId){\n    count\n  }\n}\n`\n\nexport const CHALLENGE_COUNT_QUERY = gql`\nquery ChallengeCountQuery($testId:ID!){\n  challenges(where:{answer:{question:{test:{id:$testId}}}}){\n    count\n  }\n}\n`\n\nexport const CHALLENGE_STUDENT_COUNT_QUERY = gql`\nquery ChallengeCountQuery($testId:ID!, $userId:ID!){\n  challenges(where:{AND:[{answer:{question:{test:{id:$testId}}}},{addedBy:{id:$userId}}]},orderBy:addedDate_DESC){\n    count\n  }\n}\n`\n\nexport const ANSWER_STATS_SUBSCRIPTION = gql`\nsubscription AnswerStats($testId:ID!){\n  answerCount(testId:$testId){\n    total\n    totalCorrect\n    percentCorrect\n  }\n}\n`\n\nexport const NEW_CHALLENGE_SUBSCRIPTION = gql`\nsubscription NewChallenge($testId:ID!){\n  newChallenge(testId:$testId){\n    node{\n      id\n      challenge\n      addedDate\n      addedBy{\n        id\n        firstName\n        lastName\n      }\n      answer{\n        id\n        answer{\n          id\n          choice\n        }\n        question{\n          id\n          question\n          addedDate\n          addedBy{\n            id\n            firstName\n            lastName\n          }\n          choices{\n            id\n            choice\n          }\n        }\n      }\n      answer{\n        id\n        question{\n          id\n          panel{\n            id\n            link\n          }\n          question\n          addedDate\n          addedBy{\n            id\n            firstName\n            lastName\n          }\n        }\n      }\n    }\n  }\n}\n  `\n\nexport const COURSE_STUDENT_QUERY = gql`\nquery CourseStudentsQuery($courseId:ID!){\n  course(id:$courseId){\n    id\n    name\n    courseNumber\n    time\n    students{\n      id\n      firstName\n      lastName\n      answers{\n        id\n        answerCorrect\n      }\n    }\n    }\n  }\n`\n\nexport const NEW_COURSE_DASHBOARD_QUERY = gql`\nquery CourseDashboardQuery($courseId:ID!){\n  courseDashboard(courseId:$courseId){\n    id\n    name\n    courseNumber\n    time\n    deleted\n    studentCount\n    testCount\n    courseTestList{\n      id\n      deleted\n      subject\n      testDate\n      testNumber\n      release\n      releaseDate\n      published\n      publishDate\n      panelsCount\n      questionsCount\n      accuracy\n      answersCount\n      challengeCount\n      testType\n    }\n  }\n}\n`\n\nexport const NEW_COURSE_DASHBOARD_QUERY2 = gql`\nquery CourseDashboardQuery($courseId:ID!){\n  courseDashboard(courseId:$courseId){\n    id\n    name\n    courseNumber\n    time\n    deleted\n    studentCount\n    testCount\n    courseTestList{\n      id\n      deleted\n    }\n  }\n}\n`\n\nexport const TEST_LIST_QUERY2 = gql`\nquery TestListQuery($testId:ID!){\n  testList(testId:$testId){\n      id\n      deleted\n      subject\n      testDate\n      testNumber\n      release\n      releaseDate\n      published\n      publishDate\n      panelsCount\n      questionsCount\n      accuracy\n      answersCount\n      challengeCount\n  }\n}\n`\n\nexport const CHALLENGE_SECTION_QUERY = gql`\nquery ChallengeQuery($challengeId:ID!){\n  challenge(id:$challengeId){\n    id\n    challenge\n    addedBy{\n      id\n      firstName\n      lastName\n    }\n    addedDate\n  \tanswer{\n      id\n      answer{\n        id\n        choice\n        question{\n          id\n          addedBy{\n            id\n            firstName\n            lastName\n          }\n          panel{\n            id\n            link\n          }\n          test{\n            id\n          }\n          question\n          choices{\n            id\n            choice\n            correct\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const PUBLISH_TEST_MUTATION = gql`\n  mutation PublishTest(\n    $startHour:String!\n    $testEndDate: DateTime,\n    $endHour: String!\n    $testId:ID!){\n      publishTest(\n        startHour:$startHour,\n        endHour:$endHour,\n        testEndDate:$testEndDate,\n        testId:$testId){\n          id\n        }\n      }\n    `\nexport const NEW_PUBLISH_TEST_MUTATION = gql`\nmutation PublishTest(\n  $testId:ID!,\n  $startTime:String!,\n  $endTime:String!,\n  $endDate:DateTime!,\n  $panelId:ID!,\n  $question:String!,\n  $choice1:String!,\n  $choiceCorrect1:Boolean!,\n  $choice2:String!,\n  $choiceCorrect2:Boolean!,\n  $choice3:String!,\n  $choiceCorrect3:Boolean!,\n  $choice4:String!,\n  $choiceCorrect4:Boolean!){\n    publishTest(\n      testId:$testId,\n      startTime:$startTime,\n      endTime:$endTime,\n      endDate:$endDate,\n      panelId:$panelId,\n      question:$question,\n      choice1:$choice1,\n      choiceCorrect1:$choiceCorrect1,\n      choice2:$choice2,\n      choiceCorrect2:$choiceCorrect2,\n      choice3:$choice3,\n      choiceCorrect3:$choiceCorrect3,\n      choice4:$choice4,\n      choiceCorrect4:$choiceCorrect4){\n        id\n      }\n}\n`\n\nexport const PUBLISH_TEST_REFETCH_QUERY = gql`\nquery TestQuery($test_id:ID!){\n  test(id:$test_id){\n      id\n      subject\n      testNumber\n      testDate\n      release\n      releaseDate\n      published\n      publishDate\n      questions{\n        challenges{\n          challenge\n          id\n          question{\n            question\n            addedBy{\n              firstName\n              lastName\n            }\n          }\n          addedBy{\n            firstName\n            lastName\n          }\n        }\n      }\n      course{\n        id\n        name\n        courseNumber\n      }\n      panels{\n        id\n    }\n    }\n  }\n`\n\nexport const EDIT_PUBLISH_TEST_MUTATION = gql`\nmutation EditPublishTest(\n  $published:Boolean\n  $startTime:String\n  $endDate: DateTime,\n  $endTime: String\n  $testId:ID!){\n    editPublishTest(\n      published:$published,\n      startTime:$startTime,\n      endTime:$endTime,\n      endDate:$endDate,\n      testId:$testId){\n        id\n      }\n    }\n    `\n\nexport const INSTITUTIONS_QUERY = gql`\nquery InstitutionsQuery{\n  institutions{\n    count\n    institutions{\n      id\n      name\n      type\n      admins{\n        id\n        firstName\n        lastName\n      }\n      courses{\n        id\n        name\n        deleted\n      }\n      teachers{\n        id\n        firstName\n        lastName\n      }\n    }\n  }\n}\n`\n\nexport const ADD_INSTITUTION_MUTATION = gql`\n  mutation AddInstitution($name:String!,$type:String,$address1:String,$address2:String,$city:String,$state: String, $zip: String, $phone: String, $email: String){\n    addInstitution(name:$name,type:$type,address1:$address1, address2: $address2, city: $city, state: $state, zip: $zip, phone: $phone, email: $email){\n      id\n      name\n      type\n    }\n  }\n  `\n\nexport const INSTITUTION_QUERY = gql`\nquery InstitutionQuery($institutionId:ID!){\n  institution(id:$institutionId){\n    id\n    type\n    name\n    address1\n    address2\n    city\n    state\n    zip\n    phone\n    email\n    admins{\n      id\n      firstName\n      lastName\n      email\n      teacherCourses{\n        id\n        deleted\n      }\n    }\n    courses{\n      id\n      name\n      deleted\n      institution{\n        id\n        name\n      }\n      students{\n        id\n      }\n    }\n    students{\n      id\n      firstName\n      lastName\n      email\n      studentCourses{\n        id\n        deleted\n      }\n    }\n    teachers{\n      id\n      firstName\n      lastName\n      email\n      teacherCourses{\n        id\n        deleted\n      }\n    }\n  }\n}\n`\n\nexport const EDIT_INSTITUTION_MUTATION = gql`\nmutation EditInstitution(\n  $id:ID!,\n  $name:String,\n  $address1:String,\n  $address2:String,\n  $city:String,\n  $state:String,\n  $zip:String,\n  $email:String,\n  $phone:String\n){\n  updateInstitution(id:$id,\n  name:$name,\n  address1:$address1,\n  address2:$address2,\n  city:$city,\n  state:$state,\n  zip:$zip,\n  email:$email,\n  phone:$phone,\n  ){\n    id\n    name\n    address1\n    address2\n    city\n    state\n    zip\n    email\n    phone\n  }\n}\n`\n\nexport const DELETE_INSTITUTION_MUTATION = gql`\nmutation DeleteInstitution($institutionId:ID!){\n  deleteInstitution(id:$institutionId){\n    id\n  }\n}\n`\n\nexport const SIGNUP_MUTATION = gql`\n  mutation Signup($firstName: String!,$lastName:String!,$email: String!,$password: String!,$role: String!){\n    signup(firstName:$firstName,lastName:$lastName,\n    email:$email, password:$password, role: $role){\n      authMsg\n      user{\n        firstName\n        lastName\n      }\n    }\n  }\n  `\n\nexport const SIGNUP_ADMIN_MUTATION = gql`\n  mutation SignUpAdmin($email:String!,\n    $password:String!,\n    $firstName:String!,\n    $lastName:String!,\n    $title: String,\n    $address1:String,\n    $address2:String,\n    $city:String,\n    $state: String,\n    $zip: String,\n    $phone: String,\n    $role:String!,\n    $institutionId:ID!){\n  signupAdmin(email:$email,\n    password:$password,\n    firstName:$firstName,\n    lastName:$lastName,\n    title: $title,\n    address1:$address1,\n    address2: $address2,\n    city: $city,\n    state: $state,\n    zip: $zip,\n    phone: $phone,\n    role:$role,\n    institutionId:$institutionId){\n      user{\n        firstName\n        lastName\n        adminInstitutions{\n          name\n        }\n      }\n    }\n  }\n  `\n  export const SIGNUP_TEACHER_MUTATION = gql`\n    mutation SignUpTeacher($email:String!,\n      $password:String!,\n      $firstName:String!,\n      $lastName:String!,\n      $title: String,\n      $address1:String,\n      $address2:String,\n      $city:String,\n      $state: String,\n      $zip: String,\n      $phone: String,\n      $role:String!,\n      $institutionId:ID!){\n    signupTeacher(email:$email,\n      password:$password,\n      firstName:$firstName,\n      lastName:$lastName,\n      title: $title,\n      address1:$address1,\n      address2: $address2,\n      city: $city,\n      state: $state,\n      zip: $zip,\n      phone: $phone,\n      role:$role,\n      institutionId:$institutionId){\n        user{\n          firstName\n          lastName\n          teacherInstitutions{\n            name\n          }\n        }\n      }\n    }\n    `\n\nexport const PERSONNEL_QUERY = gql`\nquery PersonnelQuery($userId:ID!){\n  user(id:$userId){\n    id\n    firstName\n    lastName\n    email\n    phone\n    title\n    department\n    address1\n    address2\n    city\n    state\n    zip\n    role\n    teacherCourses{\n      id\n      name\n      courseNumber\n      institution{\n        id\n        name\n      }\n      deleted\n      students{\n        id\n      }\n    }\n    studentCourses{\n      id\n      name\n      courseNumber\n      deleted\n      institution{\n        id\n        name\n      }\n      students{\n        id\n      }\n    }\n  }\n}\n`\n\nexport const EDIT_PERSONNEL_MUTATION = gql`\nmutation EditPersonnel($userId: ID!,\n  \t$email:String!,\n    $firstName:String!,\n    $lastName:String!,\n    $title: String,\n    $department: String,\n    $address1:String,\n    $address2:String,\n    $city:String,\n    $state: String,\n    $zip: String,\n    $phone: String){\n  updatePersonnel(\n    userId:$userId,\n    email:$email,\n    firstName:$firstName,\n    lastName:$lastName,\n    title: $title,\n    department: $department,\n    address1:$address1,\n    address2: $address2,\n    city: $city,\n    state: $state,\n    zip: $zip,\n    phone: $phone){\n      \tid\n      }\n    }\n  `\n","import React from 'react'\nimport '../css/App.css'\nimport { Message,Icon } from 'semantic-ui-react'\n\nconst Error = props =>\n\n<div className=\"main\">\n{console.log(props)}\n<div className=\"coursecontainer\">\n\n\n      <Message negative>\n      <div><Icon name='warning sign'  /></div>\n\n      Error\n      </Message>\n\n\n\n      </div>\n    </div>\n\n\nexport default Error\n","import React,{Component} from 'react'\nimport * as Cookies from \"js-cookie\"\nimport '../css/App.css'\nimport { Query } from \"react-apollo\"\n\nimport TeacherHeader from '../components/TeacherHeader'\nimport CourseList from '../components/CourseList'\nimport Loading from './Loading'\n\n\nimport {TEACHER_DASHBOARD_QUERY} from '../ApolloQueries'\n\nimport Error from './Error'\n\nclass TeacherDashboard extends Component {\n\n  render() {\n\n    const userid = Cookies.get('userid')\n\n    return (\n\n        <Query query={TEACHER_DASHBOARD_QUERY} variables={{ userid }} >\n              {({ loading, error, data }) => {\n                if (loading) return <Loading />\n                if (error) return <Error error={error} />\n\n                const userToRender = data.user\n                const teacherCourses = new Array(userToRender.teacherCourses.filter(course => !course.deleted))\n\n                return (\n                  <div className=\"main\">\n\n                    <div className=\"container\">\n\n                      <TeacherHeader {...userToRender} />\n\n                    <div className=\"coursecontainer\">\n\n                      <CourseList  {...teacherCourses} />\n\n                    </div>\n\n                  </div>\n\n                </div>\n              )\n            }}\n          </Query>\n    )\n  }\n}\n\nexport default TeacherDashboard\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Segment, Button } from 'semantic-ui-react'\nimport { Mutation } from \"react-apollo\";\nimport {withRouter} from \"react-router-dom\"\n\nimport gql from \"graphql-tag\";\n\nconst JOIN_MUTATION = gql`\n  mutation JoinCourse(\n    $inviteId: ID!,\n    $courseId: ID!\n  ){\n    joinCourse(inviteId: $inviteId,\n      courseId: $courseId){\n        authMsg\n      }\n    }\n`\n\nclass InvitationRow extends Component {\n\nrender() {\n\n    return (\n\n<Segment >\n  <div className=\"course_row\">\n\n  <div className=\"course_cell\">\n  <h6>\n    {this.props.invite.course.name} - {this.props.invite.course.courseNumber}\n  </h6>\n  </div>\n\n  <div className=\"course_cell\">\n\n    {this.props.invite.course.time}\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  {this.props.invite.course.teachers.map(teacher => teacher.firstName + ' ' + teacher.lastName).join()}\n\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  {this.props.invite.course.institution.name}\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  <Mutation\n      mutation={JOIN_MUTATION}\n      variables={{ courseId: this.props.invite.course.id, inviteId: this.props.invite.id }}\n      onCompleted={data => this._confirm(data)}\n      refetchQueries={() => {\n         return [{\n            query: gql`\n            query UserQuery($userid: ID!) {\n              user(id: $userid){\n                id\n                firstName\n                lastName\n                invitesSentTo{\n                  id\n                  course{\n                    id\n                    courseNumber\n                    name\n                    time\n                    teachers{\n                      id\n                      firstName\n                      lastName\n                    }\n                    institution{\n                      id\n                      name\n                    }\n                  }\n                }\n                studentCourses{\n                  id\n                  name\n                  time\n                  deleted\n                  institution{\n                    id\n                    name\n                  }\n                  teachers{\n                    id\n                    firstName\n                    lastName\n                  }\n                  tests{\n                    id\n                  }\n                }\n              }\n            }\n          `,\n            variables: { userid: this.props.userid }\n        }];\n    }}\n       >\n      {mutation => (\n\n        <Button size=\"tiny\" color='blue' onClick={mutation}>Join</Button>\n\n      )}\n    </Mutation>\n\n  </div>\n\n  </div>\n\n  </Segment >\n\n)\n\n}\n_confirm = async data => {\n  this.props.history.push({pathname: `/student_dashboard`})\n}\n}\n\n\nexport default withRouter(InvitationRow)\n","import React from 'react';\nimport '../css/App.css';\n\nimport InvitationRow from './InvitationRow'\n\nconst InvitationList = (props) =>\n<div>\n\n\n  <div className=\"coursecontainer\">\n    {props.invites.map(invite =>\n      <InvitationRow key={invite.id} userid={props.userid} invite={invite} />\n    )}\n  </div>\n    </div>\n\nexport default InvitationList\n","import React from 'react';\nimport '../css/App.css';\nimport { Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst StudentCourseRow = (props) =>\n\n<Segment >\n  <div className=\"course_row\">\n\n  <div className=\"course_cell\">\n  <h5>\n  <Link  to={{\n    pathname: \"/student_course_dashboard\",\n    state:\n      { course_id: props.id }\n    }} >\n\n  {props.name}</Link>\n  </h5>\n  </div>\n\n  <div className=\"course_cell\">\n\n  {props.time}\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  {props.teachers.map(teacher => teacher.firstName + ' ' + teacher.lastName).join()}\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  Tests: {props.tests.length}\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  {props.institution.name}\n\n  </div>\n\n  </div>\n\n  </Segment >\n\n//  </CardText>\n\n//</Card>\n\n\nexport default StudentCourseRow\n","import React from 'react';\nimport '../css/App.css';\n\nimport StudentCourseRow from './StudentCourseRow'\n\nconst StudentCourseList = (props) =>\n<div>\n\n  <h5>Total Courses: {props[0].length}</h5>\n\n  <div className=\"coursecontainer\">\n    {props[0].map(course =>\n      <StudentCourseRow key={course.id} {...course} />\n    )}\n  </div>\n    </div>\n\nexport default StudentCourseList\n","import React,{Component} from 'react'\n\nimport '../css/App.css'\nimport { Query } from \"react-apollo\"\n\nimport InvitationList from '../components/InvitationList'\nimport StudentCourseList from '../components/StudentCourseList'\n\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport {STUDENT_COURSE_QUERY} from '../ApolloQueries'\n\nclass StudentDashboard extends Component {\n\n  render() {\n    const userid = sessionStorage.getItem('userid')\n\n    return (\n\n        <Query query={STUDENT_COURSE_QUERY} variables={{ userid: userid }}>\n              {({ loading, error, data }) => {\n                if (loading) return <Loading />\n                if (error) return <Error error={error} />\n\n                const userToRender = data.user\n                const studentCourses = new Array(userToRender.studentCourses.filter(course => !course.deleted))\n\n                return (\n                  <div className=\"main\">\n\n                    <div className=\"container\">\n\n                    <div>\n                    <h3>{userToRender.firstName} {userToRender.lastName}'s Courses</h3>\n                    <div style={{padding:\"15px\"}}>\n\n                    </div>\n\n                    <div className=\"coursecontainer\">\n                    {userToRender.invitesSentTo.length>0 &&\n                      <div>\n                      <div><h4>Course Inivitations</h4></div>\n\n                      <InvitationList userid={userToRender.id} invites={userToRender.invitesSentTo}/>\n                      </div>\n                    }\n\n                      <StudentCourseList  {...studentCourses} />\n\n                    </div>\n\n                    </div>\n\n                  </div>\n\n                </div>\n              )\n            }}\n          </Query>\n    )\n  }\n}\n\n\nexport default StudentDashboard\n","import React from 'react';\nimport '../css/App.css';\n\nconst Error =  props =>\n\n        <div className=\"dashboard\">\n        {console.log(props)}\n          <div className=\"signin\">\n          <h2>Error</h2>\n          <h4>{props !== null  &&\n          props.message}\n          </h4>\n          <h4>{props.graphQLErrors !== null || props.graphQLErrors.length>0 &&\n          props.graphQLErrors.map(error => error.message)}\n          </h4>\n          <h4>{props.networkError !== null || props.networkError.length>0 &&\n            props.networkError.message}\n          </h4>\n          </div>\n        </div>\n\nexport default Error;\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Query } from \"react-apollo\"\nimport {INSTITUTION_QUERY} from '../ApolloQueries'\n\nimport { Link } from 'react-router-dom'\nimport { Button, Loader } from 'semantic-ui-react'\nimport Error from './Error'\n\nexport default class InstitutionHeader extends Component {\n\n  render() {\n\n    return (\n      <Query query={INSTITUTION_QUERY} variables={{ institutionId: this.props.institutionId }} fetchPolicy=\"cache-and-network\" >\n            {({ loading, error, data }) => {\n              if (loading) return <Loader />\n              if (error) return <Error {...error}/>\n              const { id, name, students } = data.institution\n        return (\n\n      <div>\n      <div style={{padding:15}}>\n      <Link  to={{\n        pathname: \"/institution_dashboard\",\n        state:\n          { institutionId: id }\n        }} >\n        <h2>{name}</h2>\n        </Link>\n        </div>\n\n       <div style={{display:'inline-block',padding:5}}>\n         <Link  to={{\n           pathname: \"/edit_institution\",\n           state:\n             { institutionId: id }\n           }} >\n            <Button color=\"blue\" >Edit Institution</Button>\n           </Link>\n        </div>\n\n        <div style={{display:'inline-block',padding:5}}>\n          <Link  to={{\n            pathname: \"/add_admin\",\n            state:\n              { institutionId: id }\n            }} >\n            <Button color=\"blue\" >Add Administrator</Button>\n           </Link>\n         </div>\n\n       <div style={{display:'inline-block',padding:5}}>\n         <Link  to={{\n           pathname: \"/add_teacher\",\n           state:\n             { institutionId: id }\n           }} >\n           <Button color=\"blue\" >Add Teacher</Button>\n          </Link>\n        </div>\n\n        <div style={{display:'inline-block',padding:5}}>\n          <Link  to={{\n            pathname: \"/institution_students\",\n            state:\n              { institutionId: id }\n            }} >\n            <Button color=\"blue\" >{students.length} Students</Button>\n           </Link>\n         </div>\n\n      </div>\n    )\n  }}\n</Query>\n    )\n  }\n\n}\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass InstitutionAdmins extends Component {\n  state = {\n    column: null,\n    data: this.props.admins,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n      <Segment style={{ minHeight: 400, overflow: 'auto' }} attached>\n      <Table sortable celled fixed  >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('firstName')}\n              >\n                First Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('lastName')}\n              >\n                Last Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'email' ? direction : null}\n                onClick={this.handleSort('email')}\n              >\n                Courses\n              </Table.HeaderCell>\n\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {_.map(data, ({ id, firstName, lastName, teacherCourses }) => (\n              <Table.Row key={id}>\n                <Table.Cell>\n                <Link  to={{\n                  pathname: \"/personnel_dashboard\",\n                  state:\n                  { userId: id,\n                    institutionId: this.props.institutionId }\n                  }} >\n                  {firstName}\n                  </Link><\n                  /Table.Cell>\n                <Table.Cell>\n                <Link  to={{\n                  pathname: \"/personnel_dashboard\",\n                  state:\n                  { userId: id,\n                  institutionId: this.props.institutionId }\n                  }} >\n                  {lastName}\n                  </Link>\n                  </Table.Cell>\n                <Table.Cell>{teacherCourses.filter(course => !course.deleted).length}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Segment>\n    )\n  }\n}\n\nexport default InstitutionAdmins\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass InstitutionTeachers extends Component {\n  state = {\n    column: null,\n    data: this.props.teachers,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n      <Segment style={{ minHeight: 400, overflow: 'auto' }} attached>\n      <Table sortable celled fixed  >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('firstName')}\n              >\n                First Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('lastName')}\n              >\n                Last Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'email' ? direction : null}\n                onClick={this.handleSort('email')}\n              >\n                Courses\n              </Table.HeaderCell>\n\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {_.map(data, ({ id, firstName, lastName, teacherCourses }) => (\n              <Table.Row key={id}>\n              <Table.Cell>\n              <Link  to={{\n                pathname: \"/personnel_dashboard\",\n                state:\n                { userId: id,\n                  institutionId: this.props.institutionId }\n                }} >\n                {firstName}\n                </Link><\n                /Table.Cell>\n              <Table.Cell>\n              <Link  to={{\n                pathname: \"/personnel_dashboard\",\n                state:\n                { userId: id,\n                institutionId: this.props.institutionId }\n                }} >\n                {lastName}\n                </Link>\n                </Table.Cell>\n                <Table.Cell>{teacherCourses.filter(course => !course.deleted).length}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Segment>\n    )\n  }\n}\n\nexport default InstitutionTeachers\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass InstitutionCourses extends Component {\n  state = {\n    column: null,\n    data: this.props.courses,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n      <Segment style={{ height: 400, overflow: 'auto' }} attached>\n      <Table sortable celled fixed  >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('name')}\n              >\n                Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'students' ? direction : null}\n                onClick={this.handleSort('students')}\n              >\n                Students\n              </Table.HeaderCell>\n\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {_.map(data, ({ id, name, students }) => (\n              <Table.Row key={id}>\n                <Table.Cell>\n                <Link  to={{\n                  pathname: \"/institution_course\",\n                  state:\n                  { institutionId: this.props.institutionId, courseId: id }\n                  }} >\n                  {name}\n                  </Link></Table.Cell>\n                <Table.Cell>{students.length}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Segment>\n    )\n  }\n}\n\nexport default InstitutionCourses\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Button, Grid, Segment, Message } from 'semantic-ui-react'\nimport InstitutionHeader from '../components/InstitutionHeader'\nimport InstitutionAdmins from '../components/InstitutionAdmins'\n\nimport InstitutionTeachers from '../components/InstitutionTeachers'\n\nimport InstitutionCourses from '../components/InstitutionCourses'\n\nimport { Query, Mutation } from \"react-apollo\"\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport {INSTITUTION_QUERY, DELETE_INSTITUTION_MUTATION, INSTITUTIONS_QUERY} from '../ApolloQueries'\n\nclass AdminDashboard extends Component {\n\n  state = {\n    graphQLError: '',\n    isVisibleGraph:false,\n    networkError:false,\n    isVisibleNet:false,\n  }\n\n  render() {\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    const { firstName, lastName } = user\n    const institutionId = user.adminInstitutions[0].id\n    const { graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n    return (\n\n      <div className=\"main\">\n\n      <div>\n      <h5>{firstName} {lastName} </h5>\n      </div>\n      <InstitutionHeader institutionId={institutionId} />\n\n    <Query query={INSTITUTION_QUERY} variables={{ institutionId: institutionId }} fetchPolicy=\"cache-and-network\" >\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error}/>\n\n            const {id, address1, address2, city, state, zip, phone, email, courses, teachers, admins } = data.institution\n            const coursesActive = courses.filter(course => !course.deleted)\n\n        return (\n          <>\n              <div style={{margin:25}}>\n\n              <Grid columns={3} stackable className=\"fill-content\">\n                <Grid.Row stretched>\n\n                <Grid.Column>\n\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>Administrators</b></div>\n\n                </Segment>\n                <InstitutionAdmins institutionId={id} admins={admins} />\n\n                </Grid.Column>\n\n                <Grid.Column >\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>Teachers</b></div>\n\n                </Segment>\n\n                <InstitutionTeachers institutionId={id}  teachers={teachers} />\n\n                </Grid.Column>\n\n                <Grid.Column >\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>Courses</b></div>\n\n                </Segment>\n\n                <InstitutionCourses institutionId={id} courses={coursesActive} />\n\n                </Grid.Column>\n\n                </Grid.Row>\n\n                </Grid>\n\n                <Segment >\n                <p><b>Address:</b> { address1 } { address2 } { city }, { state } { zip }</p>\n                <p>\n                <b>Phone:</b> { phone } <b>Email:</b> <a href={\"mailto:\"+email}>{email}</a>\n                </p>\n                </Segment>\n              </div>\n              <Mutation\n                  mutation={DELETE_INSTITUTION_MUTATION}\n                  variables={{ institutionId:id }}\n                  onCompleted={data => this._confirm(data)}\n                  onError={error => this._error(error)}\n                  refetchQueries={() => { return [{\n                    query: INSTITUTIONS_QUERY,\n                  }]\n                }}>\n                  {mutation => (\n                    <div><Button  color='red' onClick={mutation}>Delete Institution</Button></div>\n                  )}\n                </Mutation>\n\n                {isVisibleGraph &&\n                  <Message negative>\n                    <p><b>{graphQLError}</b></p>\n                  </Message>\n                }\n\n                {isVisibleNet &&\n                  <Message negative>\n                    <p><b>{networkError}</b></p>\n                  </Message>\n                }\n                </>\n        )\n      }}\n    </Query>\n    </div>\n    )\n  }\n\n\n}\n\n\nexport default AdminDashboard\n","import React from 'react';\nimport '../css/App.css';\nimport { Segment } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\n\n\nconst InstitutionRow = (props) =>\n\n<Segment >\n  <div className=\"course_row\">\n\n  <div className=\"course_cell\">\n  <h5>\n  <Link  to={{\n    pathname: \"/institution_dashboard\",\n    state:\n      { institutionId: props.id }\n    }} >\n\n  {props.name}</Link>\n  </h5>\n  </div>\n\n\n  <div className=\"course_cell\">\n\n  Courses: <Link  to={{\n    pathname: \"/institution_courses\",\n    state:\n      { institutionId: props.id }\n    }} >\n     {props.courses.filter(course => !course.deleted).length}\n    </Link>\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  Admins: <Link  to={{\n    pathname: \"/institution_admins\",\n    state:\n      { institutionId: props.id }\n    }} >\n    {props.admins.length}\n    </Link>\n\n  </div>\n\n  <div className=\"course_cell\">\n\n  Teachers: <Link  to={{\n    pathname: \"/institution_teachers\",\n    state:\n      { institutionId: props.id }\n    }} >\n     {props.teachers.length}\n  </Link>\n\n  </div>\n\n\n  </div>\n\n  </Segment >\n\n//  </CardText>\n\n//</Card>\n\n\nexport default InstitutionRow\n","import React from 'react';\nimport '../css/App.css';\n\nimport InstitutionRow from './InstitutionRow'\n\nconst InstitutionList = (props) =>\n<div>\n\n  <div className=\"coursecontainer\">\n    {props.courses.map(institution =>\n      <InstitutionRow key={institution.id} {...institution} />\n    )}\n  </div>\n</div>\n\nexport default InstitutionList\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Query } from \"react-apollo\"\nimport { Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nimport InstitutionList from '../components/InstitutionList'\n\nimport {INSTITUTIONS_QUERY} from '../ApolloQueries'\n\nimport Error from './Error'\nimport Loading from './Loading'\n\nclass QuandrioDashboard extends Component {\n\n  render() {\n\n    const {firstName,lastName} = JSON.parse(sessionStorage.getItem('user'))\n\n    return (\n\n        <Query query={INSTITUTIONS_QUERY} fetchPolicy=\"cache-and-network\" >\n              {({ loading, error, data }) => {\n                if (loading) return <Loading />\n                if (error) return <Error error={error} />\n\n                const {count, institutions} = data.institutions\n                const institutionsActive = institutions.filter(institution => !institution.deleted)\n\n                return (\n                  <div className=\"main\">\n\n                    <div className=\"container\">\n\n                    <div>\n                    <h5>{firstName} {lastName}</h5>\n                    <h3>Quandrio Institutions - {institutionsActive.length}</h3>\n                    <div style={{padding:\"15px\"}}>\n                    <Link  to=\"/add_institution\"><Button color='blue'>Add Institution</Button></Link>\n                    </div>\n                    </div>\n\n                    <div className=\"coursecontainer\">\n\n                      <InstitutionList  count={count} courses={institutionsActive} />\n\n                    </div>\n\n                  </div>\n\n                </div>\n              )\n            }}\n          </Query>\n    )\n  }\n}\n\nexport default QuandrioDashboard\n","import React,{Component} from 'react'\nimport * as Cookies from \"js-cookie\"\nimport '../css/App.css'\n//import { Button, Form, FormGroup, Label, Input,} from 'reactstrap'\nimport { Form, Input, Button, Message } from 'semantic-ui-react'\nimport { Mutation } from \"react-apollo\"\n\nimport {LOGIN_MUTATION} from '../ApolloQueries'\n\nclass SignIn extends Component {\n\n    state = {\n      email: '',\n      password: '',\n      graphQLError: '',\n      isVisibleGraph:false,\n      networkError:false,\n      isVisibleNet:false,\n      pushToken:'',\n      isVisible:false\n    }\n\n    render() {\n      const { email, password, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n\n      return (\n      <div className=\"main\">\n      <div className=\"dashboard\">\n      <div className=\"signin\">\n      <h2>Sign In</h2>\n\n      <Form size=\"big\">\n\n      <Form.Field\n        control={Input}\n        label='Email'\n        value={email}\n        onChange={e => this.setState({ email: e.target.value })}\n        placeholder='Login email'\n      />\n\n      <Form.Field\n        control={Input}\n        label='Password'\n        value={password}\n        type='password'\n        onChange={e => this.setState({ password: e.target.value })}\n        placeholder='Login password'\n      />\n\n      <Mutation\n          mutation={LOGIN_MUTATION}\n          variables={{ email:email, password:password }}\n          onCompleted={data => this._confirm(data)}\n          onError={error => this._error (error)}\n        >\n\n          {mutation => (\n            <Button color='blue' onClick={mutation}>Submit</Button>\n          )}\n        </Mutation>\n\n\n        </Form>\n\n        {isVisibleGraph &&\n          <Message negative>\n            <p><b>{graphQLError}</b></p>\n          </Message>\n        }\n\n        {isVisibleNet &&\n          <Message negative>\n            <p><b>{networkError}</b></p>\n          </Message>\n        }\n\n      </div>\n      </div>\n      </div>\n  )\n}\n\n_error = async error => {\n\n    const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n    this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n    error.networkError &&\n      this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n}\n\n  _confirm = async data => {\n    const { token } = data.login\n    const user = data.login.user\n    this._saveUserData(token, user)\n\n    if (user.role === \"TEACHER\") {\n      this.props.history.push(`/teacher_dashboard`)\n    }\n\n    if (user.role === \"STUDENT\") {\n      this.props.history.push(`/student_dashboard`)\n    }\n\n    if (user.role === \"ADMIN\") {\n      this.props.history.push(`/admin_dashboard`)\n    }\n\n    if (user.role === \"QUANDRIA\") {\n      this.props.history.push(`/quandria_dashboard`)\n    }\n\n  }\n\n  _saveUserData = (token, user) => {\n    sessionStorage.setItem('auth_token', token)\n    sessionStorage.setItem('user', JSON.stringify(user))\n    sessionStorage.setItem('userid', user.id)\n    sessionStorage.setItem('online', user.online)\n    if (user.role === \"ADMIN\") {\n      sessionStorage.setItem('institutionId', user.adminInstitutions[0].id)\n\n    }\n\n    Cookies.set('auth_token', token)\n    Cookies.set('user', JSON.stringify(user))\n    Cookies.set('userid', user.id)\n    Cookies.set('online', user.online)\n    if (user.role === \"ADMIN\") {\n      Cookies.set('institutionId', user.adminInstitutions[0].id)\n\n    }\n\n\n\n  }\n\n}\n\nexport default SignIn\n","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\nimport {withRouter} from \"react-router-dom\"\nimport '../css/App.css';\n\nconst divStyle = {\n  padding: '20px',\n};\n\nclass SignOut extends Component {\n\n    render() {\n\n      return (\n        <div className=\"main\">\n      <div className=\"dashboard\">\n      <div className=\"signin\">\n      <div style={divStyle}>\n      <h2>{this.props.location.state.authMsg}</h2>\n      </div>\n      <div style={divStyle}>\n      <h4 >Sign in again:</h4>\n      </div>\n      <div style={divStyle}>\n      <h4 ><Link to=\"/sign_in\"><Button color='blue'>Sign In</Button></Link></h4>\n      </div>\n      </div>\n      </div>\n        </div>\n\n  )\n}\n}\n\n\nexport default withRouter(SignOut) ;\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Form, Input, Button } from 'semantic-ui-react'\nimport { Mutation } from \"react-apollo\";\n\n\nimport {SIGNUP_MUTATION} from '../ApolloQueries'\n\n\nclass SignUp extends Component {\n    state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: ''\n    }\n\n    render() {\n      const { email, password,firstName,lastName } = this.state\n\n      return (\n        <div className=\"main\">\n      <div className=\"dashboard\">\n      <div className=\"signin\">\n\n      <h2>Sign Up</h2>\n\n      <Form size=\"big\">\n\n      <Form.Field\n        control={Input}\n        label='First Name'\n        value={firstName}\n        onChange={e => this.setState({ firstName: e.target.value })}\n        placeholder='First Name'\n      />\n\n      <Form.Field\n        control={Input}\n        label='Last Name'\n        value={lastName}\n        onChange={e => this.setState({ lastName: e.target.value })}\n        placeholder='Last Name'\n      />\n\n      <Form.Field\n        control={Input}\n        label='Email'\n        value={email}\n        onChange={e => this.setState({ email: e.target.value })}\n        placeholder='Login email'\n      />\n\n      <Form.Field\n        control={Input}\n        label='Password'\n        value={password}\n        type='password'\n        onChange={e => this.setState({ password: e.target.value })}\n        placeholder='Login password'\n      />\n\n        <Mutation\n            mutation={SIGNUP_MUTATION}\n            variables={{ email:email, password:password, firstName: firstName, lastName: lastName, role: 'STUDENT' }}\n            onCompleted={data => this._confirm(data)}\n          >\n            {mutation => (\n              <Button color='blue' onClick={mutation}>Submit</Button>\n            )}\n          </Mutation>\n\n\n        </Form>\n      </div>\n      </div>\n        </div>\n\n  )\n}\n\n  _confirm = async data => {\n    const { authMsg } = data.signup\n    this.props.history.push({\n      pathname: `/signed_up`,\n      state: { authMsg: authMsg }\n      })\n    }\n\n}\n\nexport default SignUp;\n","import React,{Component} from 'react';\nimport {withRouter} from \"react-router-dom\"\nimport '../css/App.css';\n\nconst divStyle = {\n  padding: '20px',\n};\n\nclass SignedUp extends Component {\n\n    render() {\n\n      return (\n      <div className=\"dashboard\">\n      <div className=\"signin\">\n      <div style={divStyle}>\n      <h2>{this.props.location.state.authMsg}</h2>\n      </div>\n      <div style={divStyle}>\n\n      </div>\n      <div style={divStyle}>\n\n      </div>\n      </div>\n      </div>\n\n  )\n}\n}\n\n\nexport default withRouter(SignedUp) ;\n","import React,{Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\nimport {withRouter} from \"react-router-dom\"\nimport axios from 'axios'\nimport '../css/App.css'\n\nimport {CONFIRMATION_MUTATION} from '../ApolloQueries'\n\nconst divStyle = {\n  padding: '20px',\n};\n\n\nclass SignOut extends Component {\n\n    state = {\n      authMsg:''\n    }\n\n    confirmEmail = (email,token) => {\n      const that = this;\n\n       axios({\n          url: process.env.REACT_APP_GRAPHQL_SERVER,\n          method: 'post',\n          data: {\n            query: CONFIRMATION_MUTATION,\n              variables: {email: email, confirmationToken: token}\n            }\n        })\n        .then(result => {\n            let grapqhql_resp = result.request.response\n            let gresp = JSON.parse(grapqhql_resp)\n            let authMsg = gresp.data.confirmEmail.authMsg\n            that.setState({authMsg})\n      })\n      .catch(error =>\n        this.setState({\n        authMsg: 'There has been an error with your confirmation. Please try again.'\n      }))\n    }\n\n    componentDidMount() {\n      const { email, token } = this.props.match.params\n      this.confirmEmail(email, token)\n    }\n\n    render() {\n\n      return (\n        <div className=\"main\">\n        <div className=\"dashboard\">\n        <div className=\"signin\">\n        <div style={divStyle}>\n        <h3>Email Confirmation</h3>\n        </div>\n        <div style={divStyle}>\n            <h4 >{this.state.authMsg}</h4>\n        </div>\n        <div style={divStyle}>\n        <h4 ><Link to=\"/sign_in\"><Button color='blue'>Sign In</Button></Link></h4>\n        </div>\n        </div>\n        </div>\n        </div>\n\n    )\n  }\n\n  }\n\n\nexport default withRouter(SignOut) ;\n","import React from 'react';\nimport '../css/App.css';\n\nimport { Link } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\n\nconst CourseHeader = (props) =>\n\n  <div>\n  <Link  to={{\n    pathname: \"/course_dashboard\",\n    state:\n      { course_id: props.id }\n    }} >\n    <h2>{props.name} - {props.courseNumber}</h2>\n    </Link>\n    <h5>Time: {props.time}</h5>\n\n   <div style={{display:'inline-block',padding:5}}>\n     <Link  to={{\n       pathname: \"/edit_course\",\n       state:\n         { course_id: props.id }\n       }} >\n        <Button color=\"blue\" >Edit Course</Button>\n       </Link>\n    </div>\n\n\n\n   <div style={{display:'inline-block',padding:5}}>\n     <Link  to={{\n       pathname: \"/add_test\",\n       state:\n         { course_id: props.id }\n       }} >\n       <Button color=\"blue\" >Add Test</Button>\n      </Link>\n    </div>\n\n    <div style={{display:'inline-block',padding:5}}>\n      <Link  to={{\n        pathname: \"/course_students\",\n        state:\n          { course_id: props.id }\n        }} >\n        <Button color=\"blue\" >{props.studentsCount} Students</Button>\n       </Link>\n     </div>\n\n    <div style={{display:'inline-block',padding:5}}>\n      <Link  to={{\n        pathname: \"/course_invitation\",\n        state:\n          { course_id: props.id }\n        }} >\n        <Button color=\"blue\" >Send Student Invites</Button>\n       </Link>\n     </div>\n\n  </div>\n\n\nexport default CourseHeader\n","import React, {Component} from 'react';\nimport '../css/App.css';\nimport { Link } from 'react-router-dom'\n\nexport default class PanelCountRow extends Component {\n\n  componentDidMount() {\n    //this.props.subscribeToNewPanelCount()\n  }\n\n  render(){\n\n    return (\n      <div>\n      <h6>Panels: <Link  to={{\n        pathname: \"/test_panels\",\n        state:\n          {\n            test_id: this.props.testId }\n        }} >\n         { this.props.count }\n      </Link>\n      </h6>\n      </div>\n\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport '../css/App.css';\nimport { Link } from 'react-router-dom'\n\nexport default class QuestionCountRow extends Component {\n\n  componentDidMount() {\n    //this.props.subscribeToNewQuestionCount()\n  }\n\n  render(){\n    const { courseId, count, testId } = this.props\n    return (\n      <div><h6>\n      Questions: <Link  to={{\n        pathname: \"/student_performance\",\n        state:\n          {\n            course_id: courseId,\n            test_id: testId }\n        }} >\n         {count}\n      </Link>\n      </h6>\n      </div>\n\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport '../css/App.css';\n\nexport default class AnswerCountRow extends Component {\n\n  componentDidMount() {\n    //this.props.subscribeToNewAnswerCount()\n  }\n\n  render(){\n    const { answersCount, accuracy } = this.props\n    return (\n      <>\n      <div>\n      <h6>\n        Answers: { answersCount  }\n      </h6>\n      </div>\n\n      <div>\n      <h6>\n        Accuracy: { Math.round(accuracy * 100)}%\n      </h6>\n      </div>\n      </>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport '../css/App.css';\nimport { Link } from 'react-router-dom'\n\nexport default class ChallengeCountRow extends Component {\n\n  componentDidMount() {\n    //this.props.subscribeToNewChallengeCount()\n  }\n\n  render(){\n\n    return (\n      <div>\n      <h6>Challenges: <Link  to={{\n        pathname: \"/challenge_dashboard\",\n        state:\n          {\n            test_id: this.props.testId }\n        }} >\n         { this.props.count }\n      </Link>\n      </h6>\n      </div>\n\n    )\n  }\n}\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Button, Card } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\nimport PanelCountRow from './PanelCountRow'\nimport QuestionCountRow from './QuestionCountRow'\nimport AnswerCountRow from './AnswerCountRow'\nimport ChallengeCountRow from './ChallengeCountRow'\n\nvar dateFormat = require('dateformat')\n\nexport default class TestRow extends Component {\n\n  render() {\n    const { id, testNumber, subject, testType, testDate, published, release, questionsCount, panelsCount, answersCount, accuracy, challengeCount } = this.props.test\n    return (\n\n      <Card fluid>\n        <Card.Content>\n        <div className=\"course_row\">\n        <div>\n\n\n          <Link  to={{\n            pathname: \"/test_dashboard\",\n            state:\n              { test_id: id }\n            }} >\n\n        <h5>{testNumber} - {subject} - { dateFormat(testDate, \"dddd, mmmm dS, yyyy\") }</h5>\n\n        </Link>\n        </div>\n\n\n        <div>\n\n        {release &&\n        <Button basic disabled color=\"teal\" size=\"small\">Released</Button>\n        }\n\n        {published &&\n        <Button basic disabled color=\"green\" size=\"small\">Published</Button>\n        }\n\n        {testType===\"CLASS\" &&\n        <Button basic disabled color=\"purple\" size=\"small\">Lecture</Button>\n        }\n\n        {testType===\"LAB\" &&\n        <Button basic disabled color=\"orange\" size=\"small\">Lab</Button>\n        }\n\n      </div>\n\n        </div>\n\n        <hr />\n\n          <div className=\"course_row\">\n\n                <QuestionCountRow count={questionsCount} testId={id} courseId={this.props.courseId}\n\n                />\n\n\n                <AnswerCountRow answersCount={answersCount} accuracy={accuracy}\n\n                />\n\n                <ChallengeCountRow count={challengeCount} testId={id}\n\n                />\n\n\n                <PanelCountRow count={panelsCount} testId={id}\n\n                  />\n\n          </div>\n          </Card.Content>\n        </Card>\n\n    )\n  }\n}\n","import React from 'react';\nimport '../css/App.css';\n\nimport TestRow from './TestRow'\n\nconst TestList = (props) =>\n  <div className=\"coursecontainer\">\n  {\n    props.tests.map(test =>\n    <TestRow key={test.id} courseId={props.courseId} test={test} />\n    )}\n  </div>\n\nexport default TestList\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport * as Cookies from \"js-cookie\"\nimport CourseHeader from '../components/CourseHeader'\nimport TestList from '../components/TestList'\nimport { Query, Mutation } from \"react-apollo\"\nimport { Button, Message } from 'semantic-ui-react'\nimport Error from './Error'\n\nimport Loading from './Loading'\n\nimport {NEW_COURSE_DASHBOARD_QUERY, DELETE_COURSE_MUTATION, TEACHER_DASHBOARD_QUERY} from '../ApolloQueries'\n\nclass CourseDashboard extends Component {\n\n  state = {\n    graphQLError: '',\n    isVisibleGraph:false,\n    networkError:false,\n    isVisibleNet:false,\n  }\n\n  render() {\n\n    const userid = Cookies.get('userid')\n    const { course_id }= this.props.location.state\n    const { graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n    return (\n    <Query query={NEW_COURSE_DASHBOARD_QUERY} variables={{ courseId: course_id }} fetchPolicy=\"cache-and-network\" >\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error}/>\n\n\n            const courseToRender = data.courseDashboard\n            const tests1 = courseToRender.courseTestList.filter(test => !test.deleted)\n\n        return (\n\n      <div className=\"main\">\n        <div className=\"container\">\n\n              <CourseHeader {...courseToRender} />\n              <TestList tests={tests1} courseId={course_id} />\n              <div >\n\n              <Mutation\n                  mutation={DELETE_COURSE_MUTATION}\n                  variables={{ course_id }}\n                  onCompleted={data => this._confirm(data)}\n                  onError={error => this._error(error)}\n                  refetchQueries={() => { return [{\n                    query: TEACHER_DASHBOARD_QUERY,\n                    variables: { userid }\n                  }]\n                }}>\n                  {mutation => (\n                    <Button  color='red' onClick={mutation}>Delete Course</Button>\n                  )}\n                </Mutation>\n\n                {isVisibleGraph &&\n                  <Message negative>\n                    <p><b>{graphQLError}</b></p>\n                  </Message>\n                }\n\n                {isVisibleNet &&\n                  <Message negative>\n                    <p><b>{networkError}</b></p>\n                  </Message>\n                }\n\n              </div>\n            </div>\n            </div>\n        )\n      }}\n    </Query>\n    )\n  }\n\n  _error = async error => {\n\n      const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n      this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n      error.networkError &&\n        this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n  }\n\n  _confirm = async data => {\n    this.props.history.push(`/teacher_dashboard`)\n  }\n}\n\n\nexport default CourseDashboard\n","import React from 'react';\nimport '../css/App.css';\n\nimport { Link } from 'react-router-dom'\n\nconst StudentCourseHeader = (props) =>\n\n<>\n  <Link  to={{\n    pathname: \"/student_course_dashboard\",\n    state:\n      { course_id: props.id }\n    }} >\n    <div style={{padding:10}}>\n    <h2>{props.name} - {props.courseNumber}</h2>\n    </div>\n    </Link>\n\n    <div style={{padding:10}}>\n    <h5>Time: {props.time}</h5>\n    </div>\n</>\n\n\nexport default StudentCourseHeader\n","import React from 'react';\nimport '../css/App.css';\n\nimport { Card, Grid  } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\nvar dateFormat = require('dateformat');\n\nconst StudentTestRow = (props) =>\n\n<Card fluid>\n  <Card.Content>\n\n  <Grid padded textAlign='left' columns={4}>\n  <Grid.Row>\n\n  <Grid.Column width={5}>\n\n    <Link  to={{\n      pathname: \"/student_test_dashboard\",\n      state:\n        { test_id: props.test.id }\n      }} >\n\n  <h5>{props.test.testNumber} - {props.test.subject} </h5>\n\n  </Link>\n  </Grid.Column>\n\n  <Grid.Column width={5}>\n  <h5>{ dateFormat(props.test.testDate, \"dddd, mmmm dS, yyyy\") }</h5>\n  </Grid.Column>\n\n  <Grid.Column width={3}>\n\n<h5>\nQuestions: {props.test.questions.length}\n</h5>\n\n</Grid.Column>\n\n<Grid.Column width={3}>\n\n<h5>Panels: <Link  to={{\n  pathname: \"/student_test_panels\",\n  state:\n    {\n      test_id: props.test.id }\n  }} > { props.test.panels.length } </Link>\n</h5>\n\n</Grid.Column>\n\n</Grid.Row>\n\n</Grid>\n\n</Card.Content>\n</Card>\n\nexport default StudentTestRow\n","import React from 'react';\nimport '../css/App.css';\n\nimport StudentTestRow from './StudentTestRow'\n\nconst StudentTestList = (props) =>\n  <div className=\"coursecontainer\">\n  {\n    props.tests.map(test =>\n    <StudentTestRow key={test.id} courseId={props.courseId} test={test} />\n    )}\n  </div>\n\nexport default StudentTestList\n","import React,{Component} from 'react'\nimport '../css/App.css'\n\nimport StudentCourseHeader from '../components/StudentCourseHeader'\nimport StudentTestList from '../components/StudentTestList'\nimport { Query } from \"react-apollo\"\n\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport {COURSE_QUERY} from '../ApolloQueries'\n\nclass StudentCourseDashboard extends Component {\n\n  render() {\n\n    const { course_id }= this.props.location.state\n\n    return (\n    <Query query={COURSE_QUERY} variables={{ courseid: course_id }} fetchPolicy=\"cache-and-network\">\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error} />\n\n            const courseToRender = data.course\n            const tests1 = courseToRender.tests.filter(test => !test.deleted && test.published)\n\n        return (\n\n      <div className=\"main\">\n        <div className=\"container\">\n\n              <StudentCourseHeader {...courseToRender} />\n              <StudentTestList tests={tests1} courseId={course_id} />\n              <div >\n\n              </div>\n            </div>\n            </div>\n        )\n      }}\n    </Query>\n    )\n  }\n  _confirm = async data => {\n    this.props.history.push(`/teacher_dashboard`)\n  }\n}\n\nexport default StudentCourseDashboard\n","import React,{Component} from 'react'\nimport '../css/App.css'\n\nimport CourseHeader from '../components/CourseHeader'\nimport { Query, Mutation, } from \"react-apollo\"\nimport { Button, Form, TextArea, Message } from 'semantic-ui-react'\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport {COURSE_DASHBOARD_QUERY, SEND_INVITES_MUTATION} from '../ApolloQueries'\n\nclass CourseInvitation extends Component {\n\n  state = {\n        emails:'',\n        graphQLError: '',\n        isVisibleGraph:false,\n        networkError:'',\n        isVisibleNet:false,\n      }\n\n  render() {\n\n    const { course_id }= this.props.location.state\n    const { graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n\n    return (\n    <Query query={COURSE_DASHBOARD_QUERY} variables={{ courseid: course_id }}>\n          {({ loading, error, data }) => {\n            if (loading) return <Loading/>\n            if (error) return <Error {...error}/>\n\n            const courseToRender = data.course\n\n\n        return (\n\n      <div className=\"main\">\n        <div className=\"container\">\n\n              <CourseHeader {...courseToRender} />\n              <div style={{width:'75%',margin:'auto'}}>\n              <div>\n                <h4>Send Student Invitations</h4>\n              </div>\n              <Form>\n              <Form.Field\n              control={TextArea}\n              style={{ minHeight: 200 }}\n              label='Emails'\n              value={this.state.emails}\n              placeholder='Email list...'\n              onChange={e => this.setState({ emails: e.target.value })}\n              />\n\n              </Form>\n              <div style={{padding:\"15px\"}}>\n              <Mutation\n                  mutation={SEND_INVITES_MUTATION}\n                  variables={{ course_id: course_id, emails: this.state.emails }}\n                  onError={error => this._error (error)}\n                  onCompleted={data => this._confirm(data)}\n                >\n                  {mutation => (\n                    <Button color='blue' onClick={mutation}>Send Invitations</Button>\n                  )}\n                </Mutation>\n\n                {isVisibleGraph &&\n                  <Message negative>\n                    <p><b>{graphQLError}</b></p>\n                  </Message>\n                }\n\n                {isVisibleNet &&\n                  <Message negative>\n                    <p><b>{networkError}</b></p>\n                  </Message>\n                }\n                </div>\n                </div>\n              </div>\n            </div>\n\n\n        )\n      }}\n    </Query>\n    )\n  }\n\n  _error = async error => {\n\n      const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n      this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n      error.networkError &&\n        this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n  }\n\n  _confirm = async data => {\n    this.props.history.push({\n      pathname: `/course_dashboard`,\n      state: { course_id: this.props.location.state.course_id  }\n      })\n  }\n}\n\n\nexport default CourseInvitation\n","import React,{Component} from 'react'\nimport * as Cookies from \"js-cookie\"\nimport '../css/App.css'\n//import { Form, FormGroup, Label, Input, } from 'reactstrap'\nimport { Form, Input, Button, Select, Message } from 'semantic-ui-react'\n\nimport { Mutation } from \"react-apollo\"\n\nimport {ADD_COURSE_MUTATION, TEACHER_DASHBOARD_QUERY} from '../ApolloQueries'\n\nclass AddCourse extends Component {\n\n  state = {\n        institutionId:'',\n        department1: '',\n        name:'',\n        schoolId:'',\n        time:'',\n        course_message:'',\n        institutions:'',\n        graphQLError: '',\n        isVisibleGraph:false,\n        networkError:false,\n        isVisibleNet:false,\n      }\n\nrender() {\n\n  const user =  JSON.parse(sessionStorage.getItem('user'))\n  const userid = Cookies.get('userid')\n  const { name, schoolId, time, department1, institutionId, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n  const institutions = user.teacherInstitutions.map(institution => ({value: institution.id, text: institution.name}))\n\n  return (\n  <div className=\"dashboard\">\n    <div className=\"signin\">\n      <h2>Add Course</h2>\n      <h6 style={{color:'green',height:10,padding:5}}>{this.state.course_message}</h6>\n\n      <Form size=\"big\">\n\n      <Form.Field\n        id='name'\n        control={Input}\n        label='Course Name'\n        value={name}\n        onChange={e => this.setState({ name: e.target.value })}\n        placeholder='Course Name'\n      />\n      <Form.Field\n        id='schoolId'\n        control={Input}\n        label='Course Number'\n        value={schoolId}\n        onChange={e => this.setState({ schoolId: e.target.value })}\n        placeholder='Course Number eg. BUS 101'\n      />\n      <Form.Field\n        id='time'\n        control={Input}\n        label='Time'\n        value={time}\n        onChange={e => this.setState({ time: e.target.value })}\n        placeholder='Time eg. MWF 12:00-1:20'\n      />\n\n      <Form.Field\n        id='department1'\n        control={Input}\n        label='Department'\n        value={department1}\n        onChange={e => this.setState({ department1: e.target.value })}\n        placeholder='eg. Biology'\n      />\n\n      <Form.Field\n        id='institutionId'\n        control={Select}\n        options={institutions}\n        onChange={(event, {value}) => { this.setState({ institutionId: value })}}\n        label='Institution'\n        fluid\n        selection\n        placeholder='Select Institution'\n      />\n\n      </ Form>\n\n      {isVisibleGraph &&\n        <Message negative>\n          <p><b>{graphQLError}</b></p>\n        </Message>\n      }\n\n      {isVisibleNet &&\n        <Message negative>\n          <p><b>{networkError}</b></p>\n        </Message>\n      }\n\n\n        <Mutation\n            mutation={ADD_COURSE_MUTATION}\n            variables={{ name: name,\n              schoolId:schoolId,\n              time: time,\n              department1: department1,\n              institutionId: institutionId\n            }}\n            onError={error => this._error (error)}\n            onCompleted={data => this._confirm(data)}\n            refetchQueries={() => { return [{\n                query: TEACHER_DASHBOARD_QUERY,\n                variables: { userid }}]\n              }}\n            >\n            {mutation => (\n              <div style={{padding:'15px'}}>\n              <Button color='blue' onClick={mutation}>Submit</Button>\n              </div>\n            )}\n          </Mutation>\n          {isVisibleGraph &&\n            <Message negative>\n              <p><b>{graphQLError}</b></p>\n            </Message>\n          }\n\n          {isVisibleNet &&\n            <Message negative>\n              <p><b>{networkError}</b></p>\n            </Message>\n          }\n\n        </div>\n      </div>\n      )\n    }\n\n    _error = async error => {\n\n        const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n        this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n        error.networkError &&\n          this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n    }\n\n    _confirm = async data => {\n      const { id } = data.addCourse\n      this.props.history.push({\n        pathname: `/course_dashboard`,\n        state: { course_id: id  }\n        })\n    }\n\n  }\n\nexport default AddCourse\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Form, Input, Button, Message } from 'semantic-ui-react'\nimport { Mutation } from \"react-apollo\";\nimport {withRouter} from \"react-router-dom\"\n\nimport {EDIT_COURSE_MUTATION} from '../ApolloQueries'\n\nclass EditCourseInput extends Component {\n\n      state = {\n            department1: this.props.department1,\n            name:this.props.name,\n            courseNumber:this.props.courseNumber,\n            time:this.props.time,\n            graphQLError: '',\n            isVisibleGraph:false,\n            networkError:false,\n            isVisibleNet:false,\n  }\n\nrender() {\n  const { name, courseNumber, time, department1, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n  return (\n\n    <div>\n\n          <Form size='big'>\n\n          <Form.Field\n            id='name'\n\n            control={Input}\n            label='Course Name'\n            value={name}\n            onChange={e => this.setState({ name: e.target.value })}\n            placeholder='Course Name'\n          />\n          <Form.Field\n            id='schoolId'\n            control={Input}\n            label='Course Number'\n            value={courseNumber}\n            onChange={e => this.setState({ courseNumber: e.target.value })}\n            placeholder='Course Number eg. BUS 101'\n          />\n          <Form.Field\n            id='time'\n            control={Input}\n            label='Time'\n            value={time}\n            onChange={e => this.setState({ time: e.target.value })}\n            placeholder='Time eg. MWF 12:00-1:20'\n          />\n\n          <Form.Field\n            id='department1'\n            control={Input}\n            label='Department'\n            value={department1}\n            onChange={e => this.setState({ department1: e.target.value })}\n            placeholder='eg. Biology'\n          />\n          </Form>\n          <div style={{padding:'50px'}}>\n            <Mutation\n                mutation={EDIT_COURSE_MUTATION}\n                variables={{ name: name,\n                  courseNumber: courseNumber,\n                  time: time,\n                  department1: department1,\n                  id: this.props.id\n                 }}\n                onCompleted={data => this._confirm(data)}\n                onError={error => this._error (error)}\n                optimisticResponse={{\n                  __typename: \"Mutation\",\n                  updateCourse: {\n                    id: this.props.id,\n                    __typename: \"Course\",\n                    name: name,\n                    courseNumber: courseNumber,\n                    time: time,\n                    department1: department1,\n                  }\n                }}\n              >\n                {mutation => (\n                  <Button  color='blue' onClick={mutation}>Submit</Button>\n                )}\n              </Mutation>\n\n              {isVisibleGraph &&\n                <Message negative>\n                  <p><b>{graphQLError}</b></p>\n                </Message>\n              }\n\n              {isVisibleNet &&\n                <Message negative>\n                  <p><b>{networkError}</b></p>\n                </Message>\n              }\n              </div>\n          </div>\n\n\n)\n}\n\n_error = async error => {\n\n    const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n    this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n    error.networkError &&\n      this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n}\n\n_confirm = async data => {\n  this.props.history.push({\n    pathname: `/course_dashboard`,\n    state: { course_id: this.props.id  }\n    })\n}\n\n}\n\nexport default withRouter(EditCourseInput)\n","import React, {Component} from 'react';\nimport '../css/App.css';\nimport { Query } from \"react-apollo\";\nimport {TEST_COURSE_QUERY} from '../ApolloQueries'\nimport Error from './Error'\nimport { Link } from 'react-router-dom'\nimport {  Loader } from 'semantic-ui-react'\n\nclass EditCourseHeader extends Component {\n  render(){\n    const { course_id } = this.props\n  \n    return(\n      <div>\n      <div style={{padding:'10px'}}>\n      <Query query={TEST_COURSE_QUERY} variables={{ course_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loader />\n              if (error) return <Error {...error}/>\n\n              const course = data.course\n\n              return (\n\n        <Link  to={{\n          pathname: \"/course_dashboard\",\n          state:\n            { course_id }\n          }} >\n\n        <h2>{course.name} - {course.courseNumber}</h2>\n\n        </Link>\n\n\n      )\n    }}\n  </Query>\n  </div>\n\n  </div>\n)\n\n  }\n}\n\nexport default EditCourseHeader\n","import React,{Component} from 'react';\nimport '../css/App.css';\n//import { Form, FormGroup, Label, Input, } from 'reactstrap';\n\nimport { Query } from \"react-apollo\";\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport EditCourseInput from '../components/EditCourseInput'\nimport EditCourseHeader from '../components/EditCourseHeader'\n\nimport {COURSE_QUERY} from '../ApolloQueries'\n\nclass EditCourse extends Component {\n\nrender() {\n  const { course_id } = this.props.location.state\n  return (\n    <div className=\"dashboard\">\n      <div className=\"signin\">\n      <EditCourseHeader course_id={course_id} />\n\n        <h2>Edit Course</h2>\n\n    <Query query={COURSE_QUERY} variables={{ courseid: course_id }}>\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error}/>\n\n            const courseToRender = data.course\n\n        return (\n\n            <EditCourseInput {...courseToRender}/>\n\n            )\n          }}\n        </Query>\n\n        </div>\n        </div>\n  )\n}\n\n    _confirm = async data => {\n      const { id } = data.updateCourse\n      this.props.history.push({\n        pathname: `/course_dashboard`,\n        state: { course_id: id  }\n        })\n    }\n\n  }\n\n\n\nexport default EditCourse ;\n","import React from 'react';\nimport '../css/App.css';\nimport { Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst AddPanelButton = (props) =>\n\n<Link  to={{\n  pathname: \"/add_panels\",\n  state:\n    {\n      test_id: props.testId }\n  }} >\n  <Button color=\"blue\" >Add/Delete Panels</Button>\n</Link>\n\n\nexport default AddPanelButton\n","import React, {Component} from 'react';\nimport '../css/App.css';\nimport { Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nexport default class PanelCountButton extends Component {\n\n  componentDidMount() {\n    //this.props.subscribeToNewPanelCount()\n  }\n\n  render(){\n\n    return (\n\n\n      <Link  to={{\n        pathname: \"/test_panels\",\n        state:\n          {\n            test_id: this.props.testId }\n        }} >\n        <Button color=\"blue\" >{this.props.count} Panels</Button>\n      </Link>\n\n    )\n  }\n}\n","import React,{Component} from 'react';\nimport {withRouter} from \"react-router-dom\"\nimport moment from 'moment'\nimport '../css/App.css';\n\nimport { Query } from \"react-apollo\"\nimport Error from './Error'\n\nimport { Link } from 'react-router-dom'\nimport { Button, Loader } from 'semantic-ui-react'\nimport AddPanelButton from '../components/AddPanelButton'\nimport PanelCountButton from '../components/PanelCountButton'\n\nimport { Mutation} from \"react-apollo\";\n\nimport {RELEASE_QUESTIONS_MUTATION, TEST_QUERY } from '../ApolloQueries'\n\nclass TestHeader  extends Component {\n\n  render() {\n\n    const now = new Date()\n\n    return (\n\n      <Query query={TEST_QUERY} variables={{ test_id: this.props.testId }} fetchPolicy=\"cache-and-network\">\n            {({ loading, error, data }) => {\n              if (loading) return <Loader />\n              if (error) return <Error {...error} />\n\n              const testToRender = data.test\n\n              const { id, testNumber, subject, testDate, release, published, course, panels, questions } = testToRender\n\n          return (\n\n  <div >\n\n  <h2>\n  <Link  to={{\n    pathname: \"/course_dashboard\",\n    state:\n      { course_id: course.id }\n    }} >\n    {course.name} - {course.courseNumber}\n    </Link>\n    </h2>\n\n<hr/>\n  <div >\n\n  <h3><Link  to={{\n    pathname: \"/test_dashboard\",\n    state:\n      { test_id: id }\n    }} >{testNumber} - {subject} - { moment(testDate).format(\"dddd MMMM Do YYYY\") }\n    </Link></h3>\n  </div>\n\n  <div style={{display:'inline-block',padding:15}}>\n\n<Link to={{\n  pathname: \"/edit_test\",\n  state:\n    {\n      test_id: id,\n    }\n  }} >\n\n<Button color=\"blue\" >Edit</Button>\n</Link>\n\n\n<AddPanelButton testId={id} />\n\n<PanelCountButton count={panels.length} testId={id}  />\n\n<Link to={{\n  pathname: \"/student_performance\",\n  state:\n    {\n      test_id: id,\n      course_id: course.id\n    }\n  }} >\n\n<Button color=\"blue\" >{questions.length} Questions</Button>\n</Link>\n\n\n{published ?\n  <Link  to={{\n    pathname: \"/edit_publish_test\",\n    state:\n      {\n        test_id: id }\n    }} >\n  <Button color=\"blue\" >Edit Published Test</Button>\n  </Link>\n:\n\n  <Link  to={{\n    pathname: \"/publish_test\",\n    state:\n      {\n        test_id: id }\n    }} >\n      <Button color=\"blue\" >Publish Test</Button>\n  </Link>\n\n}\n\n{release ?\n  <div></div>\n:\n<Mutation\n    mutation={RELEASE_QUESTIONS_MUTATION}\n    variables={{ test_id: id, releaseDate: now }}\n    onCompleted={data => this._confirm(data)}\n    refetchQueries={() => {\n       return [{\n          query: TEST_QUERY,\n          variables: { test_id: id }\n      }]}}\n  >\n    {mutation => (\n      <Button color=\"blue\" onClick={mutation} >Release Questions</Button>\n    )}\n  </Mutation>\n\n}\n\n\n</div>\n\n</div>\n\n)\n}}\n</Query>\n\n)\n}\n\n_confirm = async data => {\n  const { id } = data.updateTest\n  this.props.history.push({\n    pathname: `/test_dashboard`,\n    state: { test_id: id }\n    })\n}\n\n}\n\nexport default withRouter(TestHeader)\n","import React from 'react';\nimport '../css/App.css';\nimport moment from 'moment'\nimport { Table } from 'semantic-ui-react'\n\n\nconst ChallengeRow = (props) =>\n\n<Table.Row>\n<Table.Cell>\n  <div>\n  <div>\n    <b>Challenge: </b>\n    {props.challenge}\n  </div>\n  <div style={{fontSize: '12px'}}>\n    By {props.addedBy.firstName} {props.addedBy.lastName}\n  </div>\n\n  <hr />\n\n  <div >\n  <b>Question: </b>\n    {props.answer.question.question}\n  </div>\n  <div style={{fontSize: '12px'}}>\n    By {props.answer.question.addedBy.firstName} {props.answer.question.addedBy.lastName}\n  </div>\n\n  <hr />\n\n  <div style={{fontSize: '12px',color:'#C0C0C0'}}>\n    {moment(props.addedDate).format(\"dddd, MMMM Do YYYY, h:mm a\")}\n  </div>\n  </div>\n  </Table.Cell>\n  </Table.Row>\n\n\n\n\n\n\n\nexport default ChallengeRow\n","import React from 'react';\nimport '../css/App.css';\n\nimport ChallengeRow from './ChallengeRow'\n\nconst ChallengeList = (props) =>\n\n  <div >\n  {\n  Object.values(props).map(challenge => <ChallengeRow key={challenge.id} {...challenge} /> )\n  }\n  </div>\nexport default ChallengeList\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport ChallengeList from './ChallengeList'\nimport { Segment,Table } from 'semantic-ui-react'\n\nclass TestChallenges extends Component {\n\n    render() {\n\n      return (\n\n      <div >\n      <Segment style={{ height: 400, overflow: 'auto' }} textAlign='left' attached>\n      <Table celled >\n       <Table.Body>\n          <ChallengeList {...this.props.challenges}/>\n        </Table.Body>\n        </Table>\n        </Segment>\n    </div>\n\n\n        )\n      }\n    }\n\nexport default TestChallenges\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Segment, Table } from 'semantic-ui-react'\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst TEST_STATS_QUERY = gql`\nquery TestStats($testId:ID!){\n  testStats(testId:$testId){\n    totalCorrect\n    total\n\n  }\n}\n`\n\nclass TestPerformance extends Component {\n  state = {\n    column: null,\n    data: this.props.stats,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n      <Segment style={{ minHeight: 400 }} attached>\n      <Query query={TEST_STATS_QUERY} variables={{ testId: this.props.testId }}>\n            {({ loading, error, data }) => {\n              if (loading) return <div>Loading</div >\n              if (error) return <div>Error</div >\n\n              const stats = data.testStats\n\n          return (\n\n            <div>\n              <b>Percent Correct:</b> { stats.totalCorrect/stats.total > 0 ? Math.round(stats.totalCorrect/stats.total*100) : 0.0 }%  <b>Correct:</b> {stats.totalCorrect} <b>Total:</b> {stats.total}\n              </div>\n            )\n          }}\n          </Query>\n\n    <Table sortable celled fixed striped >\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  sorted={column === 'name' ? direction : null}\n                  onClick={this.handleSort('name')}\n                >\n                  Name\n                </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'total' ? direction : null}\n                  onClick={this.handleSort('total')}\n                >\n                  Answered\n                </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'totalCorrect' ? direction : null}\n                  onClick={this.handleSort('totalCorrect')}\n                >\n                Correct\n              </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'percentCorrect' ? direction : null}\n                  onClick={this.handleSort('percentCorrect')}\n                >\n                  Percent Correct\n                </Table.HeaderCell>\n\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {_.map(data, ({ id, name, total, totalCorrect, percentCorrect }) => (\n                <Table.Row key={id}>\n                  <Table.Cell>{name}</Table.Cell>\n                  <Table.Cell>{total}</Table.Cell>\n                  <Table.Cell>{totalCorrect}</Table.Cell>\n                  <Table.Cell>{Math.round(percentCorrect *100)}%</Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n    </Segment>\n    )\n  }\n}\n\nexport default TestPerformance\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport moment from 'moment'\nimport { Query,Mutation } from \"react-apollo\";\nimport { Button, Grid, Segment, Message, Loader } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport TestHeader from '../components/TestHeader'\nimport TestChallenges from '../components/TestChallenges'\nimport TestPerformance from '../components/TestPerformance'\n\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport {TEST_QUERY,NEW_CHALLENGE_SUBSCRIPTION,DELETE_TEST_MUTATION,CHALLENGE_TEST_QUERY,TEST_STATS_QUERY, TEACHER_DASHBOARD_QUERY} from '../ApolloQueries';\n\nconst uuidv4 = require('uuid/v4');\n\nclass TestDashboard extends Component {\n\n  state = {\n    graphQLError: '',\n    isVisibleGraph:false,\n    networkError:false,\n    isVisibleNet:false,\n  }\n\n  render() {\n\n    const { test_id } = this.props.location.state\n    const userid = sessionStorage.getItem('userid')\n    const { graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n\n    return (\n\n\n\n            <div className=\"main\">\n            <div className=\"container\">\n              <TestHeader testId={test_id} />\n              <Query query={TEST_QUERY} variables={{ test_id: test_id }} fetchPolicy=\"cache-and-network\">\n                    {({ loading, error, data }) => {\n                      if (loading) return <Loading />\n                      if (error) return <Error {...error} />\n\n                      const testToRender = data.test\n\n                      const { published, publishDate, release, testType, releaseDate, endDate, startTime, endTime } = testToRender\n\n                  return (\n\n              <Grid stackable className=\"fill-content\">\n\n              <Grid.Row stretched>\n              <Grid.Column  width={16}>\n\n              <div>\n\n                <Segment>\n                <Grid>\n                <Grid.Row >\n                <Grid.Column  width={4}>\n\n                {testType==='LAB' ?\n                <Button basic disabled color=\"orange\" size=\"small\">Lab Test</Button>\n                :\n                <Button basic disabled color=\"purple\" size=\"small\">Lecture Test</Button>\n                }\n                </Grid.Column  >\n\n\n                <Grid.Column  width={8}>\n                {published &&\n                <Button disabled size=\"small\" color='green' basic>\n                  <b>Published: </b> {moment(publishDate).format(\"MMMM Do YYYY\")} <b>End: </b> {moment(endDate).format(\"MMMM Do YYYY\")} <b>Hours: </b> {startTime} - {endTime}\n                  </Button>\n                }\n\n                </Grid.Column  >\n\n\n                <Grid.Column  width={4}>\n\n              {release &&\n                <Button disabled size=\"small\" color='teal' basic>\n              <b>Questions Released: </b> {moment(releaseDate).format(\"MMMM Do YYYY\")}\n              </Button>\n              }\n              </Grid.Column  >\n\n              </Grid.Row >\n              \n              </Grid>\n\n              </Segment>\n              </div>\n\n              </Grid.Column  >\n              </Grid.Row >\n\n                <Grid.Row stretched>\n                <Grid.Column  width={8}>\n\n                <Query query={CHALLENGE_TEST_QUERY} variables={{ testId: test_id, courseId: testToRender.course.id }}>\n                      {({ loading, error, data, subscribeToMore }) => {\n                        if (loading) return <Loading />\n                        if (error) return <Error error={error} />\n\n                        const challenges = data.challenges.challenges\n\n                    return (\n                      <>\n                      <Segment  fluid=\"true\"  secondary attached='top'>\n                      {challenges.length>0 ?\n\n                          <Link  to={{\n                            pathname: \"/challenge_dashboard\",\n                            state:\n                            { course_id: testToRender.course.id,\n                              test_id: test_id }\n                            }} >\n                            {challenges.length} Challenges\n                          </Link>\n                          :\n                          <div>0 Challenges</div>\n                        }\n                      </Segment>\n\n                    <TestChallenges testToRender={testToRender} challenges={challenges}\n                    subscribeToNewChallenges={() =>\n                      subscribeToMore({\n                        document: NEW_CHALLENGE_SUBSCRIPTION,\n                        variables: {testId: test_id },\n                        updateQuery: (prev, { subscriptionData }) => {\n                          if (!subscriptionData.data) return prev\n                          let newChallenge = subscriptionData.data.newChallenge\n                          return {\n                            challenges:{\n                              challenges: [...prev.challenges.challenges, newChallenge],\n                              __typename: prev.challenges.__typename\n                          }\n                        }\n                      }\n                    })\n                    }\n                  />\n                  </>\n                  )\n                }}\n              </Query>\n\n                </Grid.Column>\n\n                <Grid.Column width={8}>\n                <div>\n\n                <Query query={TEST_STATS_QUERY} variables={{ testId: test_id, courseId: testToRender.course.id}}>\n                      {({ loading, error, data }) => {\n                        if (loading) return <Loader />\n                        if (error) return <Error error={error} />\n\n                        const stats = []\n                        data.userTestStats.forEach(function(element) {\n                        const id = uuidv4()\n                          const item =  {\n                            id: id,\n                            name: element.name,\n                            total: element.total,\n                            totalCorrect: element.totalCorrect,\n                            percentCorrect: element.percentCorrect\n                          }\n                          stats.push(item)\n                        });\n\n                    return (\n<>\n                      <Segment secondary attached='top'>\n                      <Link  to={{\n                      pathname: \"/student_performance\",\n                      state:\n                      { course_id: testToRender.course.id,\n                        test_id: testToRender.id }\n                      }} >\n                      Questions\n                      </Link>\n\n                      </Segment>\n\n                    <TestPerformance testId={testToRender.id} stats={stats}  />\n                    </>\n                    )\n                  }}\n                </Query>\n\n                </div>\n\n\n                </Grid.Column>\n              </Grid.Row>\n              </Grid>\n            )\n          }}\n          </Query>\n\n              <div style={{padding:\"15px\"}} >\n\n              <Mutation\n                  mutation={DELETE_TEST_MUTATION}\n                  variables={{ test_id: test_id }}\n                  onCompleted={data => this._confirm(data)}\n                  onError={error => this._error (error)}\n                  refetchQueries={() => {\n                     return [{\n                        query: TEACHER_DASHBOARD_QUERY,\n                        variables: { userid }\n                    }]\n                }}\n                >\n                  {mutation => (\n                    <Button  color='red' onClick={mutation}>Delete Test</Button>\n                  )}\n                </Mutation>\n\n                {isVisibleGraph &&\n                  <Message negative>\n                    <p><b>{graphQLError}</b></p>\n                  </Message>\n                }\n\n                {isVisibleNet &&\n                  <Message negative>\n                    <p><b>{networkError}</b></p>\n                  </Message>\n                }\n\n                </div>\n              </div>\n</div>\n\n\n\n\n      )\n    }\n\n    _error = async error => {\n\n        const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n        this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n        error.networkError &&\n          this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n    }\n\n    _confirm = async data => {\n      this.props.history.push({pathname: \"/course_dashboard\",\n      state:\n        { course_id: data.updateTest.course.id }})\n    }\n  }\n\n\nexport default TestDashboard\n","import React,{Component} from 'react';\nimport {withRouter} from \"react-router-dom\"\nimport moment from 'moment'\nimport '../css/App.css';\n\nimport { Link } from 'react-router-dom'\n\nclass TestHeaderStudent  extends Component {\n\n  render() {\n\n    const { subject, testNumber, course, testDate, id } = this.props\n\n    return (\n\n  <div style={{padding:'20px'}}>\n\n  <h2>\n  <Link  to={{\n    pathname: \"/student_course_dashboard\",\n    state:\n      { course_id: course.id }\n    }} >\n    {course.name} - {course.courseNumber}\n    </Link>\n    </h2>\n\n<hr/>\n  <div >\n  <h3>\n  <Link  to={{\n    pathname: \"/student_test_dashboard\",\n    state:\n      { test_id: id }\n    }} >{testNumber} - {subject} - { moment(testDate).format(\"dddd MMMM Do YYYY\") }\n    </Link></h3>\n  </div>\n  </div>\n\n)\n}\n\n}\n\nexport default withRouter(TestHeaderStudent)\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Query } from \"react-apollo\"\n\nimport { Loader,Segment,Grid } from 'semantic-ui-react'\n\nimport Error from './Error'\n\nimport {TEST_STATS_PERFORMANCE_QUERY} from '../ApolloQueries'\n\nclass TestStats extends Component {\n\n  render(){\n    return (\n\n      <Query query={TEST_STATS_PERFORMANCE_QUERY} variables={{ testId: this.props.test_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loader />\n              if (error) return <Error error={error} />\n\n              const stats = data.testStats\n\n          return (\n            <Segment>\n\n            <Grid columns={3} >\n\n            <Grid.Row>\n\n            <Grid.Column>\n              <h5><b>Answers:</b> {stats.total}</h5>\n            </Grid.Column>\n\n            <Grid.Column>\n              <h5><b>Correct:</b> {stats.totalCorrect}  </h5>\n            </Grid.Column>\n\n            <Grid.Column>\n              <h5><b>Percent Correct:</b> { stats.totalCorrect/stats.total >0 ? Math.round(stats.totalCorrect/stats.total*100) : 0 }% </h5>\n            </Grid.Column>\n\n            </Grid.Row>\n\n            </Grid>\n\n            </Segment>\n            )\n          }}\n          </Query>\n\n    )\n  }\n\n}\n\nexport default TestStats\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass TestQuestionPerformance extends Component {\n  state = {\n    column: null,\n    data: this.props.stats,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n    <Segment style={{ minHeight: 400, overflow: 'auto' }} attached>\n\n    <Table sortable celled fixed striped>\n            <Table.Header>\n\n              <Table.Row>\n                <Table.HeaderCell\n                  width={8}\n                  sorted={column === 'question' ? direction : null}\n                  onClick={this.handleSort('question')}\n                >\n                  Question\n                </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'total' ? direction : null}\n                  onClick={this.handleSort('total')}\n                >\n                  Answered\n                </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'totalCorrect' ? direction : null}\n                  onClick={this.handleSort('totalCorrect')}\n                >\n                  Correct\n                </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'percentCorrect' ? direction : null}\n                  onClick={this.handleSort('percentCorrect')}\n                >\n                  Percent\n                </Table.HeaderCell>\n\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {_.map(data, ({ id, question, total, totalCorrect, percentCorrect }) => (\n                <Table.Row key={id}>\n                  <Table.Cell>{question}</Table.Cell>\n                  <Table.Cell>{total}</Table.Cell>\n                  <Table.Cell>{totalCorrect}</Table.Cell>\n                  <Table.Cell>{Math.round(percentCorrect*100)}%</Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n    </Segment>\n    )\n  }\n}\n\nexport default TestQuestionPerformance\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Query } from \"react-apollo\";\nimport { Loader } from 'semantic-ui-react'\n\n\nimport Error from './Error'\nimport TestQuestionPerformance from '../components/TestQuestionPerformance'\n\nimport {TEST_QUESTION_STATS_QUERY} from '../ApolloQueries'\n\nconst uuidv4 = require('uuid/v4');\n\nclass TestQuestionStats extends Component {\n\n  render(){\n    return (\n\n      <Query query={TEST_QUESTION_STATS_QUERY} variables={{ testId: this.props.test_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loader />\n              if (error) return <Error error={error} />\n\n              const stats = []\n              data.testQuestionStats.forEach(function(element) {\n              const id = uuidv4()\n                const item =  {\n                  id: id,\n                  question: element.question,\n                  total: element.total,\n                  totalCorrect: element.totalCorrect,\n                  percentCorrect: element.percentCorrect\n                }\n                stats.push(item)\n              });\n\n          return (\n\n          <TestQuestionPerformance stats={stats}  />\n\n          )\n        }}\n      </Query>\n    )\n  }\n\n}\n\nexport default TestQuestionStats\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport * as Cookies from \"js-cookie\"\nimport { Query } from \"react-apollo\";\nimport { Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport TestHeaderStudent from '../components/TestHeaderStudent'\nimport TestStats from '../components/TestStats'\nimport TestQuestionStats from '../components/TestQuestionStats'\n\nimport Error from './Error'\nimport Loading from './Loading'\nimport {TEST_QUERY, CHALLENGE_STUDENT_COUNT_QUERY} from '../ApolloQueries';\n\nclass StudentTestDashboard extends Component {\n\n  render() {\n\n    const { test_id } = this.props.location.state\n    const userId = Cookies.get('userid')\n\n    return (\n\n      <Query query={TEST_QUERY} variables={{ test_id: test_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loading />\n              if (error) return <Error error={error} />\n\n              const testToRender = data.test\n\n          return (\n\n            <div className=\"main\">\n            <div className=\"container\">\n              <TestHeaderStudent  {...testToRender} />\n\n              <div className=\"coursecontainer\">\n\n              <Link  to={{\n                pathname: \"/student_test_panels\",\n                state:\n                  {\n                    test_id: test_id }\n                }} >\n                <Button color=\"blue\" >{testToRender.panels.length} Panels</Button>\n              </Link>\n\n              <Query query={CHALLENGE_STUDENT_COUNT_QUERY} variables={{ testId: test_id, userId: userId }}>\n                    {({ loading, error, data }) => {\n                      if (loading) return <Loading />\n                      if (error) return <Error error={error} />\n\n                      const {count} = data.challenges\n\n                  return (\n                    <>\n                    {count>0 &&\n\n                      <Link  to={{\n                        pathname: \"/challenge_student_dashboard\",\n                        state:\n                          {\n                            test_id: test_id }\n                        }} >\n                        <Button color=\"blue\" >{count}  Challenges</Button>\n                      </Link>\n                    }\n                    </>\n                )\n              }}\n            </Query>\n\n              <div className=\"coursecontainer\">\n\n              <TestStats test_id={test_id} />\n\n              <TestQuestionStats test_id={test_id} />\n\n              </div>\n            </div>\n\n              </div>\n</div>\n\n\n\n          )\n        }}\n      </Query>\n      )\n    }\n  }\n\n\nexport default StudentTestDashboard\n","import React from 'react';\nimport '../css/App.css';\nimport { Image, Card } from 'semantic-ui-react'\n\nconst PanelRow = (props) =>\n\n  <Card>\n    <Image src={props.panelLink} />\n    <Card.Content>\n    {props.question.length>0 &&\n      <>\n      <Card.Description><b>Label:</b> {props.question}</Card.Description>\n      <hr/>\n      </>\n    }\n      <Card.Description><b>Answers:</b> {props.total} <b>Correct:</b> {props.totalCorrect} ({Math.round(props.percentCorrect*100)}%)</Card.Description>\n    </Card.Content>\n  </Card>\n\nexport default PanelRow\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Card } from 'semantic-ui-react'\n\nimport PanelRow from './PanelRow'\n\nexport default class PanelSubList extends Component{\n\n  componentDidMount() {\n    this.props.subscribeToNewPanels()\n  }\n\n  render(){\n    return(\n    <Card.Group centered>\n      {this.props.panelStats.map(panel =>\n        <PanelRow  key={panel.id} {...panel} />\n      )}\n      </Card.Group>\n    )\n  }\n}\n","import React,{Component} from 'react'\nimport '../css/App.css'\n\nimport { Loader } from 'semantic-ui-react'\nimport { Query } from \"react-apollo\";\nimport {TEST_PANEL_STATS_QUERY, NEW_PANEL_SUBSCRIPTION} from '../ApolloQueries'\n\nimport PanelSubList from './PanelSubList'\n\nimport Error from '../components/Error'\n\nclass PanelList extends Component {\n\n  render() {\n      const { id } = this.props\n      return (\n\n        <Query query={TEST_PANEL_STATS_QUERY} variables={{ testId: id }} fetchPolicy=\"network-only\" >\n              {({ loading, error, data, subscribeToMore }) => {\n                if (loading) return < Loader />\n                if (error) return <Error {...error}/>\n\n                const panelStats = data.testPanelStats\n\n            return (\n              <PanelSubList panelStats={panelStats}\n                subscribeToNewPanels={() =>\n                  subscribeToMore({\n                    document: NEW_PANEL_SUBSCRIPTION,\n                    variables: {testId: id },\n                    updateQuery: (prev, { subscriptionData }) => {\n                      if (!subscriptionData.data) return prev\n                      let newPanel = subscriptionData.data.newPanel\n                      return {\n                        testPanelStats: [...prev.testPanelStats, newPanel]\n                      }\n                }\n              }\n            )\n            }\n              />\n              )\n            }\n          }\n        </Query>\n      )\n    }\n}\n\nexport default PanelList\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Query } from \"react-apollo\"\n\nimport {PANEL_QUERY} from '../ApolloQueries'\n\nimport TestHeader from '../components/TestHeader'\nimport PanelList from '../components/PanelList2'\nimport Error from '../components/Error'\nimport Loading from './Loading'\n\nclass TestPanels extends Component {\n\n  render() {\n\n    const { test_id } = this.props.location.state\n\n      return (\n        <div className=\"main\">\n        <div className=\"container\">\n        <TestHeader testId={test_id} />\n        <hr />\n        <Query query={PANEL_QUERY} variables={{ test_id: test_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loading />\n              if (error) return <Error {...error} />\n\n              const testToRender = data.test\n\n          return (\n\n\n                <PanelList {...testToRender}/>\n\n\n)\n}\n\n\n}\n</Query>\n\n  </div>\n\n</div>\n)\n}\n}\n\n\n\nexport default TestPanels\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Query } from \"react-apollo\"\n\nimport {PANEL_QUERY} from '../ApolloQueries'\n\nimport TestHeaderStudent from '../components/TestHeaderStudent'\nimport PanelList from '../components/PanelList2'\nimport Error from '../components/Error'\nimport Loading from './Loading'\n\nclass StudentTestPanels extends Component {\n\n  render() {\n\n    const { test_id } = this.props.location.state\n\n      return (\n\n\n      <Query query={PANEL_QUERY} variables={{ test_id: test_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loading />\n              if (error) return <Error {...error} />\n\n              const testToRender = data.test\n\n          return (\n            <div className=\"main\">\n      <div className=\"container\">\n      <div className=\"coursecontainer\">\n\n      <TestHeaderStudent {...testToRender}/>\n\n      <div style={{padding:'15px'}}>\n\n      <div className=\"coursecontainer\">\n\n      <PanelList {...testToRender}/>\n\n      </div>\n    </div>\n    </div>\n    </div>\n\n\n</div>\n\n)\n}\n\n\n}\n</Query>\n)\n}\n}\n\n\n\nexport default StudentTestPanels\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Form, Input, Button, Select, Message } from 'semantic-ui-react'\nimport {  DateTimeInput } from 'semantic-ui-calendar-react';\nimport moment from 'moment'\n\nimport { Mutation } from \"react-apollo\";\n\nimport { ADD_TEST_MUTATION } from '../ApolloQueries'\n\nimport EditCourseHeader from '../components/EditCourseHeader'\n\nclass AddTest extends Component {\n\n\n    state = {\n          testNumber:'',\n          subject:'',\n          testDate:'',\n          testType:'',\n          graphQLError: '',\n          isVisibleGraph:false,\n          networkError:false,\n          isVisibleNet:false,\n        }\n\n    handleChange = (event, {name, value}) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  }\n\n    render() {\n      const { course_id } = this.props.location.state\n      const { testNumber, subject, testDate, testType, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n      const testDate1 = moment(testDate).format()\n      const testnumbers = [{value:\"Test 1\",text:\"Test 1\"}, {value:\"Test 2\",text:\"Test 2\"}, {value:\"Test 3\",text:\"Test 3\"}, {value:\"Test 4\",text:\"Test 4\"}, {value:\"Test 5\",text:\"Test 5\"}, {value:\"Test 6\",text:\"Test 6\"}]\n      const testTypes = [{value:\"CLASS\",text:\"CLASS\"},{value:\"LAB\",text:\"LAB\"}]\n\n      return (\n        <div className=\"main\">\n        <div style={{marginLeft:'20%', marginRight:'20%'}}>\n          <div >\n\n                <EditCourseHeader course_id={course_id} />\n\n        <h2>Add Test</h2>\n\n      <Form size=\"big\">\n\n      <Form.Field\n        control={Input}\n        label='Subject'\n        value={subject}\n        onChange={e => this.setState({ subject: e.target.value })}\n        placeholder='Subject'\n      />\n      <Form.Group widths='equal'>\n\n      <DateTimeInput\n      autoComplete=\"off\"\n      width={8}\n      label='Test Date'\n      dateFormat=\"MM-DD-YYYY\"\n      timeFormat=\"AMPM\"\n          name=\"testDate\"\n          placeholder=\"Date Time\"\n          value={this.state.testDate}\n          iconPosition=\"left\"\n          onChange={this.handleChange} />\n\n      <Form.Field\n      width={4}\n        id='institutionId'\n        control={Select}\n        options={testnumbers}\n        onChange={(event, {value}) => { this.setState({ testNumber: value })}}\n        label='Test Number'\n        fluid\n        selection\n        placeholder='Select'\n      />\n\n      <Form.Field\n      width={4}\n        id='type'\n        control={Select}\n        options={testTypes}\n        onChange={(event, {value}) => { this.setState({ testType: value })}}\n        label='Test Type'\n        fluid\n        selection\n        placeholder='Select'\n      />\n      </Form.Group>\n\n      <Mutation\n          mutation={ADD_TEST_MUTATION}\n          variables={{\n            subject: subject,\n            testDate:testDate1,\n            testNumber: testNumber,\n            published: false,\n            release:false,\n            courseId: course_id,\n            testType: testType\n          }}\n          onCompleted={data => this._confirm(data)}\n        >\n          {mutation => (\n            <Button  color='blue' onClick={mutation}>Submit</Button>\n          )}\n        </Mutation>\n\n        {isVisibleGraph &&\n          <Message negative>\n            <p><b>{graphQLError}</b></p>\n          </Message>\n        }\n\n        {isVisibleNet &&\n          <Message negative>\n            <p><b>{networkError}</b></p>\n          </Message>\n        }\n\n      </Form>\n    </div>\n  </div>\n  </div>\n)\n}\n\n_error = async error => {\n\n    const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n    this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n    error.networkError &&\n      this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n}\n\n_confirm = async data => {\n  const { id } = data.addTest\n  this.props.history.push({\n    pathname: `/test_dashboard`,\n    state: { test_id: id  }\n    })\n  }\n}\n\nexport default AddTest\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Form, Input, Button, Select, Message } from 'semantic-ui-react'\nimport {  DateTimeInput } from 'semantic-ui-calendar-react';\nimport { Mutation } from \"react-apollo\"\nimport {withRouter} from \"react-router-dom\"\nimport moment from 'moment'\n\nimport {TEST_COURSE_MUTATION} from '../ApolloQueries'\n\nclass EditTestInput extends Component {\n\n      state = {\n            subject: this.props.subject,\n            testDate:moment(this.props.testDate).format(),\n            testNumber:this.props.testNumber,\n            graphQLError: '',\n            isVisibleGraph:false,\n            networkError:false,\n            isVisibleNet:false,\n  }\n\n  handleChange = (event, {name, value}) => {\n  if (this.state.hasOwnProperty(name)) {\n    this.setState({ [name]: value });\n  }\n}\n\nrender() {\n\n  const { subject, testDate, testNumber,graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n  const testnumbers = [{value:\"Test 1\",text:\"Test 1\"}, {value:\"Test 2\",text:\"Test 2\"}, {value:\"Test 3\",text:\"Test 3\"}, {value:\"Test 4\",text:\"Test 4\"}, {value:\"Test 5\",text:\"Test 5\"}, {value:\"Test 6\",text:\"Test 6\"}]\n\n  const testDate1 = moment(testDate).format()\n  return (\n\n    <div>\n\n    <Form size='big'>\n\n    <Form.Field\n      control={Input}\n      label='Subject'\n      value={subject}\n      onChange={e => this.setState({ subject: e.target.value })}\n      placeholder='Subject'\n    />\n    <Form.Group widths='equal'>\n\n    <DateTimeInput\n    label='Test Date'\n    dateFormat=\"MM-DD-YYYY\"\n    timeFormat=\"AMPM\"\n        name=\"testDate\"\n        placeholder=\"Date Time\"\n        value={this.state.testDate}\n        iconPosition=\"left\"\n        onChange={this.handleChange} />\n\n    <Form.Field\n      id='institutionId'\n      control={Select}\n      options={testnumbers}\n      value={this.state.testNumber}\n      onChange={(event, {value}) => { this.setState({ testNumber: value })}}\n      label='Test Number'\n      fluid\n      selection\n      placeholder='Select Test Number'\n    />\n    </Form.Group>\n\n          </Form>\n\n            <Mutation\n                mutation={TEST_COURSE_MUTATION}\n                variables={{\n                  subject: subject,\n                  testNumber: testNumber,\n                  testDate: testDate1,\n                  id: this.props.id\n                 }}\n                onCompleted={data => this._confirm(data)}\n                onError={error => this._error (error)}\n                optimisticResponse={{\n                  __typename: \"Mutation\",\n                  updateTest: {\n                    id: this.props.id,\n                    __typename: \"Test\",\n                    subject: subject,\n                    testNumber: testNumber,\n                    testDate: testDate1,\n                  }\n                }}\n              >\n                {mutation => (\n                  <Button  color='blue' onClick={mutation}>Submit</Button>\n                )}\n              </Mutation>\n\n              {isVisibleGraph &&\n                <Message negative>\n                  <p><b>{graphQLError}</b></p>\n                </Message>\n              }\n\n              {isVisibleNet &&\n                <Message negative>\n                  <p><b>{networkError}</b></p>\n                </Message>\n              }\n\n          </div>\n\n\n)\n}\n\n_error = async error => {\n\n    const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n    this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n    error.networkError &&\n      this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n}\n\n_confirm = async data => {\n  this.props.history.push({\n    pathname: `/test_dashboard`,\n    state: { test_id: this.props.id  }\n    })\n}\n\n}\n\nexport default withRouter(EditTestInput)\n","import React,{Component} from 'react';\nimport '../css/App.css';\n//import { Form, FormGroup, Label, Input, } from 'reactstrap';\n\nimport { Query } from \"react-apollo\";\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport EditTestInput from '../components/EditTestInput'\nimport TestHeader from '../components/TestHeader'\n\nimport {TEST_QUERY} from '../ApolloQueries'\n\nclass EditTest extends Component {\n\nrender() {\n\n  return (\n    <div className=\"main\">\n    <div className=\"container\">\n\n    <TestHeader  testId={this.props.location.state.test_id} />\n    <Query query={TEST_QUERY} variables={{ test_id: this.props.location.state.test_id }}>\n          {({ loading, error, data }) => {\n            if (loading) return <Loading/>\n            if (error) return <Error {...error}/>\n\n            const testToRender = data.test\n\n        return (\n            <div>\n            <div style={{padding:\"20px\"}}>\n\n            <h2>Edit Test</h2>\n            </div>\n            <div style={{paddingRight:'14em',paddingLeft:'14em'}}>\n            <EditTestInput {...testToRender}/>\n            </div>\n            </div>\n            )\n          }}\n        </Query>\n        </div>\n        </div>\n\n      )\n  }\n}\n\nexport default EditTest ;\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Form, Button, Select, Input, Image, Message, Checkbox, Grid, Segment } from 'semantic-ui-react'\nimport { DateTimeInput } from 'semantic-ui-calendar-react';\nimport moment from 'moment'\n\nimport { Mutation, Query } from \"react-apollo\";\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport TestHeader from '../components/TestHeader'\n\nimport {NEW_PUBLISH_TEST_MUTATION, TEST_QUERY, PUBLISH_TEST_REFETCH_QUERY} from '../ApolloQueries'\n\nclass PublishTest extends Component {\n\n    state = {\n          endDate:'',\n          endTime:'',\n          startTime:'',\n          graphQLError: '',\n          question:'',\n          choice1:'',\n          choiceCorrect1:false,\n          choice2:'',\n          choiceCorrect2:false,\n          choice3:'',\n          choiceCorrect3:false,\n          choice4:'',\n          choiceCorrect4:false,\n          graphQLErrorL:false,\n          isVisibleGraph:false,\n          networkError:false,\n          isVisibleNet:false,\n        }\n\n    handleChange = (event, {name, value}) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  }\n\n    render() {\n      const { test_id } = this.props.location.state\n\n      const { endDate,\n              endTime,\n              startTime,\n              question,\n              choice1,\n              choiceCorrect1,\n              choice2,\n              choiceCorrect2,\n              choice3,\n              choiceCorrect3,\n              choice4,\n              choiceCorrect4,\n              graphQLError,\n              networkError,\n              isVisibleNet,\n              isVisibleGraph } = this.state\n\n              const statStopNumbers = [\n              {value:\"6\",text:\"6 AM\"},\n              {value:\"7\",text:\"7 AM\"},\n              {value:\"8\",text:\"8 AM\"},\n              {value:\"9\",text:\"9 AM\"},\n              {value:\"10\",text:\"10 AM\"},\n              {value:\"11\",text:\"11 AM\"},\n              {value:\"12\",text:\"12 PM\"},\n              {value:\"13\",text:\"1 PM\"},\n              {value:\"14\",text:\"2 PM\"},\n              {value:\"15\",text:\"3 PM\"},\n              {value:\"16\",text:\"4 PM\"},\n              {value:\"17\",text:\"5 PM\"},\n              {value:\"18\",text:\"6 PM\"},\n              {value:\"19\",text:\"7 PM\"},\n              {value:\"20\",text:\"8 PM\"},\n              {value:\"21\",text:\"9 PM\"},\n              {value:\"22\",text:\"10 PM\"},\n              {value:\"23\",text:\"11 PM\"}\n            ]\n\n      return (\n        <div className=\"main\">\n        <div className=\"container\">\n\n      <Query query={TEST_QUERY} variables={{ test_id: test_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loading />\n              if (error) return <Error/>\n\n              const test = data.test\n              const firstPanel = test.panels[0]\n              return (\n                <>\n                <div style={{padding:\"20px\"}}>\n                <TestHeader  {...test} />\n                </div>\n\n                <div style={{paddingRight:\"150px\",paddingLeft:\"150px\"}} >\n\n      <h2>Publish Test</h2>\n\n      <Form size=\"big\">\n\n      <DateTimeInput\n      label='Test End Date'\n      dateFormat=\"MM-DD-YYYY\"\n      timeFormat=\"AMPM\"\n      name=\"endDate\"\n      placeholder=\"Test End Date\"\n      value={this.state.endDate}\n      iconPosition=\"left\"\n      onChange={this.handleChange} />\n\n      <Form.Group widths='equal'>\n\n      <Form.Field\n        id='startTime:'\n        control={Select}\n        options={statStopNumbers}\n        onChange={(event, {value}) => { this.setState({ startTime: value })}}\n        label='Start Time'\n        fluid\n        selection\n        placeholder='Select Start Time'\n      />\n\n      <Form.Field\n        id='endTime'\n        control={Select}\n        options={statStopNumbers}\n        onChange={(event, {value}) => { this.setState({ endTime: value })}}\n        label='Stop Time'\n        fluid\n        selection\n        placeholder='Select Stop Time'\n      />\n      </Form.Group>\n\n      <h4>First Question</h4>\n\n      <Image src={firstPanel.link} />\n\n      <Form.Field\n        id='question'\n        control={Input}\n        label='Question'\n        value={question}\n        onChange={e => this.setState({ question: e.target.value })}\n        placeholder='Question...'\n      />\n      <div style={{margin:15}}>\n\n      <Grid columns={2} >\n\n      <Grid.Row >\n\n      <Grid.Column width={14}>\n      <Form.Field\n        id='choice1'\n        control={Input}\n        label=''\n        value={choice1}\n        onChange={e => this.setState({ choice1: e.target.value })}\n        placeholder='Choice 1'\n      />\n      </Grid.Column>\n\n      <Grid.Column width={2}>\n      <Segment>\n      <Checkbox fitted\n            checked={this.state.choiceCorrect1}\n            onChange={() =>  this.setState({\n              choiceCorrect1:true,\n              choiceCorrect2:false,\n              choiceCorrect3:false,\n              choiceCorrect4:false\n            }) }\n          />\n        </Segment>\n        </Grid.Column>\n\n        </Grid.Row >\n\n      <Grid.Row >\n\n      <Grid.Column width={14}>\n      <Form.Field\n        id='choice2'\n        control={Input}\n        label=''\n        value={choice2}\n        onChange={e => this.setState({ choice2: e.target.value })}\n        placeholder='Choice 2'\n      />\n      </Grid.Column>\n\n      <Grid.Column width={2}>\n      <Segment>\n      <Checkbox fitted\n            checked={this.state.choiceCorrect2}\n            onChange={() =>  this.setState({\n              choiceCorrect1:false,\n              choiceCorrect2:true,\n              choiceCorrect3:false,\n              choiceCorrect4:false\n            }) }\n          />\n        </Segment>\n      </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row >\n\n      <Grid.Column width={14}>\n\n      <Form.Field\n        id='choice3'\n        control={Input}\n        label=''\n        value={choice3}\n        onChange={e => this.setState({ choice3: e.target.value })}\n        placeholder='Choice 3'\n      />\n\n      </Grid.Column>\n\n      <Grid.Column width={2}>\n      <Segment>\n      <Checkbox fitted\n            checked={this.state.choiceCorrect3}\n            onChange={() =>  this.setState({\n              choiceCorrect1:false,\n              choiceCorrect2:false,\n              choiceCorrect3:true,\n              choiceCorrect4:false\n            }) }\n          />\n        </Segment>\n      </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row >\n\n      <Grid.Column width={14}>\n\n      <Form.Field\n        id='choice4'\n        control={Input}\n        label=''\n        value={choice4}\n        onChange={e => this.setState({ choice4: e.target.value })}\n        placeholder='Choice 4'\n      />\n\n      </Grid.Column>\n\n      <Grid.Column width={2}>\n      <Segment>\n      <Checkbox fitted\n            checked={this.state.choiceCorrect4}\n            onChange={() =>  this.setState({\n              choiceCorrect1:false,\n              choiceCorrect2:false,\n              choiceCorrect3:false,\n              choiceCorrect4:true\n            }) }\n          />\n        </Segment>\n      </Grid.Column>\n      </Grid.Row>\n\n        </Grid >\n        </div>\n\n      <div style={{padding:10}}>\n      <Mutation\n          mutation={NEW_PUBLISH_TEST_MUTATION}\n          variables={{\n            startTime:startTime,\n            endTime:endTime,\n            endDate:moment(endDate).format(),\n            testId: test_id,\n            panelId: firstPanel.id,\n            question: question,\n            choice1: choice1,\n            choice2: choice2,\n            choice3: choice3,\n            choice4: choice4,\n            choiceCorrect1: choiceCorrect1,\n            choiceCorrect2: choiceCorrect2,\n            choiceCorrect3: choiceCorrect3,\n            choiceCorrect4: choiceCorrect4,\n          }}\n          onCompleted={data => this._confirm(data)}\n          onError={error => this._error (error)}\n          refetchQueries={() => {\n             return [{\n                query: PUBLISH_TEST_REFETCH_QUERY,\n                variables: { test_id: test_id }\n            }];\n        }}\n        >\n          {mutation => (\n            <Button  color='blue' onClick={mutation}>Submit</Button>\n          )}\n        </Mutation>\n        </div>\n\n        {isVisibleGraph &&\n          <Message negative>\n            <p><b>{graphQLError}</b></p>\n          </Message>\n        }\n\n        {isVisibleNet &&\n          <Message negative>\n            <p><b>{networkError}</b></p>\n          </Message>\n        }\n\n      </Form>\n      </div>\n      </>\n    )\n  }}\n</Query>\n    </div>\n  </div>\n\n)\n}\n_error = async error => {\n\n    const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n    this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n    error.networkError &&\n      this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n}\n\n_confirm = async data => {\n  const { id } = data.publishTest\n  this.props.history.push({\n    pathname: `/test_dashboard`,\n    state: { test_id: id  }\n    })\n  }\n}\n\n\nexport default PublishTest\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Form, Button, Select, Message } from 'semantic-ui-react'\nimport {  DateTimeInput } from 'semantic-ui-calendar-react';\nimport moment from 'moment'\nimport {withRouter} from \"react-router-dom\"\n\nimport { Mutation } from \"react-apollo\";\n\nimport {EDIT_PUBLISH_TEST_MUTATION, PUBLISH_TEST_REFETCH_QUERY} from '../ApolloQueries'\n\nclass EditPublishTestInput extends Component {\n\n  state = {\n        test_id:this.props.id,\n        published:this.props.published,\n        startTime: this.props.startTime,\n        endDate:moment(this.props.endDate).format(),\n        endTime:this.props.endTime,\n        graphQLErrorL:false,\n        isVisibleGraph:false,\n        networkError:false,\n        isVisibleNet:false,\n\n        }\n\n    handleChange = (event, {name, value}) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  }\n\n    render() {\n      const { test_id,\n              published,\n              startTime,\n              endTime,\n              endDate,\n              graphQLError,\n              networkError,\n              isVisibleNet,\n              isVisibleGraph  } = this.state\n\n      const statStopNumbers = [\n      {value:\"6\",text:\"6 AM\"},\n      {value:\"7\",text:\"7 AM\"},\n      {value:\"8\",text:\"8 AM\"},\n      {value:\"9\",text:\"9 AM\"},\n      {value:\"10\",text:\"10 AM\"},\n      {value:\"11\",text:\"11 AM\"},\n      {value:\"12\",text:\"12 PM\"},\n      {value:\"13\",text:\"1 PM\"},\n      {value:\"14\",text:\"2 PM\"},\n      {value:\"15\",text:\"3 PM\"},\n      {value:\"16\",text:\"4 PM\"},\n      {value:\"17\",text:\"5 PM\"},\n      {value:\"18\",text:\"6 PM\"},\n      {value:\"19\",text:\"7 PM\"},\n      {value:\"20\",text:\"8 PM\"},\n      {value:\"21\",text:\"9 PM\"},\n      {value:\"22\",text:\"10 PM\"},\n      {value:\"23\",text:\"11 PM\"}\n    ]\n\n\n      return (\n        <div >\n\n\n\n      <h2>Edit Published Test</h2>\n      <Form size=\"big\">\n\n      <DateTimeInput\n      label='Test End Date'\n      dateFormat=\"MM-DD-YYYY\"\n      timeFormat=\"AMPM\"\n      name=\"endDate\"\n      placeholder=\"Test End Date\"\n      value={this.state.endDate}\n      iconPosition=\"left\"\n      onChange={this.handleChange} />\n\n      <Form.Group widths='equal'>\n\n      <Form.Field\n        id='startTime'\n        control={Select}\n        options={statStopNumbers}\n        value={this.state.startTime}\n        onChange={(event, {value}) => { this.setState({ startTime: value })}}\n        label='Start Time'\n        fluid\n        selection\n        placeholder='Select Start Time'\n      />\n\n\n      <Form.Field\n        id='stopTime'\n        control={Select}\n        options={statStopNumbers}\n        value={this.state.endTime}\n        onChange={(event, {value}) => { this.setState({ endTime: value })}}\n        label='Stop Time'\n        fluid\n        selection\n        placeholder='Select Stop Time'\n      />\n      </Form.Group>\n\n      <Mutation\n          mutation={EDIT_PUBLISH_TEST_MUTATION}\n          variables={{\n            startTime:startTime,\n            endTime:endTime,\n            endDate:endDate,\n            published: published,\n            testId: test_id\n          }}\n          onCompleted={data => this._confirm(data)}\n          onError={error => this._error (error)}\n          refetchQueries={() => {\n             return [{\n                query: PUBLISH_TEST_REFETCH_QUERY,\n                variables: { test_id: test_id }\n            }];\n        }}\n        >\n          {mutation => (\n            <Button  color='blue' onClick={mutation}>Submit</Button>\n          )}\n        </Mutation>\n\n        {isVisibleGraph &&\n          <Message negative>\n            <p><b>{graphQLError}</b></p>\n          </Message>\n        }\n\n        {isVisibleNet &&\n          <Message negative>\n            <p><b>{networkError}</b></p>\n          </Message>\n        }\n\n      </Form>\n    </div>\n\n)\n}\n\n_confirm = async data => {\n  const { id } = data.editPublishTest\n  this.props.history.push({\n    pathname: `/test_dashboard`,\n    state: { test_id: id  }\n    })\n  }\n}\n\nexport default withRouter(EditPublishTestInput)\n","import React,{Component} from 'react';\nimport '../css/App.css';\n\nimport { Query } from \"react-apollo\";\nimport Error from './Error'\nimport Loading from './Loading'\nimport TestHeader from '../components/TestHeader'\nimport EditPublishTestInput from '../components/EditPublishTestInput'\n\nimport {TEST_QUERY} from '../ApolloQueries'\n\nclass EditPublishTest extends Component {\n\n\n    render() {\n      const { test_id } = this.props.location.state\n      return (\n        <div className=\"main\">\n        <div className=\"container\">\n        <div style={{padding:\"20px\"}}>\n        <TestHeader  testId={test_id} />\n        </div>\n\n      <Query query={TEST_QUERY} variables={{ test_id: test_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loading />\n              if (error) return <Error/>\n\n              const test = data.test\n\n              return (\n                <>\n\n                <div style={{paddingRight:'14em',paddingLeft:'14em'}}>\n                <EditPublishTestInput {...test} />\n                </div>\n                </>\n            )\n          }}\n        </Query>\n\n  </div>\n  </div>\n)\n}\n}\n\nexport default EditPublishTest\n","import React,{Component} from 'react';\n\nimport '../css/App.css';\nimport classNames from 'classnames'\nimport Dropzone from 'react-dropzone'\nimport { Segment, Icon, Progress  } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\nimport axios from 'axios'\n\nimport {DELETE_PANEL, ADD_PANEL_MUTATION,TEST_PANEL_STATS_QUERY} from '../ApolloQueries'\n\nclass DropZoneUpload extends Component {\n\n    state = {\n      progress:0,\n      loaded:0,\n      percent:0,\n      fileUrls:this.props.panels,\n      uploadError:false,\n      deleteError:false\n    }\n\n    deletePanel = (panelId) => {\n\n       axios({\n          url: process.env.REACT_APP_GRAPHQL_SERVER,\n          method: 'post',\n          headers: {\n            authorization: this.props.token ? `Bearer ${this.props.token}` : \"\",\n          },\n          data: {\n            query: DELETE_PANEL,\n              variables: {panelId:panelId}\n            }\n        })\n        .then(result => {\n          return axios({\n             url: process.env.REACT_APP_GRAPHQL_SERVER,\n             method: 'post',\n             headers: {\n               authorization: this.props.token ? `Bearer ${this.props.token}` : \"\",\n             },\n             data: {\n               query: TEST_PANEL_STATS_QUERY,\n                 variables: {testId:this.props.testId}\n               }\n           })\n         })\n        .catch((error) => {\n             // Error\n             if (error.response) {\n               this.setState({deleteError:true})\n                 // The request was made and the server responded with a status code\n                 // that falls out of the range of 2xx\n                 // console.log(error.response.data);\n                 // console.log(error.response.status);\n                 // console.log(error.response.headers);\n             } else if (error.request) {\n               this.setState({deleteError:true})\n                 // The request was made but no response was received\n                 // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                 // http.ClientRequest in node.js\n                 console.log(error.request);\n             } else {\n                 // Something happened in setting up the request that triggered an Error\n                 console.log('Error', error.message);\n                 this.setState({deleteError:true})\n             }\n             console.log(error.config);\n             this.setState({deleteError:true})\n           })\n          }\n\n    onDrop = async (acceptedFiles, rejectedFiles) =>  {\n      // Push all the axios request promise into a single array\n\n      const file_total = acceptedFiles.length\n      let uploadFiles = 0\n\n      acceptedFiles.map(file => {\n\n        const unsignedUploadPreset = process.env.REACT_APP_CLOUDINARY_PRESET\n        var url = process.env.REACT_APP_CLOUDINARY_URL\n\n        const formData = new FormData()\n        formData.append(\"file\", file)\n        formData.append(\"tags\", 'browser_upload')\n        formData.append(\"upload_preset\", unsignedUploadPreset)// Replace the preset name with your own\n\n        const config = {\n          headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n        }\n\n        const that = this\n         axios.post(url, formData, config)\n         .then(response => {\n          const data = response.data;\n          const fileURL = data.secure_url // You should store this URL for future references in your app\n          const testId = this.props.testId\n\n         return axios({\n            url: process.env.REACT_APP_GRAPHQL_SERVER,\n            method: 'post',\n            headers: {\n              authorization: this.props.token ? `Bearer ${this.props.token}` : \"\",\n            },\n            data: {\n              query: ADD_PANEL_MUTATION,\n                variables: {testId:testId,link:fileURL}\n              }\n          })\n          .then(result => {\n            uploadFiles += 1\n            let percent = (uploadFiles / file_total)*100\n            that.setState({percent})\n          })\n          .catch((error) => {\n               // Error\n               if (error.response) {\n                 this.setState({uploadError:true})\n                   // The request was made and the server responded with a status code\n                   // that falls out of the range of 2xx\n                   // console.log(error.response.data);\n                   // console.log(error.response.status);\n                   // console.log(error.response.headers);\n               } else if (error.request) {\n                 this.setState({uploadError:true})\n                   // The request was made but no response was received\n                   // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                   // http.ClientRequest in node.js\n                   console.log(error.request);\n               } else {\n                 this.setState({uploadError:true})\n                   // Something happened in setting up the request that triggered an Error\n                   console.log('Error', error.message);\n               }\n               this.setState({uploadError:true})\n               console.log(error.config);\n             })\n\n        })\n        return file\n      })\n    }\n\n      render() {\n        const {uploadError,deleteError} = this.state\n        return (\n\n          <div>\n\n          <div >\n          <center>\n          <div style={{width:\"500px\",paddingBottom:\"25px\"}}>\n\n          <Link  to={{\n            pathname: \"/test_panels\",\n            state: { test_id: this.props.testId }\n            }} >\n          <h4>Panel Performance Statistics</h4>\n          </Link>\n          {uploadError && <div>There has been an error uploading. Please try again.</div> }\n          {deleteError && <div>There has been an error deleting. Please try again.</div> }\n\n        <Dropzone token={this.props.token} onDrop={this.onDrop}>\n          {({getRootProps, getInputProps, isDragActive}) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames('dropzone', {'dropzone--isActive': isDragActive})}\n              >\n                <input {...getInputProps()} />\n                {\n                  isDragActive ?\n                  <Segment placeholder  size='big'>\n\n                    <Icon name='images outline' /><br/>\n                    Drop or Choose Files\n\n                  </Segment>\n\n                   :\n\n                  <Segment placeholder  >\n\n                    <Icon name='images outline'  size='big'/><br/>\n                    Drop or Choose Files\n\n                  </Segment>\n\n                }\n              </div>\n\n            )\n          }\n        }\n\n        </Dropzone>\n        </div >\n        </center>\n        </div >\n        <Progress percent={this.state.percent} color='teal' />\n    </div>\n\n      )\n    }\n\n  }\n\n\nexport default DropZoneUpload\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Image, Button, Dimmer, Header } from 'semantic-ui-react'\nimport { Mutation } from \"react-apollo\"\nimport {DELETE_PANEL, TEST_PANEL_STATS_QUERY, PANEL_COUNT_QUERY} from '../ApolloQueries'\n\nclass UploadPanel extends Component {\n  state = {}\n\n  handleShow = () => this.setState({ active: true })\n  handleHide = () => this.setState({ active: false })\n\n  render() {\n    const { active } = this.state\n    const content = (\n      <div>\n        <Header as='h2' inverted>\n          Title\n        </Header>\n\n        <Mutation\n            mutation={DELETE_PANEL}\n            variables={{ panelId:this.props.id}}\n            onError={error => this._error (error)}\n            refetchQueries={() => { return [{\n                query: TEST_PANEL_STATS_QUERY,\n                variables: { testId: this.props.test_id }},\n                {\n                query: PANEL_COUNT_QUERY,\n                variables: { testId: this.props.test_id }}\n              ]\n              }}\n            >\n            {mutation => (\n              <div style={{padding:'15px'}}>\n              <Button color='red' onClick={mutation}>Delete</Button>\n              </div>\n            )}\n          </Mutation>\n\n\n      </div>\n    )\n\n    return (\n      <div style={{padding:\"5px\"}}>\n      <Dimmer.Dimmable\n             as={Image}\n             dimmed={active}\n             dimmer={{ active, content }}\n             onMouseEnter={this.handleShow}\n             onMouseLeave={this.handleHide}\n             size='medium'\n             src={this.props.panelLink}\n           />\n           </div>\n\n)\n}\n\n}\n\nexport default UploadPanel\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Card } from 'semantic-ui-react'\n\nimport UploadPanel from './UploadPanel'\n\nexport default class AddPanelSubList extends Component{\n\n  componentDidMount() {\n    this.props.subscribeToNewPanels()\n  }\n\n  render(){\n    return(\n      \n      <div >\n\n      <Card.Group centered>\n\n      {Object.values(this.props.panelStats).map(panel =>\n        <UploadPanel test_id={this.props.testId} key={panel.panelLink} {...panel}/>)}\n\n      </Card.Group>\n\n      </div>\n\n    )\n  }\n}\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Query } from \"react-apollo\";\nimport Error from './Error'\nimport { Loader } from 'semantic-ui-react'\nimport AddPanelSubList from './AddPanelSubList'\n\nimport { TEST_PANEL_STATS_QUERY, NEW_PANEL_SUBSCRIPTION } from '../ApolloQueries'\n\nclass AddPanelList extends Component {\n\n  render(){\n    const { testId } = this.props\n    return (\n\n      <Query query={TEST_PANEL_STATS_QUERY} variables={{ testId: testId }} fetchPolicy=\"network-only\">\n            {({ loading, error, data, subscribeToMore }) => {\n              if (loading) return <Loader />\n              if (error) return <Error error={error} />\n\n                const testPanelStats = data.testPanelStats\n\n          return (\n\n            <AddPanelSubList panelStats={testPanelStats} testId={testId}\n              subscribeToNewPanels={() =>\n                subscribeToMore({\n                  document: NEW_PANEL_SUBSCRIPTION,\n                  variables: {testId: testId },\n                  updateQuery: (prev, { subscriptionData }) => {\n                    if (!subscriptionData.data) return prev\n                    let newPanel = subscriptionData.data.newPanel\n                    return {\n                      testPanelStats:  [...prev.testPanelStats, newPanel]\n                  }\n                }\n              })\n            }\n            />\n\n          )\n        }}\n      </Query>\n    )\n  }\n\n}\n\nexport default AddPanelList\n","import React,{Component} from 'react'\nimport '../css/App.css'\n\nimport TestHeader from '../components/TestHeader'\nimport DropZoneUpload from '../components/DropZoneUpload2'\nimport AddPanelList from '../components/AddPanelList'\n\nclass AddPanels extends Component {\n\n    render() {\n      const { test_id } = this.props.location.state\n      const auth_token = sessionStorage.getItem('auth_token');\n\n      return (\n        <div className=\"main\">\n        <div className=\"coursecontainer\">\n\n          <TestHeader testId={test_id} />\n\n          <hr/>\n\n          <DropZoneUpload token={auth_token} testId={test_id} />\n\n          <AddPanelList testId={test_id} />\n\n        </div>\n        </div>\n        )\n      }\n    }\n\nexport default AddPanels\n","import React from 'react';\nimport '../css/App.css';\n\nimport { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\n\n\nconst Main = () =>\n<div className=\"main\">\n<main role=\"main\">\n\n    <div className=\"container_upper\">\n      <h1 className=\"display-3\">Welcome to Quandrio</h1>\n      <p>For study groups and quiz each other with your class materials</p>\n    </div>\n\n\n  <div className=\"container_lower\">\n\n  <Row>\n    <Col >\n      <Card body>\n        <CardTitle>For Students</CardTitle>\n        <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n        <Button color=\"primary\">Go somewhere</Button>\n      </Card>\n    </Col>\n    <Col >\n      <Card body>\n        <CardTitle>For Teachers</CardTitle>\n        <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n        <Button color=\"primary\">Go somewhere</Button>\n      </Card>\n    </Col>\n    <Col >\n      <Card body>\n        <CardTitle>For Schools</CardTitle>\n        <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n        <Button color=\"primary\">Go somewhere</Button>\n      </Card>\n    </Col>\n  </Row>\n\n\n  </div>\n\n</main>\n</div>\nexport default Main\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass TestPerformanceAll extends Component {\n  state = {\n    column: null,\n    data: this.props.stats,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n      <Segment style={{ minHeight: 400, overflow: 'auto' }} attached>\n\n    <Table sortable celled fixed striped >\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  sorted={column === 'name' ? direction : null}\n                  onClick={this.handleSort('name')}\n                >\n                  Name\n                </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'total' ? direction : null}\n                  onClick={this.handleSort('total')}\n                >\n                  Answered\n                </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'totalCorrect' ? direction : null}\n                  onClick={this.handleSort('totalCorrect')}\n                >\n                Correct\n              </Table.HeaderCell>\n\n                <Table.HeaderCell\n                  sorted={column === 'percentCorrect' ? direction : null}\n                  onClick={this.handleSort('percentCorrect')}\n                >\n                  Percent Correct\n                </Table.HeaderCell>\n\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {_.map(data, ({ id, name, total, totalCorrect, percentCorrect }) => (\n                <Table.Row key={id}>\n                  <Table.Cell>{name}</Table.Cell>\n                  <Table.Cell>{total}</Table.Cell>\n                  <Table.Cell>{totalCorrect}</Table.Cell>\n                  <Table.Cell>{Math.round(percentCorrect*100)}%</Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n    </Segment>\n    )\n  }\n}\n\nexport default TestPerformanceAll\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Query } from \"react-apollo\";\nimport { Loader } from 'semantic-ui-react'\n\nimport Error from './Error'\nimport TestPerformanceAll from '../components/TestPerformanceAll'\n\nimport {USER_TEST_STATS_QUERY} from '../ApolloQueries'\n\nconst uuidv4 = require('uuid/v4');\n\nclass UserTestStats extends Component {\n\n  render(){\n    const { test_id, course_id } = this.props\n    return (\n\n      <Query query={USER_TEST_STATS_QUERY} variables={{ testId: test_id, courseId: course_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loader />\n              if (error) return <Error error={error} />\n\n              const stats = []\n              data.userTestStats.forEach(function(element) {\n              const id = uuidv4()\n                const item =  {\n                  id: id,\n                  name: element.name,\n                  total: element.total,\n                  totalCorrect: element.totalCorrect,\n                  percentCorrect: element.percentCorrect\n                }\n                stats.push(item)\n              });\n\n          return (\n\n          <TestPerformanceAll testId={test_id} stats={stats}  />\n          )\n        }}\n      </Query>\n\n    )\n  }\n\n}\n\nexport default UserTestStats\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Grid } from 'semantic-ui-react'\n\nimport TestHeader from '../components/TestHeader'\nimport TestStats from '../components/TestStats'\nimport UserTestStats from '../components/UserTestStats'\nimport TestQuestionStats from '../components/TestQuestionStats'\n\nclass StudentPerformance extends Component {\n\n  state = {\n    courseId: '',\n  }\n\n  render() {\n    const { test_id, course_id } = this.props.location.state\n\n      return (\n\n        <div className=\"main\">\n\n        <div className=\"container\">\n\n      <TestHeader testId={test_id} />\n\n      <div className=\"coursecontainer\">\n\n      <Grid  stackable className=\"fill-content\">\n\n      <Grid.Row stretched>\n      <Grid.Column width={16} >\n\n      <TestStats test_id={test_id} />\n\n      </Grid.Column  >\n\n      </Grid.Row>\n\n        <Grid.Row stretched>\n        <Grid.Column width={8} >\n\n        <UserTestStats test_id={test_id} course_id={course_id} />\n\n        </Grid.Column  >\n\n        <Grid.Column  width={8}>\n\n         <TestQuestionStats test_id={test_id} />\n\n      </Grid.Column  >\n\n      </Grid.Row>\n      </Grid>\n      </div>\n      </div>\n    </div>\n\n\n)\n}\n}\n\nexport default StudentPerformance ;\n","import React,{Component} from 'react';\nimport '../css/App.css';\n\nimport { Query } from \"react-apollo\"\nimport {TEST_QUERY} from '../ApolloQueries'\n\nimport TestHeaderStudent from '../components/TestHeaderStudent'\nimport TestStats from '../components/TestStats'\nimport TestQuestionStats from '../components/TestQuestionStats'\nimport Error from './Error'\nimport Loading from './Loading'\n\nclass StudentTestPerformance extends Component {\n\n  state = {\n    courseId: '',\n  }\n\n  render() {\n    const { test_id } = this.props.location.state\n\n      return (\n\n        <div className=\"main\">\n\n        <div className=\"container\">\n\n      <Query query={TEST_QUERY} variables={{ test_id: test_id }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loading />\n              if (error) return <Error error={error} />\n\n              const testToRender = data.test\n\n          return (\n\n      <TestHeaderStudent  {...testToRender} />\n\n      )\n    }\n  }\n    </Query>\n\n      <div className=\"coursecontainer\">\n\n      <TestStats test_id={test_id} />\n\n      <div className=\"coursecontainer\">\n\n        <TestQuestionStats test_id={test_id} />\n\n      </div>\n    </div>\n    </div>\n    </div>\n\n)\n}\n}\n\nexport default StudentTestPerformance\n","import React from 'react';\nimport '../css/App.css';\nimport { Comment } from 'semantic-ui-react'\nconst moment = require('moment')\n\nconst ChallengeMessageRow = (props) =>\n\n    <Comment >\n    <Comment.Content>\n      <Comment.Author as='a'>{props.addedBy.firstName} {props.addedBy.lastName}</Comment.Author>\n      <Comment.Metadata>\n        <div>{moment(props.addedDate).calendar()}</div>\n      </Comment.Metadata>\n      <Comment.Text ><div >{props.challengeMessage}</div></Comment.Text>\n    </Comment.Content>\n    </Comment>\n\nexport default ChallengeMessageRow\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Comment } from 'semantic-ui-react'\n\nimport ChallengeMessageRow from './ChallengeMessageRow'\n\n\nclass ChallengeMessageList extends Component {\n\n  messagesEnd = React.createRef()\n\n  componentDidMount() {\n    //this.scrollToBottom()\n    this.props.subscribeToNewChallengeMessage();\n  }\n\n  componentDidUpdate () {\n    //this.scrollToBottom()\n  }\n\n  scrollToBottom = () => {\n    this.messagesEnd.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\nrender() {\n\n\nreturn (\n  <Comment.Group size='small' style={{ overflow: 'auto', height: 375, textAlign:\"left\", paddingLeft:'20px'}}>\n    {this.props.challengeMessages.map(challengeMessage =>\n      <ChallengeMessageRow key={challengeMessage.id} {...challengeMessage} />)}\n  </Comment.Group>\n\n)\n}\n}\n\n\n\n\nexport default ChallengeMessageList\n","import React,{Component} from 'react';\nimport '../css/App.css';\nimport { Image, Icon, Grid, Form, Input, Button, Segment, Loader } from 'semantic-ui-react'\nimport ChallengeMessageList from './ChallengeMessageList'\nimport Error from './Error'\n\nimport { withRouter } from \"react-router-dom\";\nimport { Mutation, Query } from \"react-apollo\";\n\nimport {CHALLENGE_SECTION_QUERY, CHALLENGE_MESSAGE_SUBSCRIPTION, CHALLENGE_MESSAGE_QUERY, ADD_CHALLENGE_MESSAGE_MUTATION,CHALLENGE_DASHBOARD_QUERY } from '../ApolloQueries'\n\nclass ChallengeSection extends Component {\n\n  state = { challengeMessage:'' }\n\n  componentDidMount(){\n    this.props.changeChallenge(this.props.initialChallengeId)\n  }\n\n  render() {\n\n      const { challengeMessage } = this.state\n      const { challengeId } = this.props\n\n    return (\n\n      <Query query={CHALLENGE_SECTION_QUERY} variables={{ challengeId: challengeId }}>\n            {({ loading, error, data }) => {\n              if (loading) return <Loader />\n              if (error) return <Error {...error}/>\n\n              const challengeToRender= data.challenge\n\n          return (\n\n        <Grid columns={2} >\n        <Grid.Row>\n        <Grid.Column >\n\n        <div style={{textAlign: 'left',padding:'20px'}}>\n\n        <div style={{width:\"100%\"}}>\n\n        <div>\n        <b>Challenge:</b> {challengeToRender.challenge}\n        </div>\n\n        <div>\n        <b>By:</b> {challengeToRender.addedBy.firstName} {challengeToRender.addedBy.lastName}\n        </div>\n\n        <div><b>Answer Given:</b>\n        {\n        challengeToRender.answer.answer.choice\n        } </div>\n\n        <div style={{padding:'10px'}}>\n\n        <div>\n        <b>Question:</b> {challengeToRender.answer.answer.question.question}\n        </div>\n\n        <div>\n        <ul>\n        {\n          challengeToRender.answer.answer.question.choices.map(choice => <li key={choice.choice}>{choice.choice} {choice.correct &&  <Icon  size='large' name='check square outline' color='teal' />} </li>)\n        }\n        </ul>\n        </div>\n\n        <div>\n        <b>By:</b>{challengeToRender.answer.answer.question.addedBy.firstName} {challengeToRender.answer.answer.question.addedBy.lastName}\n        </div>\n\n        </div>\n\n        <div>\n        {challengeToRender.answer.answer.question.panel.link &&\n          <Image  src={challengeToRender.answer.answer.question.panel.link} />\n        }\n        </div>\n\n        </div>\n\n        </div>\n\n        </Grid.Column>\n\n        <Grid.Column centered='true'>\n        <Segment style={{ minHeight: 450, overflow: 'auto' }} attached>\n        <Query query={CHALLENGE_MESSAGE_QUERY}\n              variables={{ challengeId: challengeId }} >\n          {({ loading, error, data, subscribeToMore }) => {\n            if (loading) return <Loader />\n            if (error) return <div>Error... </div>\n\n            const challengeMessages = data.challengeMessages\n\n            return (\n\n              <ChallengeMessageList {...challengeMessages}\n              subscribeToNewChallengeMessage={() =>\n                subscribeToMore({\n                  document: CHALLENGE_MESSAGE_SUBSCRIPTION,\n                  variables: {challengeId: challengeId },\n                  updateQuery: (prev, { subscriptionData }) => {\n                    if (!subscriptionData.data) return prev\n                    const newChallengeMsg = subscriptionData.data.challengeMsg.node\n                    return  Object.assign({}, prev, {\n                      challengeMessages: {\n                        challengeMessages: [...prev.challengeMessages.challengeMessages, newChallengeMsg],\n                        __typename: prev.challengeMessages.__typename\n                    }\n                    })\n                  }\n                })\n              }\n              />\n          )\n       }}\n     </Query>\n     </Segment>\n        <Form onSubmit={() => this.setState({ challengeMessage: ''})}>\n        <div style={{marginTop:'20px'}}>\n\n        <Form.Group>\n\n        <Mutation\n            mutation={ADD_CHALLENGE_MESSAGE_MUTATION}\n            variables={{ challengeId: challengeToRender.id, challengeMessage:challengeMessage }}\n            refetchQueries={() => {\n               return [{\n                  query: CHALLENGE_DASHBOARD_QUERY,\n                  variables: { testId: challengeToRender.answer.answer.question.test.id, }\n              }]\n              }} >\n            {mutation => (\n\n              <Input\n              action={ <Button size=\"tiny\" color='teal' onClick={mutation}>Submit</Button>}\n                size=\"tiny\"\n                    placeholder='comment...'\n                    name='challengeMessage'\n                    value={this.state.challengeMessage}\n                    onChange={e => this.setState({ challengeMessage: e.target.value })}\n                  />\n                    )}\n          </Mutation>\n          </Form.Group>\n\n          </div>\n\n        </Form>\n\n        </Grid.Column>\n        </Grid.Row>\n\n        </Grid>\n      )\n    }\n  }\n  </Query>\n    )\n  }\n}\n\n\nexport default withRouter(ChallengeSection)\n","import React from 'react';\nimport '../css/App.css';\nimport moment from 'moment'\nimport { Table } from 'semantic-ui-react'\n\nconst ChallengeNavRow = (props) =>\n<Table.Row>\n<Table.Cell>\n\n<div onClick={() => props.changeChallenge(props.id)}>\n<div >\n  <b>Challenge: </b>\n  {props.challenge}\n</div >\n\n\n\n<div style={{fontSize: '12px'}}>\n  By {props.addedBy.firstName} {props.addedBy.lastName}\n</div>\n\n<hr />\n\n<div >\n<b>Question: </b>\n  {props.answer.question.question}\n</div>\n<div style={{fontSize: '12px'}}>\n  By {props.answer.question.addedBy.firstName} {props.answer.question.addedBy.lastName}\n</div>\n<hr />\n  <div style={{fontSize: '12px',color:'#C0C0C0'}}>\n    {moment(props.addedDate).format(\"dddd, MMMM Do YYYY, h:mm a\")}\n  </div >\n  </div>\n\n  </Table.Cell>\n  </Table.Row>\nexport default ChallengeNavRow\n","import React,{Component} from 'react'\nimport { Table,Segment } from 'semantic-ui-react'\n\nimport ChallengeNavRow from '../components/ChallengeNavRow'\n\nexport default class ChallengeDList extends Component {\n\n  componentDidMount() {\n    //this.scrollToBottom()\n    this.props.subscribeToNewChallenges();\n  }\n\n  render(){\n    const {challenges} = this.props\n    return (\n      <>\n      <Segment  fluid=\"true\"  secondary attached='top'>\n        {challenges.length} Challenges\n      </Segment>\n\n      <Segment style={{ maxHeight: 500, overflow: 'auto' }} attached>\n      <Table celled selectable>\n\n        <Table.Body>\n          {\n            challenges.map(challenge =>\n            <ChallengeNavRow key={challenge.id}  changeChallenge={this.props.changeChallenge} {...challenge} test_id={this.props.test_id} />)\n          }\n\n       </Table.Body>\n\n      </Table>\n      </Segment>\n      </>\n    )\n  }\n}\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Grid, Segment } from 'semantic-ui-react'\nimport TestHeader from '../components/TestHeader'\n\nimport ChallengeSection from '../components/ChallengeSection3'\nimport ChallengeDList from '../components/ChallengeDList'\n\n\nimport { Query } from \"react-apollo\"\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport {CHALLENGE_DASHBOARD2_QUERY,NEW_CHALLENGE_SUBSCRIPTION} from '../ApolloQueries'\n\nclass ChallengeDashboard extends Component {\n\n  state = {\n    challengeId: '',\n    test_id:this.props.location.state.test_id\n  }\n\n  changeChallenge = (challengeId) =>\n    this.setState({challengeId:challengeId})\n\n\n  render() {\n\n    const {challengeId,test_id} = this.state\n\n      return (\n\n\n            <div className=\"main\">\n\n                <div className=\"container\">\n\n                      <TestHeader testId={test_id} />\n\n                <Query query={CHALLENGE_DASHBOARD2_QUERY} variables={{ testId: test_id }}>\n                      {({ loading, error, data, subscribeToMore }) => {\n                        if (loading) return <Loading />\n                        if (error) return <Error {...error} />\n\n                        const challenges = data.challenges.challenges\n                        const initialChallengeId = challenges[0].id\n\n                    return (\n\n                  <div className=\"coursecontainer\">\n\n                  <Grid columns={2} >\n                  <Grid.Row >\n                  <Grid.Column width={6}>\n\n                  <ChallengeDList\n                      challenges={challenges}\n                      changeChallenge={this.changeChallenge}\n                      test_id={test_id}\n                      subscribeToNewChallenges={() =>\n                        subscribeToMore({\n                          document: NEW_CHALLENGE_SUBSCRIPTION,\n                          variables: {testId: test_id },\n                          updateQuery: (prev, { subscriptionData }) => {\n                            if (!subscriptionData.data) return prev\n                            let newChallenge = subscriptionData.data.newChallenge.node\n                            return  Object.assign({}, prev, {\n                              challenges: {\n                                challenges: [...prev.challenges.challenges, newChallenge],\n                                __typename: prev.challenges.__typename\n                            }\n                            })\n                        }\n                      })\n                    }\n                  />\n\n                  </Grid.Column >\n\n                  <Grid.Column centered='true' width={10}>\n\n                  <Segment style={{ minHeight: 500, overflow: 'auto' }} attached>\n\n                  <ChallengeSection changeChallenge={this.changeChallenge} initialChallengeId={initialChallengeId} challengeId={challengeId} />\n\n                  </Segment>\n                  </Grid.Column>\n                  </Grid.Row>\n                  </Grid>\n                  </div>\n\n\n                )\n              }\n              }\n          </Query>\n          </div>\n          </div>\n\n    )\n  }\n}\n\nexport default ChallengeDashboard\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass StudentCourseList extends Component {\n  state = {\n    column: null,\n    data: this.props.students,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n    <Segment style={{ minHeight: 400, overflow: 'auto' }} attached>\n      <h4>Enrolled Students</h4>\n    <Table sortable celled fixed  >\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell\n              sorted={column === 'name' ? direction : null}\n              onClick={this.handleSort('firstName')}\n            >\n              First Name\n            </Table.HeaderCell>\n\n            <Table.HeaderCell\n              sorted={column === 'name' ? direction : null}\n              onClick={this.handleSort('lastName')}\n            >\n              Last Name\n            </Table.HeaderCell>\n\n            <Table.HeaderCell\n              sorted={column === 'percentCorrect' ? direction : null}\n              onClick={this.handleSort('percentCorrect')}\n            >\n              Percent Correct\n            </Table.HeaderCell>\n\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {_.map(data, ({ id, firstName, lastName, percentCorrect }) => (\n            <Table.Row key={id}>\n              <Table.Cell>{firstName}</Table.Cell>\n              <Table.Cell>{lastName}</Table.Cell>\n              <Table.Cell>{Math.round(percentCorrect*100)}%</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </Segment>\n    )\n  }\n}\n\nexport default StudentCourseList\n","import React,{Component} from 'react'\nimport '../css/App.css'\n\nimport CourseHeader from '../components/CourseHeader'\nimport Loading from './Loading'\nimport CourseStudentList from '../components/CourseStudentList'\nimport { Query } from \"react-apollo\"\nimport Error from './Error'\n\nimport {COURSE_STUDENT_QUERY} from '../ApolloQueries'\n\nexport default class CourseStudents extends Component {\n\n  render() {\n\n    const { course_id }= this.props.location.state\n\n    return (\n    <Query query={COURSE_STUDENT_QUERY} variables={{ courseId: course_id }} fetchPolicy=\"cache-and-network\">\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error}/>\n\n            const courseToRender = data.course\n\n            const students = []\n            courseToRender.students.forEach(function(element) {\n              const item =  {\n                id: element.id,\n                firstName:element.firstName,\n                lastName:element.lastName,\n                percentCorrect: element.answers.filter(a => a.answerCorrect).length / element.answers.length > 0 ? element.answers.filter(a => a.answerCorrect).length / element.answers.length : 0.0\n              }\n              students.push(item)\n            });\n\n        return (\n\n      <div className=\"main\">\n        <div className=\"container\">\n          <CourseHeader {...courseToRender} />\n          <CourseStudentList students={students} courseId={course_id} />\n          <div >\n          </div>\n        </div>\n      </div>\n        )\n      }}\n    </Query>\n    )\n  }\n}\n","import React,{Component} from 'react'\nimport '../css/App.css'\n//import { Form, FormGroup, Label, Input, } from 'reactstrap'\nimport { Form, Input, Button, Select, Message } from 'semantic-ui-react'\n\nimport { Mutation } from \"react-apollo\"\n\nimport {ADD_INSTITUTION_MUTATION,INSTITUTIONS_QUERY} from '../ApolloQueries'\n\nclass AddInstitution extends Component {\n\n  state = {\n        name:'',\n        address1:'',\n        address2: '',\n        city: '',\n        state: '',\n        zip: '',\n        phone: '',\n        email: '',\n        type:'',\n        graphQLError: false,\n        isVisibleGraph:false,\n        networkError:false,\n        isVisibleNet:false,\n      }\n\nrender() {\n\n  const { name, type,     address1,    address2,    city,    state,  zip,    phone,  email, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n  const institutionTypes = [{value:\"University\",text:\"University\"},\n                            {value:\"Community College\",text:\"Community College\"},\n                            {value:\"High School\",text:\"High School\"},\n                            {value:\"Junior High School\",text:\"Junior High School\"},\n                            {value:\"Language School\",text:\"Language School\"},\n                            {value:\"Vocational School\",text:\"Vocational School\"},\n                            {value:\"Business\",text:\"Business\"},]\n\n\n  return (\n    <div className=\"main\">\n\n      <div className=\"container\">\n\n      <div style={{marginRight:'250px',marginLeft:'250px'}} >\n\n\n      <h2 style={{padding:'25px'}}>Add Institution</h2>\n\n      <Form size=\"big\">\n\n      <Form.Field required\n        id='name'\n        control={Input}\n        label='Institution Name'\n        value={name}\n        onChange={e => this.setState({ name: e.target.value })}\n        placeholder='Institution Name'\n      />\n\n      <Form.Field\n        id='address1'\n        control={Input}\n        label='Address 1'\n        value={address1}\n        onChange={e => this.setState({ address1: e.target.value })}\n        placeholder='Address 1'\n      />\n\n      <Form.Field\n        id='address2'\n        control={Input}\n        label='Address 2'\n        value={address2}\n        onChange={e => this.setState({ address2: e.target.value })}\n        placeholder='Address 2'\n      />\n\n      <Form.Group>\n      <Form.Field\n        id='city'\n        control={Input}\n        label='City'\n        value={city}\n        onChange={e => this.setState({ city: e.target.value })}\n        placeholder='City'\n        width={8}\n      />\n\n      <Form.Field\n        id='state'\n        control={Input}\n        label='State'\n        value={state}\n        onChange={e => this.setState({ state: e.target.value })}\n        placeholder='State'\n        width={4}\n      />\n\n      <Form.Field\n        id='zip'\n        control={Input}\n        label='Zip'\n        value={zip}\n        onChange={e => this.setState({ zip: e.target.value })}\n        placeholder='Zip'\n        width={4}\n      />\n      </Form.Group>\n\n      <Form.Group>\n      <Form.Field\n        id='phone'\n        control={Input}\n        label='Phone'\n        value={phone}\n        onChange={e => this.setState({ phone: e.target.value })}\n        placeholder='Phone'\n        width={6}\n      />\n\n      <Form.Field\n        id='email'\n        control={Input}\n        label='Email'\n        value={email}\n        onChange={e => this.setState({ email: e.target.value })}\n        placeholder='Email'\n        width={10}\n      />\n\n      </Form.Group>\n\n      <Form.Field required\n        id='institutionType'\n        control={Select}\n        options={institutionTypes}\n        onChange={(event, {value}) => { this.setState({ type: value })}}\n        label='Institution Type'\n        fluid\n        selection\n        placeholder='Select Institution Type'\n      />\n\n      </ Form>\n\n        <Mutation\n            mutation={ADD_INSTITUTION_MUTATION}\n            variables={{\n              name: name,\n              type:type,\n              address1:address1,\n              address2: address2,\n              city: city,\n              state: state,\n              zip: zip,\n              phone: phone,\n              email: email,\n            }}\n            onError={error => this._error (error)}\n            onCompleted={data => this._confirm(data)}\n            refetchQueries={() => { return [{\n                query: INSTITUTIONS_QUERY\n                }]\n              }}\n            >\n            {mutation => (\n              <div style={{padding:'15px'}}>\n              <Button color='blue' onClick={mutation}>Submit</Button>\n              </div>\n            )}\n          </Mutation>\n\n          {isVisibleGraph &&\n            <Message negative>\n              <p><b>{graphQLError}</b></p>\n            </Message>\n          }\n\n          {isVisibleNet &&\n            <Message negative>\n              <p><b>{networkError}</b></p>\n            </Message>\n          }\n\n          </div>\n\n        </div>\n      </div>\n      )\n    }\n\n    _error = async error => {\n\n        const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n        this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n        error.networkError &&\n          this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n    }\n\n    _confirm = async data => {\n      const { id } = data.addInstitution\n      this.props.history.push({\n        pathname: `/institution_dashboard`,\n        state: { institutionId: id  }\n        })\n    }\n\n  }\n\nexport default AddInstitution\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Button, Grid, Segment, Message } from 'semantic-ui-react'\nimport InstitutionHeader from '../components/InstitutionHeader'\nimport InstitutionAdmins from '../components/InstitutionAdmins'\n\nimport InstitutionTeachers from '../components/InstitutionTeachers'\n\nimport InstitutionCourses from '../components/InstitutionCourses'\n\nimport { Query, Mutation } from \"react-apollo\"\nimport Error from './Error'\nimport Loading from './Loading'\n\n\nimport {INSTITUTION_QUERY, DELETE_INSTITUTION_MUTATION, INSTITUTIONS_QUERY} from '../ApolloQueries'\n\nclass InstitutionDashboard extends Component {\n\n  state = {\n    graphQLError: '',\n    isVisibleGraph:false,\n    networkError:false,\n    isVisibleNet:false,\n  }\n\n  render() {\n\n    const { institutionId }= this.props.location.state\n    const { graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n    return (\n      <div className=\"main\">\n\n      <InstitutionHeader institutionId={institutionId} />\n\n    <Query query={INSTITUTION_QUERY} variables={{ institutionId: institutionId }} fetchPolicy=\"cache-and-network\" >\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error}/>\n\n            const {id, address1, address2, city, state, zip, phone, email, courses, teachers, admins } = data.institution\n            const coursesActive = courses.filter(course => !course.deleted)\n\n        return (\n              <>\n              <div style={{margin:25}}>\n\n              <Grid  stackable className=\"fill-content\">\n                <Grid.Row >\n\n                <Grid.Column width={5}>\n\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>Administrators</b></div>\n\n                </Segment>\n                <InstitutionAdmins institutionId={id} admins={admins} />\n\n                </Grid.Column>\n\n                <Grid.Column width={5}>\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>Teachers</b></div>\n\n                </Segment>\n\n                <InstitutionTeachers institutionId={id}  teachers={teachers} />\n\n                </Grid.Column>\n\n                <Grid.Column width={6}>\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>Courses</b></div>\n\n                </Segment>\n\n                <InstitutionCourses institutionId={id} courses={coursesActive} />\n\n                </Grid.Column>\n\n                </Grid.Row>\n\n                <Grid.Row>\n\n                <Grid.Column width={16}>\n                <Segment >\n                <p><b>Address:</b> { address1 } { address2 } { city }, { state } { zip }</p>\n                <p>\n                <b>Phone:</b> { phone } <b>Email:</b> <a href={\"mailto:\"+email}>{email}</a>\n                </p>\n                </Segment>\n\n                </Grid.Column>\n\n                </Grid.Row>\n\n                </Grid>\n                </div>\n\n              <Mutation\n                  mutation={DELETE_INSTITUTION_MUTATION}\n                  variables={{ institutionId:id }}\n                  onCompleted={data => this._confirm(data)}\n                  onError={error => this._error(error)}\n                  refetchQueries={() => { return [{\n                    query: INSTITUTIONS_QUERY,\n                  }]\n                }}>\n                  {mutation => (\n                    <div><Button  color='red' onClick={mutation}>Delete Institution</Button></div>\n                  )}\n                </Mutation>\n\n\n                {isVisibleGraph &&\n                  <Message negative>\n                    <p><b>{graphQLError}</b></p>\n                  </Message>\n                }\n\n                {isVisibleNet &&\n                  <Message negative>\n                    <p><b>{networkError}</b></p>\n                  </Message>\n                }\n                </>\n        )\n      }}\n    </Query>\n    </div>\n    )\n  }\n\n  _error = async error => {\n\n      const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n      this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n      error.networkError &&\n        this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n  }\n\n  _confirm = async data => {\n    this.props.history.push(`/quandrio_dashboard`)\n  }\n}\n\n\nexport default InstitutionDashboard\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Form, Input, Button, Message } from 'semantic-ui-react'\nimport InstitutionHeader from '../components/InstitutionHeader'\nimport Loading from './Loading'\nimport { Query, Mutation } from \"react-apollo\"\nimport Error from './Error'\n\nimport {INSTITUTION_QUERY, SIGNUP_ADMIN_MUTATION} from '../ApolloQueries'\n\nclass AddAdministrator extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    title:'',\n    department:'',\n    address1:'',\n    address2: '',\n    city: '',\n    state: '',\n    zip: '',\n    phone: '',\n    graphQLError: '',\n    isVisibleGraph:false,\n    networkError:false,\n    isVisibleNet:false,\n  }\n\n  render() {\n\n    const { institutionId }= this.props.location.state\n    const { email, password,firstName,lastName, title, department, address1,    address2,    city,    state,  zip,    phone, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n    return (\n\n      <div className=\"main\">\n\n      <InstitutionHeader institutionId={institutionId} />\n\n    <Query query={INSTITUTION_QUERY} variables={{ institutionId: institutionId }} fetchPolicy=\"cache-and-network\" >\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error}/>\n\n            const {id } = data.institution\n\n        return (\n\n              <div style={{marginRight:'250px',marginTop:'25px',marginLeft:'250px'}} >\n\n              <h2>Add Administrator</h2>\n\n              <Form size=\"big\">\n\n              <Form.Group >\n\n              <Form.Field required\n                control={Input}\n                label='First Name'\n                value={firstName}\n                onChange={e => this.setState({ firstName: e.target.value })}\n                placeholder='First Name'\n                width={8}\n              />\n\n              <Form.Field required\n                control={Input}\n                label='Last Name'\n                value={lastName}\n                onChange={e => this.setState({ lastName: e.target.value })}\n                placeholder='Last Name'\n                width={8}\n              />\n\n              </Form.Group >\n\n              <Form.Group >\n\n              <Form.Field\n                control={Input}\n                label='Title'\n                value={title}\n                onChange={e => this.setState({ title: e.target.value })}\n                placeholder='Title'\n                width={6}\n              />\n\n              <Form.Field\n                control={Input}\n                label='Department'\n                value={department}\n                onChange={e => this.setState({ department: e.target.value })}\n                placeholder='Department'\n                width={6}\n              />\n\n              <Form.Field\n                id='phone'\n                control={Input}\n                label='Phone'\n                value={phone}\n                onChange={e => this.setState({ phone: e.target.value })}\n                placeholder='Phone'\n                width={4}\n              />\n\n              </Form.Group>\n\n              <Form.Field\n                id='address1'\n                control={Input}\n                label='Address 1'\n                value={address1}\n                onChange={e => this.setState({ address1: e.target.value })}\n                placeholder='Address 1'\n              />\n\n              <Form.Field\n                id='address2'\n                control={Input}\n                label='Address 2'\n                value={address2}\n                onChange={e => this.setState({ address2: e.target.value })}\n                placeholder='Address 2'\n              />\n\n              <Form.Group>\n              <Form.Field\n                id='city'\n                control={Input}\n                label='City'\n                value={city}\n                onChange={e => this.setState({ city: e.target.value })}\n                placeholder='City'\n                width={8}\n              />\n\n              <Form.Field\n                id='state'\n                control={Input}\n                label='State'\n                value={state}\n                onChange={e => this.setState({ state: e.target.value })}\n                placeholder='State'\n                width={4}\n              />\n\n              <Form.Field\n                id='zip'\n                control={Input}\n                label='Zip'\n                value={zip}\n                onChange={e => this.setState({ zip: e.target.value })}\n                placeholder='Zip'\n                width={4}\n              />\n              </Form.Group>\n\n\n                <Mutation\n                    mutation={SIGNUP_ADMIN_MUTATION}\n                    variables={{ email:email,\n                      password:password,\n                      firstName: firstName,\n                      lastName: lastName,\n                      title: title,\n                      department: department,\n                      address1:address1,\n                      address2: address2,\n                      city: city,\n                      state: state,\n                      zip: zip,\n                      phone: phone,\n                      role: 'ADMIN',\n                      institutionId:id }}\n                    onCompleted={data => this._confirm(data)}\n                  >\n                    {mutation => (\n                      <Button color='blue' onClick={mutation}>Submit</Button>\n                    )}\n                  </Mutation>\n\n\n                </Form>\n\n                {isVisibleGraph &&\n                  <Message negative>\n                    <p><b>{graphQLError}</b></p>\n                  </Message>\n                }\n\n                {isVisibleNet &&\n                  <Message negative>\n                    <p><b>{networkError}</b></p>\n                  </Message>\n                }\n\n                  </div>\n\n\n        )\n      }}\n    </Query>\n      </div>\n    )\n  }\n\n  _error = async error => {\n\n      const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n      this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n      error.networkError &&\n        this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n  }\n\n  _confirm = async data => {\n    const { institutionId }= this.props.location.state\n    this.props.history.push({\n      pathname: `/institution_dashboard`,\n      state: { institutionId: institutionId  }\n      })\n  }\n}\n\n\nexport default AddAdministrator\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Form, Input, Button, Message } from 'semantic-ui-react'\nimport InstitutionHeader from '../components/InstitutionHeader'\n\nimport { Query, Mutation } from \"react-apollo\"\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport {INSTITUTION_QUERY, SIGNUP_TEACHER_MUTATION} from '../ApolloQueries'\n\nclass AddTeacherQuandrio extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    title:'',\n    department:'',\n    address1:'',\n    address2: '',\n    city: '',\n    state: '',\n    zip: '',\n    phone: '',\n    graphQLError: '',\n    isVisibleGraph:false,\n    networkError:false,\n    isVisibleNet:false,\n  }\n\n  render() {\n\n    const { institutionId }= this.props.location.state\n    const { email, password,firstName,lastName, title, department, address1,    address2,    city,    state,  zip,    phone, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n    return (\n      <div className=\"main\">\n\n      <InstitutionHeader institutionId={institutionId} />\n\n    <Query query={INSTITUTION_QUERY} variables={{ institutionId: institutionId }} fetchPolicy=\"cache-and-network\" >\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error}/>\n\n            const {id } = data.institution\n\n        return (\n              <div style={{marginRight:'250px',marginTop:'25px',marginLeft:'250px'}} >\n\n              <h2>Add Teacher</h2>\n\n              <Form size=\"big\">\n\n              <Form.Group >\n\n              <Form.Field required\n                control={Input}\n                label='First Name'\n                value={firstName}\n                onChange={e => this.setState({ firstName: e.target.value })}\n                placeholder='First Name'\n                width={8}\n              />\n\n              <Form.Field required\n                control={Input}\n                label='Last Name'\n                value={lastName}\n                onChange={e => this.setState({ lastName: e.target.value })}\n                placeholder='Last Name'\n                width={8}\n              />\n\n              </Form.Group >\n\n              <Form.Group >\n\n              <Form.Field\n                control={Input}\n                label='Title'\n                value={title}\n                onChange={e => this.setState({ title: e.target.value })}\n                placeholder='Title'\n                width={6}\n              />\n\n              <Form.Field\n                control={Input}\n                label='Department'\n                value={department}\n                onChange={e => this.setState({ department: e.target.value })}\n                placeholder='Department'\n                width={6}\n              />\n\n              <Form.Field\n                id='phone'\n                control={Input}\n                label='Phone'\n                value={phone}\n                onChange={e => this.setState({ phone: e.target.value })}\n                placeholder='Phone'\n                width={4}\n              />\n\n              </Form.Group>\n\n              <Form.Field\n                id='address1'\n                control={Input}\n                label='Address 1'\n                value={address1}\n                onChange={e => this.setState({ address1: e.target.value })}\n                placeholder='Address 1'\n              />\n\n              <Form.Field\n                id='address2'\n                control={Input}\n                label='Address 2'\n                value={address2}\n                onChange={e => this.setState({ address2: e.target.value })}\n                placeholder='Address 2'\n              />\n\n              <Form.Group>\n              <Form.Field\n                id='city'\n                control={Input}\n                label='City'\n                value={city}\n                onChange={e => this.setState({ city: e.target.value })}\n                placeholder='City'\n                width={8}\n              />\n\n              <Form.Field\n                id='state'\n                control={Input}\n                label='State'\n                value={state}\n                onChange={e => this.setState({ state: e.target.value })}\n                placeholder='State'\n                width={4}\n              />\n\n              <Form.Field\n                id='zip'\n                control={Input}\n                label='Zip'\n                value={zip}\n                onChange={e => this.setState({ zip: e.target.value })}\n                placeholder='Zip'\n                width={4}\n              />\n              </Form.Group>\n\n              <Mutation\n                  mutation={SIGNUP_TEACHER_MUTATION}\n                  variables={{ email:email,\n                    password:password,\n                    firstName: firstName,\n                    lastName: lastName,\n                    title: title,\n                    department: department,\n                    address1:address1,\n                    address2: address2,\n                    city: city,\n                    state: state,\n                    zip: zip,\n                    phone: phone,\n                    role: 'TEACHER',\n                    institutionId:id }}\n                  onCompleted={data => this._confirm(data)}\n                >\n                  {mutation => (\n                    <Button color='blue' onClick={mutation}>Submit</Button>\n                  )}\n                </Mutation>\n\n                </Form>\n\n                {isVisibleGraph &&\n                  <Message negative>\n                    <p><b>{graphQLError}</b></p>\n                  </Message>\n                }\n\n                {isVisibleNet &&\n                  <Message negative>\n                    <p><b>{networkError}</b></p>\n                  </Message>\n                }\n\n                  </div>\n\n\n        )\n      }}\n    </Query>\n      </div>\n    )\n  }\n\n  _error = async error => {\n\n      const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n      this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n      error.networkError &&\n        this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n  }\n\n  _confirm = async data => {\n    const { institutionId }= this.props.location.state\n    this.props.history.push({\n      pathname: `/institution_dashboard`,\n      state: { institutionId: institutionId  }\n      })\n  }\n}\n\n\nexport default AddTeacherQuandrio\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Form, Input, Button, Select, Message } from 'semantic-ui-react'\nimport {withRouter} from \"react-router-dom\"\n\nimport { Mutation } from \"react-apollo\"\n\nimport {EDIT_INSTITUTION_MUTATION,INSTITUTION_QUERY} from '../ApolloQueries'\n\nclass EditInstitutionInput extends Component {\n\n  state = {\n        name:this.props.name,\n        address1:this.props.address1,\n        address2: this.props.address2,\n        city: this.props.city,\n        state: this.props.state,\n        zip: this.props.zip,\n        phone: this.props.phone,\n        email: this.props.email,\n        type: this.props.type,\n        graphQLError: false,\n        isVisibleGraph:false,\n        networkError:false,\n        isVisibleNet:false,\n      }\n\nrender() {\n\n  const { name, type, address1,    address2,    city,    state,  zip,    phone,  email, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n  const institutionTypes = [{value:\"University\",text:\"University\"},\n                            {value:\"Community College\",text:\"Community College\"},\n                            {value:\"High School\",text:\"High School\"},\n                            {value:\"Junior High School\",text:\"Junior High School\"},\n                            {value:\"Language School\",text:\"Language School\"},\n                            {value:\"Vocational School\",text:\"Vocational School\"},\n                            {value:\"Business\",text:\"Business\"},]\n\n\n  return (\n\n\n      <div style={{marginRight:'250px',marginLeft:'250px'}} >\n\n      <h2 style={{padding:'25px'}}>Edit Institution</h2>\n\n      <Form size=\"big\">\n\n      <Form.Field required\n        id='name'\n        control={Input}\n        label='Institution Name'\n        value={name}\n        onChange={e => this.setState({ name: e.target.value })}\n        placeholder='Institution Name'\n      />\n\n      <Form.Field\n        id='address1'\n        control={Input}\n        label='Address 1'\n        value={address1}\n        onChange={e => this.setState({ address1: e.target.value })}\n        placeholder='Address 1'\n      />\n\n      <Form.Field\n        id='address2'\n        control={Input}\n        label='Address 2'\n        value={address2}\n        onChange={e => this.setState({ address2: e.target.value })}\n        placeholder='Address 2'\n      />\n\n      <Form.Group>\n      <Form.Field\n        id='city'\n        control={Input}\n        label='City'\n        value={city}\n        onChange={e => this.setState({ city: e.target.value })}\n        placeholder='City'\n        width={8}\n      />\n\n      <Form.Field\n        id='state'\n        control={Input}\n        label='State'\n        value={state}\n        onChange={e => this.setState({ state: e.target.value })}\n        placeholder='State'\n        width={4}\n      />\n\n      <Form.Field\n        id='zip'\n        control={Input}\n        label='Zip'\n        value={zip}\n        onChange={e => this.setState({ zip: e.target.value })}\n        placeholder='Zip'\n        width={4}\n      />\n      </Form.Group>\n\n      <Form.Group>\n      <Form.Field\n        id='phone'\n        control={Input}\n        label='Phone'\n        value={phone}\n        onChange={e => this.setState({ phone: e.target.value })}\n        placeholder='Phone'\n        width={6}\n      />\n\n      <Form.Field\n        id='email'\n        control={Input}\n        label='Email'\n        value={email}\n        onChange={e => this.setState({ email: e.target.value })}\n        placeholder='Email'\n        width={10}\n      />\n\n      </Form.Group>\n\n      <Form.Field required\n        id='institutionType'\n        control={Select}\n        options={institutionTypes}\n        value={type}\n        onChange={(event, {value}) => { this.setState({ type: value })}}\n        label='Institution Type'\n        fluid\n        selection\n        placeholder='Select Institution Type'\n      />\n\n      </ Form>\n\n        <Mutation\n            mutation={EDIT_INSTITUTION_MUTATION}\n            variables={{\n              id:this.props.id,\n              name: name,\n              type:type,\n              address1:address1,\n              address2: address2,\n              city: city,\n              state: state,\n              zip: zip,\n              phone: phone,\n              email: email,\n            }}\n            onError={error => this._error (error)}\n            onCompleted={data => this._confirm(data)}\n            refetchQueries={() => { return [{\n                query: INSTITUTION_QUERY\n                }]\n              }}\n            >\n            {mutation => (\n              <div style={{padding:'15px'}}>\n              <Button color='blue' onClick={mutation}>Submit</Button>\n              </div>\n            )}\n          </Mutation>\n\n          {isVisibleGraph &&\n            <Message negative>\n              <p><b>{graphQLError}</b></p>\n            </Message>\n          }\n\n          {isVisibleNet &&\n            <Message negative>\n              <p><b>{networkError}</b></p>\n            </Message>\n          }\n\n          </div>\n      )\n    }\n\n    _error = async error => {\n\n        const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n        this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n        error.networkError &&\n          this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n    }\n\n    _confirm = async data => {\n\n      this.props.history.push({\n        pathname: `/institution_dashboard`,\n        state: { institutionId: this.props.id  }\n        })\n    }\n\n  }\n\nexport default withRouter(EditInstitutionInput)\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport EditInstitutionInput from '../components/EditInstitutionInput'\nimport InstitutionHeader from '../components/InstitutionHeader'\n\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport { Query } from \"react-apollo\"\n\nimport {INSTITUTION_QUERY} from '../ApolloQueries'\n\nclass EditInstitution extends Component {\n\nrender() {\n\n  const { institutionId }= this.props.location.state\n\n  return (\n\n\n    <div className=\"main\">\n\n      <div className=\"container\">\n\n      <InstitutionHeader institutionId={institutionId} />\n\n      <Query query={INSTITUTION_QUERY} variables={{ institutionId: institutionId }} fetchPolicy=\"cache-and-network\" >\n            {({ loading, error, data }) => {\n              if (loading) return <Loading />\n              if (error) return <Error {...error}/>\n\n          return (\n            <>\n\n            <EditInstitutionInput {...data.institution} />\n            </>\n          )\n        }}\n      </Query>\n\n      </div>\n      </div>\n      )\n    }\n\n  }\n\nexport default EditInstitution\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport {withRouter} from \"react-router-dom\"\nimport { Form, Input, Button, Message, Select } from 'semantic-ui-react'\n\nimport { Mutation } from \"react-apollo\"\n\nimport {EDIT_PERSONNEL_MUTATION} from '../ApolloQueries'\n\nclass EditAdministratorInput extends Component {\n\n  state = {\n    email: this.props.email,\n    firstName: this.props.firstName,\n    lastName: this.props.lastName,\n    title:this.props.title,\n    department:this.props.department,\n    address1:this.props.address1,\n    address2: this.props.address2,\n    city: this.props.city,\n    state: this.props.state,\n    zip: this.props.zip,\n    phone: this.props.phone,\n    role: this.props.role,\n    graphQLError: '',\n    isVisibleGraph:false,\n    networkError:'',\n    isVisibleNet:false,\n  }\n\n  render() {\n\n    const { email, firstName,lastName, title, department, address1,    address2,    city,    state,  zip,    phone, role, graphQLError, networkError, isVisibleNet, isVisibleGraph } = this.state\n\n    const roleTypes = [{value:\"ADMIN\",text:\"Administrator\"},\n                              {value:\"TEACHER\",text:\"Teacher\"}]\n\n    return (\n\n              <>\n              <Form size=\"big\">\n\n              <Form.Group >\n\n              <Form.Field required\n                control={Input}\n                label='First Name'\n                value={firstName}\n                onChange={e => this.setState({ firstName: e.target.value })}\n                placeholder='First Name'\n                width={8}\n              />\n\n              <Form.Field required\n                control={Input}\n                label='Last Name'\n                value={lastName}\n                onChange={e => this.setState({ lastName: e.target.value })}\n                placeholder='Last Name'\n                width={8}\n              />\n\n              </Form.Group >\n\n              <Form.Group >\n\n              <Form.Field\n                control={Input}\n                label='Title'\n                value={title}\n                onChange={e => this.setState({ title: e.target.value })}\n                placeholder='Title'\n                width={4}\n              />\n\n              <Form.Field\n                control={Input}\n                label='Department'\n                value={department}\n                onChange={e => this.setState({ department: e.target.value })}\n                placeholder='Department'\n                width={4}\n              />\n\n\n\n              <Form.Field\n                id='phone'\n                control={Input}\n                label='Phone'\n                value={phone}\n                onChange={e => this.setState({ phone: e.target.value })}\n                placeholder='Phone'\n                width={4}\n              />\n\n              <Form.Field required\n                id='roleType'\n                control={Select}\n                options={roleTypes}\n                value={role}\n                onChange={(event, {value}) => { this.setState({ role: value })}}\n                label='Role'\n                fluid\n                selection\n                placeholder='Role'\n                width={4}\n              />\n\n              </Form.Group>\n\n              <Form.Field\n                id='address1'\n                control={Input}\n                label='Address 1'\n                value={address1}\n                onChange={e => this.setState({ address1: e.target.value })}\n                placeholder='Address 1'\n              />\n\n              <Form.Field\n                id='address2'\n                control={Input}\n                label='Address 2'\n                value={address2}\n                onChange={e => this.setState({ address2: e.target.value })}\n                placeholder='Address 2'\n              />\n\n              <Form.Group>\n              <Form.Field\n                id='city'\n                control={Input}\n                label='City'\n                value={city}\n                onChange={e => this.setState({ city: e.target.value })}\n                placeholder='City'\n                width={8}\n              />\n\n              <Form.Field\n                id='state'\n                control={Input}\n                label='State'\n                value={state}\n                onChange={e => this.setState({ state: e.target.value })}\n                placeholder='State'\n                width={4}\n              />\n\n              <Form.Field\n                id='zip'\n                control={Input}\n                label='Zip'\n                value={zip}\n                onChange={e => this.setState({ zip: e.target.value })}\n                placeholder='Zip'\n                width={4}\n              />\n              </Form.Group>\n\n\n                <Mutation\n                    mutation={EDIT_PERSONNEL_MUTATION}\n                    variables={{\n                      userId: this.props.id,\n                      email:email,\n                      firstName: firstName,\n                      lastName: lastName,\n                      title: title,\n                      department: department,\n                      address1:address1,\n                      address2: address2,\n                      city: city,\n                      state: state,\n                      zip: zip,\n                      phone: phone}}\n                    onCompleted={data => this._confirm(data)}\n                    onError={error => this._error (error)}\n                  >\n                    {mutation => (\n                      <Button color='blue' onClick={mutation}>Submit</Button>\n                    )}\n                  </Mutation>\n\n\n                </Form>\n\n                {isVisibleGraph &&\n                  <Message negative>\n                    <p><b>{graphQLError}</b></p>\n                  </Message>\n                }\n\n                {isVisibleNet &&\n                  <Message negative>\n                    <p><b>{networkError}</b></p>\n                  </Message>\n                }\n                </>\n\n\n\n    )\n  }\n\n  _error = async error => {\n\n      const gerrorMessage = error.graphQLErrors.map((err,i) => err.message)\n      this.setState({ isVisibleGraph: true, graphQLError: gerrorMessage})\n\n      error.networkError &&\n        this.setState({ isVisibleNet: true, networkError: error.networkError.message})\n\n  }\n\n  _confirm = async data => {\n    const { id } = this.props\n    this.props.history.push({\n      pathname: `/personnel_dashboard`,\n      state: { userId: id,\n      institutionId: this.props.institutionId  }\n      })\n  }\n}\n\n\nexport default withRouter(EditAdministratorInput)\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport InstitutionHeader from '../components/InstitutionHeader'\nimport EditAdministratorInput from '../components/EditAdministratorInput'\n\n\nimport { Query } from \"react-apollo\"\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport { PERSONNEL_QUERY } from '../ApolloQueries'\n\nclass EditAdministrator extends Component {\n\n  render() {\n\n    const { institutionId, userId, personnelType  }= this.props.location.state\n\n    return (\n      <div className=\"main\">\n      <InstitutionHeader institutionId={institutionId} />\n\n        <Query query={PERSONNEL_QUERY} variables={{ userId: userId }} fetchPolicy=\"cache-and-network\" >\n              {({ loading, error, data }) => {\n                if (loading) return <Loading />\n                if (error) return <Error {...error}/>\n\n            return (\n\n              <div style={{marginRight:'250px',marginTop:'25px',marginLeft:'250px'}} >\n\n              <h2>Edit {personnelType}</h2>\n\n              <EditAdministratorInput institutionId={institutionId} {...data.user} />\n\n              </div>\n\n        )\n      }}\n    </Query>\n    </div>\n    )\n  }\n\n}\n\n\nexport default EditAdministrator\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass InstitutionCoursesPersonnel extends Component {\n  state = {\n    column: null,\n    data: this.props.courses,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n      <Segment style={{ height: 400, overflow: 'auto' }} attached>\n      <Table sortable celled fixed  >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('name')}\n              >\n                Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'students' ? direction : null}\n                onClick={this.handleSort('students')}\n              >\n                Institution\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'students' ? direction : null}\n                onClick={this.handleSort('students')}\n              >\n                Students\n              </Table.HeaderCell>\n\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {_.map(data, ({ id, name, institution, students }) => (\n              <Table.Row key={id}>\n                <Table.Cell>\n                <Link  to={{\n                  pathname: \"/institution_course\",\n                  state:\n                  { institutionId: this.props.institutionId, courseId: id }\n                  }} >\n                  {name}\n                  </Link></Table.Cell>\n                  <Table.Cell>{institution.name}</Table.Cell>\n                <Table.Cell>{students.length}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Segment>\n    )\n  }\n}\n\nexport default InstitutionCoursesPersonnel\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport { Button, Grid, Segment, Card } from 'semantic-ui-react'\nimport InstitutionHeader from '../components/InstitutionHeader'\nimport InstitutionCoursesPersonnel from '../components/InstitutionCoursesPersonnel'\n\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport { Query } from \"react-apollo\"\n\nimport { PERSONNEL_QUERY } from '../ApolloQueries'\n\nclass PersonnelDashboard extends Component {\n\n  activeCouresSwitch = (teacherCoursesActive,studentCoursesActive) => {\n    if (teacherCoursesActive.length>0){\n      return teacherCoursesActive\n    } else {\n      return studentCoursesActive\n    }\n  }\n\n  render() {\n\n    const { institutionId, userId  }= this.props.location.state\n\n    return (\n    <div className=\"main\">\n\n        <InstitutionHeader institutionId={institutionId} />\n\n        <Query query={PERSONNEL_QUERY} variables={{ userId: userId }} fetchPolicy=\"cache-and-network\" >\n              {({ loading, error, data }) => {\n                if (loading) return <Loading />\n                if (error) return <Error {...error} />\n\n                const { firstName, role, lastName, title, department, address1, address2, city, state, zip, phone, email, teacherCourses, studentCourses } = data.user\n                const teacherCoursesActive = teacherCourses.filter(course => !course.deleted)\n                const studentCoursesActive = studentCourses.filter(course => !course.deleted)\n\n                const coursesActive = this.activeCouresSwitch(teacherCoursesActive,studentCoursesActive)\n\n            return (\n\n              <div style={{marginRight:'150px',marginTop:'25px',marginLeft:'150px'}} >\n              <Grid columns={2}>\n                <Grid.Row>\n                <Grid.Column width={6}>\n              <Card >\n\n              <Card.Content>\n              {role==='TEACHER' &&\n              <h4>Teacher</h4>}\n\n              {role==='ADMIN' &&\n              <h4>Administrator</h4>}\n\n              {role==='STUDENT' &&\n              <h4>Student</h4>}\n\n              <hr/>\n              <h3>{firstName} {lastName}</h3>\n\n              <Card.Meta>{title} {department}</Card.Meta>\n              <hr/>\n              <Card.Description>\n\n              {!!address1 &&\n              <>\n              <p>\n              <b>Institution Address:</b>\n              </p>\n               <p>\n               {address1}\n               </p>\n\n               <p>\n               {address2}\n               </p>\n               <p>\n               {city }, {state }  {zip}\n               </p>\n               <hr/>\n               </>\n             }\n               <p>\n               <b>Email:</b> <a href={\"mailto:\"+email}>{email}</a>\n               </p>\n\n               {!!phone &&\n               <p>\n               <b>Phone:</b> {phone}\n               </p>\n             }\n               </Card.Description>\n               <hr/>\n\n               <Button color='blue' onClick={() => this.props.history.push({\n                 pathname: `/edit_admin`,\n                 state: { institutionId, userId }\n               })}>Edit</Button>\n\n             </Card.Content>\n             </Card>\n             </Grid.Column>\n\n             <Grid.Column width={10}>\n              <Segment  fluid=\"true\"  secondary attached='top'>\n              {coursesActive.length} Courses\n              </Segment>\n\n                <InstitutionCoursesPersonnel institutionId={institutionId} courses={coursesActive} />\n\n              </Grid.Column>\n              </Grid.Row>\n              </Grid>\n\n              </div>\n\n        )\n      }}\n    </Query>\n    </div>\n    )\n  }\n}\n\n\nexport default PersonnelDashboard\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass CoursePeople extends Component {\n  state = {\n    column: null,\n    data: this.props.people,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n      <Segment style={{ minHeight: 400, overflow: 'auto' }} attached>\n      <Table sortable celled fixed  >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('firstName')}\n              >\n                First Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('lastName')}\n              >\n                Last Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'email' ? direction : null}\n                onClick={this.handleSort('email')}\n              >\n                Email\n              </Table.HeaderCell>\n\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {_.map(data, ({ id, firstName, lastName, email }) => (\n              <Table.Row key={id}>\n              <Table.Cell>\n              <Link  to={{\n                pathname: \"/personnel_dashboard\",\n                state:\n                { userId: id,\n                  institutionId: this.props.institutionId }\n                }} >\n                {firstName}\n                </Link><\n                /Table.Cell>\n              <Table.Cell>\n              <Link  to={{\n                pathname: \"/personnel_dashboard\",\n                state:\n                { userId: id,\n                institutionId: this.props.institutionId }\n                }} >\n                {lastName}\n                </Link>\n                </Table.Cell>\n                <Table.Cell><a href={\"mailto:\"+email}>{email}</a></Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Segment>\n    )\n  }\n}\n\nexport default CoursePeople\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nclass InstitutionCoursesTable extends Component {\n  state = {\n    column: null,\n    data: this.props,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n\n      <Table sortable celled fixed  >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('name')}\n              >\n                Subject\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'students' ? direction : null}\n                onClick={this.handleSort('questions')}\n              >\n                Questions\n              </Table.HeaderCell>\n\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {_.map(data, ({ id, subject, questions }) => (\n              <Table.Row key={id}>\n                <Table.Cell>{subject}</Table.Cell>\n                <Table.Cell>{questions.length}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n\n    )\n  }\n}\n\nexport default InstitutionCoursesTable\n","\nimport React,{Component} from 'react'\nimport '../css/App.css'\nimport { Grid, Segment } from 'semantic-ui-react'\nimport InstitutionHeader from '../components/InstitutionHeader'\nimport CoursePeople from '../components/CoursePeople'\nimport InstitutionCoursesTable from '../components/InstitutionCoursesTable'\n\nimport { Query } from \"react-apollo\"\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport { COURSE_QUERY } from '../ApolloQueries'\n\nclass InstitutionCourse extends Component {\n\n  render() {\n\n    const { institutionId, courseId }= this.props.location.state\n\n    return (\n\n      <div className=\"main\">\n\n\n              <InstitutionHeader institutionId={institutionId} />\n\n              <Query query={COURSE_QUERY} variables={{ courseid: courseId }} fetchPolicy=\"cache-and-network\" >\n                    {({ loading, error, data }) => {\n                      if (loading) return <Loading />\n                      if (error) return <Error {...error}/>\n\n                      const {name, teachers, students, courseNumber, time, tests } = data.course\n\n                    const testActive = tests.filter(test => !test.deleted)\n                    const questionNum = tests.map(test => test.questions.length).reduce((a,b) => a + b, 0)\n                    const flattened = tests.map(test => test.questions).flat()\n                    const answers = flattened.map(q => q.questionAnswers).flat()\n                    const answersNum = answers.length\n                    const correct = answers.filter(q => q.answerCorrect).length\n                    const percentCorrect = Math.round(correct/answersNum*100)\n\n                  return (\n\n              <div style={{margin:25}}>\n\n              <h3>{name} - {courseNumber}</h3>\n              <h5>{time} </h5>\n\n              <Grid columns={3} stackable className=\"fill-content\">\n                <Grid.Row stretched>\n\n                <Grid.Column>\n\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>Teachers</b></div>\n\n                </Segment>\n\n                <CoursePeople institutionId={institutionId}  people={teachers} />\n\n                </Grid.Column>\n\n                <Grid.Column >\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>Students</b></div>\n\n                </Segment>\n\n                <CoursePeople institutionId={institutionId}  people={students} />\n\n                </Grid.Column>\n\n                <Grid.Column >\n                <Segment  fluid=\"true\"  secondary attached='top'>\n\n                    <div><b>{testActive.length} Tests </b></div>\n\n                </Segment>\n\n                <Segment style={{ height: 400, overflow: 'auto' }} attached>\n\n                  <Grid celled columns={2}>\n                  <Grid.Row>\n                  <Grid.Column>\n                   <h6>Questions: {questionNum}</h6>\n                  </Grid.Column>\n                  <Grid.Column>\n                  <h6>Answers: {answersNum}</h6>\n                  </Grid.Column>\n                  </Grid.Row>\n\n                  <Grid.Row>\n                  <Grid.Column>\n                   <h6>Correct: {correct}</h6>\n                  </Grid.Column>\n                  <Grid.Column>\n                  <h6>Percent: {percentCorrect>0 ? percentCorrect : 0}%</h6>\n                  </Grid.Column>\n                  </Grid.Row>\n\n                  </Grid>\n\n\n                  <InstitutionCoursesTable {...testActive}/>\n\n                </Segment>\n\n                </Grid.Column>\n\n                </Grid.Row>\n\n                </Grid>\n                </div>\n\n              )\n            }}\n          </Query>\n            </div>\n    )\n  }\n\n}\n\n\nexport default InstitutionCourse\n","import _ from 'lodash'\nimport '../css/App.css';\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Table } from 'semantic-ui-react'\n\nclass CoursePeopleStudent extends Component {\n  state = {\n    column: null,\n    data: this.props.people,\n    direction: null,\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n\n    return (\n      <Segment style={{ minHeight: 400, overflow: 'auto' }} attached>\n      <Table sortable celled fixed  >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('firstName')}\n              >\n                First Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'name' ? direction : null}\n                onClick={this.handleSort('lastName')}\n              >\n                Last Name\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'email' ? direction : null}\n                onClick={this.handleSort('email')}\n              >\n                Email\n              </Table.HeaderCell>\n\n              <Table.HeaderCell\n                sorted={column === 'email' ? direction : null}\n                onClick={this.handleSort('email')}\n              >\n                Courses\n              </Table.HeaderCell>\n\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {_.map(data, ({ id, firstName, lastName, email, studentCourses }) => (\n              <Table.Row key={id}>\n              <Table.Cell>\n              <Link  to={{\n                pathname: \"/personnel_dashboard\",\n                state:\n                { userId: id,\n                  institutionId: this.props.institutionId }\n                }} >\n                {firstName}\n                </Link><\n                /Table.Cell>\n              <Table.Cell>\n              <Link  to={{\n                pathname: \"/personnel_dashboard\",\n                state:\n                { userId: id,\n                institutionId: this.props.institutionId }\n                }} >\n                {lastName}\n                </Link>\n                </Table.Cell>\n                <Table.Cell><a href={\"mailto:\"+email}>{email}</a></Table.Cell>\n                <Table.Cell>{studentCourses.length}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Segment>\n    )\n  }\n}\n\nexport default CoursePeopleStudent\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport InstitutionHeader from '../components/InstitutionHeader'\nimport CoursePeopleStudent from '../components/CoursePeopleStudent'\n\nimport { Query } from \"react-apollo\"\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport { INSTITUTION_QUERY } from '../ApolloQueries'\n\nclass InstitutionStudents extends Component {\n\n  render() {\n\n    const { institutionId }= this.props.location.state\n\n    return (\n      <div className=\"main\">\n\n      <InstitutionHeader institutionId={institutionId} />\n      <div style={{margin:25}}>\n\n    <Query query={INSTITUTION_QUERY} variables={{ institutionId: institutionId }} fetchPolicy=\"cache-and-network\" >\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return <Error {...error}/>\n\n            const { students } = data.institution\n\n        return (\n\n          <CoursePeopleStudent institutionId={institutionId}  people={students} />\n\n        )\n      }}\n    </Query>\n    </div>\n    </div>\n    )\n  }\n\n}\n\n\nexport default InstitutionStudents\n","import React,{Component} from 'react'\nimport '../css/App.css'\nimport * as Cookies from \"js-cookie\"\nimport { Grid, Segment, Loader } from 'semantic-ui-react'\nimport TestHeaderStudent from '../components/TestHeaderStudent'\n\nimport ChallengeSection from '../components/ChallengeSection3'\nimport ChallengeDList from '../components/ChallengeDList'\n\n\nimport { Query } from \"react-apollo\"\nimport Error from './Error'\nimport Loading from './Loading'\n\nimport {TEST_CHALLENGE_QUERY,CHALLENGE_DASHBOARD_STUDENT_QUERY,NEW_CHALLENGE_SUBSCRIPTION} from '../ApolloQueries'\n\nclass ChallengeDashboardStudent extends Component {\n\n  state = {\n    challengeId: '',\n    test_id:this.props.location.state.test_id\n  }\n\n  changeChallenge = (challengeId) =>\n    this.setState({challengeId:challengeId})\n\n\n  render() {\n\n    const {challengeId, test_id} = this.state\n    const userId = Cookies.get('userid')\n\n      return (\n\n\n            <div className=\"main\">\n\n                <div className=\"container\">\n\n                <Query query={TEST_CHALLENGE_QUERY} variables={{ testId: test_id }}>\n                      {({ loading, error, data }) => {\n                        if (loading) return <Loading />\n                        if (error) return <Error {...error}/>\n\n                        const testToRender = data.test\n\n                    return (\n\n                      <TestHeaderStudent {...testToRender} />\n                    )\n                  }\n                }\n                </Query>\n\n                <Query query={CHALLENGE_DASHBOARD_STUDENT_QUERY} variables={{ testId: test_id, userId: userId }}>\n                      {({ loading, error, data, subscribeToMore }) => {\n                        if (loading) return <Loader />\n                        if (error) return <Error {...error} />\n\n                        const challenges = data.challenges.challenges\n\n                        const initialChallengeId = challenges[0].id\n\n                    return (\n\n                  <div className=\"coursecontainer\">\n\n                  <Grid columns={2} >\n                  <Grid.Row >\n                  <Grid.Column width={6}>\n\n                  <ChallengeDList\n                      challenges={challenges}\n                      changeChallenge={this.changeChallenge}\n                      test_id={test_id}\n                      subscribeToNewChallenges={() =>\n                        subscribeToMore({\n                          document: NEW_CHALLENGE_SUBSCRIPTION,\n                          variables: {testId: test_id },\n                          updateQuery: (prev, { subscriptionData }) => {\n                            if (!subscriptionData.data) return prev\n                            let newChallenge = subscriptionData.data.newChallenge.node\n                            return  Object.assign({}, prev, {\n                              challenges: {\n                                challenges: [...prev.challenges.challenges, newChallenge],\n                                __typename: prev.challenges.__typename\n                            }\n                            })\n                        }\n                      })\n                    }\n                  />\n\n                  </Grid.Column >\n\n                  <Grid.Column centered='true' width={10}>\n\n                  <Segment style={{ minHeight: 500, overflow: 'auto' }} attached>\n\n                  <ChallengeSection changeChallenge={this.changeChallenge} initialChallengeId={initialChallengeId} challengeId={challengeId} />\n\n                  </Segment>\n                  </Grid.Column>\n                  </Grid.Row>\n                  </Grid>\n                  </div>\n\n\n                )\n              }\n              }\n          </Query>\n          </div>\n          </div>\n\n    )\n  }\n}\n\nexport default ChallengeDashboardStudent\n","import React,{Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport * as Cookies from \"js-cookie\"\nimport { Button } from 'semantic-ui-react'\nimport {withRouter} from \"react-router-dom\"\nimport { Mutation } from \"react-apollo\"\n\nimport {LOGOUT_MUTATION} from '../ApolloQueries'\n\nclass SignInButton extends Component {\n\n  render() {\n\n    const userid = Cookies.get('userid')\n    const token = Cookies.get('auth_token')\n    //const token = null\n    return (\n\n    token ?\n\n      <Mutation\n          mutation={LOGOUT_MUTATION}\n          variables={{ userId:userid }}\n          onCompleted={data => this._confirm(data)}\n        >\n          {mutation => (\n            <Button basic color='blue' size='large' onClick={mutation}>Sign Out</Button>\n          )}\n        </Mutation>\n\n          :\n          <Link to=\"/sign_in\"><Button size='large' basic color='blue'>Sign In</Button></Link>\n        )\n\n    }\n\n    _confirm = (data) => {\n      const { authMsg } = data.logout\n      sessionStorage.removeItem('userid')\n      sessionStorage.removeItem('auth_token')\n      sessionStorage.removeItem('user')\n      sessionStorage.setItem('online', false)\n\n      Cookies.remove('userid')\n      Cookies.remove('auth_token')\n      Cookies.remove('user')\n\n      this.props.history.push({\n        pathname: `/sign_out`,\n        state: { authMsg: authMsg }\n        })\n      }\n\n  }\n\nexport default withRouter(SignInButton)\n","import React,{Component} from 'react';\nimport '../css/App.css';\n//import { Button } from 'reactstrap';\nimport { Button } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\nclass DashboardButton extends Component {\n\n  navSwitch = (user) => {\n    if (!!user) {\n      switch (user.role) {\n        case 'TEACHER':\n          return <Link to=\"/teacher_dashboard\"> <Button size='large' basic color='blue'>Dashboard</Button></Link>\n        case 'STUDENT':\n        return <Link to=\"/student_dashboard\"> <Button size='large' basic color='blue'>Dashboard</Button></Link>\n        case 'ADMIN':\n          return <Link to=\"/admin_dashboard\"> <Button size='large' basic color='blue'>Dashboard</Button></Link>\n        case 'QUANDRIA':\n            return <Link to=\"/quandria_dashboard\"> <Button size='large' basic color='blue'>Dashboard</Button></Link>\n        default:\n          return <Link to=\"/sign_up\"><Button basic size='large' color='blue'>Sign Up</Button></Link>\n      }\n  } else {\n    return <Link to=\"/sign_up\"><Button basic size='large' color='blue'>Sign Up</Button></Link>\n  }\n}\n\n  render() {\n\n    return (\n      <>\n      {this.navSwitch(JSON.parse(sessionStorage.getItem('user')))}\n      </>\n    )\n\n}\n}\n\nexport default DashboardButton\n","import React from 'react';\nimport '../css/App.css';\nimport SignInButton from './SignInButton'\nimport DashboardButton from './DashboardButton'\nimport { Button } from 'semantic-ui-react'\n\nimport {Link} from 'react-router-dom'\n\n\nconst Nav = (props) =>\n\n  <div className=\"header\">\n    <div className=\"sign-button\">\n    <DashboardButton />\n    </div>\n    <div>\n    <Link  to=\"/\"><div><Button size='large' basic color='blue'>Quandrio</Button></div></Link>\n    </div>\n    <div className=\"sign-button\">\n    <SignInButton />\n    </div>\n  </div>\n\nexport default Nav\n","import React from 'react';\nimport '../css/App.css';\n\nconst Footer = () =>\n\n<footer className='footer'>\n  <div style={{padding:\"20px\"}}>© Quandrio 2018-2019</div>\n</footer>\n\nexport default Footer\n","import React,{Component }from 'react';\nimport { Route, Switch} from 'react-router-dom'\nimport './css/App.css';\n\nimport TeacherDashboard from './screens/TeacherDashboard'\nimport StudentDashboard from './screens/StudentDashboard'\nimport AdminDashboard from './screens/AdminDashboard'\nimport QuandrioDashboard from './screens/QuandrioDashboard'\nimport SignIn from './screens/SignIn'\nimport SignOut from './screens/SignOut'\nimport SignUp from './screens/SignUp'\nimport SignedUp from './screens/SignedUp'\nimport SignUpConfirmation from './screens/SignUpConfirmation'\nimport CourseDashboard from './screens/CourseDashboard'\nimport StudentCourseDashboard from './screens/StudentCourseDashboard'\nimport CourseInvitation from './screens/CourseInvitation'\nimport AddCourse from './screens/AddCourse'\nimport EditCourse from './screens/EditCourse'\nimport TestDashboard from './screens/TestDashboard'\nimport StudentTestDashboard from './screens/StudentTestDashboard'\nimport TestPanels from './screens/TestPanels'\nimport StudentTestPanels from './screens/StudentTestPanels'\nimport AddTest from './screens/AddTest'\nimport EditTest from './screens/EditTest'\nimport PublishTest from './screens/PublishTest1'\nimport EditPublishTest from './screens/EditPublishTest'\nimport AddPanels from './screens/AddPanels'\nimport Main from './screens/Main'\nimport StudentPerformance from './screens/StudentPerformance'\nimport StudentTestPerformance from './screens/StudentTestPerformance'\nimport ChallengeDashboard2 from './screens/ChallengeDashboard3'\nimport CourseStudents from './screens/CourseStudents'\nimport AddInstitution from './screens/AddInstitution'\nimport InstitutionDashboard from './screens/InstitutionDashboard'\nimport AddAdministrator from './screens/AddAdministrator'\nimport AddTeacherQuandrio from './screens/AddTeacherQuandrio'\nimport EditInstitution from './screens/EditInstitution'\nimport EditAdministrator from './screens/EditAdministrator'\nimport PersonnelDashboard from './screens/PersonnelDashboard'\nimport InstitutionCourse from './screens/InstitutionCourse'\nimport InstitutionStudents from './screens/InstitutionStudents'\nimport ChallengeDashboardStudent from './screens/ChallengeDashboardStudent'\n\n\n//import CourseDashboard from './screens/CourseDashboard2'\n\nimport Nav from './components/Nav'\nimport Footer from './components/Footer'\n\n// Add the reducer to your store on the `routing` key\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Main}/>\n          <Route path=\"/sign_in\" component={SignIn}/>\n          <Route path=\"/sign_out\" component={SignOut}/>\n          <Route path=\"/sign_up\" component={SignUp}/>\n          <Route path=\"/signed_up\" component={SignedUp}/>\n          <Route path=\"/confirm/:token/:email\" component={SignUpConfirmation}/>\n          <Route path=\"/teacher_dashboard\" component={TeacherDashboard}/>\n          <Route path=\"/student_dashboard\" component={StudentDashboard}/>\n          <Route path=\"/admin_dashboard\" component={AdminDashboard}/>\n          <Route path=\"/quandria_dashboard\" component={QuandrioDashboard}/>\n          <Route path=\"/course_dashboard\" component={CourseDashboard}/>\n          <Route path=\"/student_course_dashboard\" component={StudentCourseDashboard}/>\n          <Route path=\"/add_course\" component={AddCourse}/>\n          <Route path=\"/edit_course/\" component={EditCourse}/>\n          <Route path=\"/course_invitation/\" component={CourseInvitation}/>\n          <Route path=\"/test_dashboard/\" component={TestDashboard}/>\n          <Route path=\"/student_test_dashboard/\" component={StudentTestDashboard}/>\n          <Route path=\"/add_test/\" component={AddTest}/>\n          <Route path=\"/edit_test/\" component={EditTest}/>\n          <Route path=\"/add_panels\" component={AddPanels}/>\n          <Route path=\"/test_panels\" component={TestPanels}/>\n          <Route path=\"/student_test_panels\" component={StudentTestPanels}/>\n          <Route path=\"/student_performance/\" component={StudentPerformance}/>\n          <Route path=\"/student_test_performance/\" component={StudentTestPerformance}/>\n          <Route path=\"/challenge_dashboard\" component={ChallengeDashboard2}/>\n          <Route path=\"/publish_test\" component={PublishTest}/>\n          <Route path=\"/edit_publish_test\" component={EditPublishTest}/>\n          <Route path=\"/course_students\" component={CourseStudents}/>\n          <Route path=\"/add_institution\" component={AddInstitution}/>\n          <Route path=\"/institution_dashboard\" component={InstitutionDashboard}/>\n          <Route path=\"/add_admin\" component={AddAdministrator}/>\n          <Route path=\"/add_teacher\" component={AddTeacherQuandrio}/>\n          <Route path=\"/edit_admin\" component={EditAdministrator}/>\n          <Route path=\"/edit_institution\" component={EditInstitution}/>\n          <Route path=\"/personnel_dashboard\" component={PersonnelDashboard}/>\n          <Route path=\"/institution_course\" component={InstitutionCourse}/>\n          <Route path=\"/institution_students\" component={InstitutionStudents}/>\n          <Route path=\"/challenge_student_dashboard\" component={ChallengeDashboardStudent}/>\n\n        </Switch>\n        <Footer />\n      </div>\n      )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport * as Cookies from \"js-cookie\"\nimport ReactDOM from 'react-dom'\nimport registerServiceWorker from './registerServiceWorker'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { getMainDefinition } from 'apollo-utilities'\nimport { split } from 'apollo-link'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from 'react-apollo'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport App from './App'\n\n//const token1 = sessionStorage.getItem('auth_token')\nconst token1 = Cookies.get('auth_token')\n\nconst httpLink = createHttpLink({\n  uri: process.env.REACT_APP_GRAPHQL_SERVER,\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  }\n})\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.REACT_APP_GRAPHQL_SUB_SERVER,\n  options: {\n    reconnect: true,\n    connectionParams: {\n        authorization: token1 ? `Bearer ${token1}` : \"\",\n    },\n  }\n})\n\nconst authLink = setContext( async (_, { headers }) => {\n  const token = Cookies.get('auth_token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n})\n\nconst fullHttpLink = authLink.concat(httpLink)\n\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wsLink,\n  fullHttpLink,\n)\n\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <Router>\n    <ApolloProvider client={client}>\n      <Route path=\"/\" component={App} />\n    </ApolloProvider>\n  </Router>\n, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}